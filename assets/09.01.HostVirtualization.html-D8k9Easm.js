import{_ as n,c as o,b as t,a as e,d as a,o as s}from"./app-CfbBmV1V.js";const r={};function l(h,i){return s(),o("div",null,i[0]||(i[0]=[t("<p>As you study this section, answer the following questions:</p><ul><li> What is virtualization? </li><li> What is the difference between a virtual machine and a hypervisor? </li><li> What are the advantages of virtualization? </li><li> What are the disadvantages of virtualization? </li></ul><p>In this section, you will learn to:</p><ul><li> Create virtual machines. </li><li> Add virtual network adapters. </li><li> Manage virtual machines. </li></ul><p>Key terms for this section include the following:</p>",5),e("table",{class:"terms"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Term "),e("th",{scope:"col",class:"fw-bold"}," Definition ")])]),e("tbody",null,[e("tr",null,[e("td",null," Physical machine "),e("td",null," The physical computer with hardware, such as the hard disk drive(s), optical drive, RAM, and motherboard. ")]),e("tr",null,[e("td",null," Virtual machine "),e("td",null," A software implementation of a computer that executes programs like a physical machine. ")]),e("tr",null,[e("td",null,[a(" Virtual hard "),e("br"),a(" disk (VHD) ")]),e("td",null," A file that is created within the host operating system and simulates a hard disk for the virtual machine. ")]),e("tr",null,[e("td",null," Hypervisor "),e("td",null," A thin layer of software that resides between the guest operating system and the hardware. It creates and runs virtual machines. ")]),e("tr",null,[e("td",null," Load balancing "),e("td",null," A technique that disperses a workload between two or more computers or resources to achieve optimal resource utilization, throughput, or response time. ")])])],-1),e("p",null,"This section helps you prepare for the following certification exam objectives:",-1),e("table",{class:"objectives"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Exam "),e("th",{scope:"col",class:"fw-bold"}," Objective ")])]),e("tbody",null,[e("tr",null,[e("td",null," TestOut Security Pro "),e("td",null,[a(" 3.0 Host and Application Defense "),e("blockquote",null," 3.2 Implement Application Defenses ")])]),e("tr",null,[e("td",null," CompTIA Security+ SY0-601 "),e("td",null,[e("p",null," 2.2 Summarize virtualization and cloud computing concepts "),e("ul",null,[e("li",null," Thin client "),e("li",null," Containers "),e("li",null," Micro-services/API "),e("li",null,[a(" Virtualization "),e("ul",null,[e("li",null," Virtual machine (VM) sprawl avoidance "),e("li",null," VM escape protection ")])])])])])])],-1),t('<h2 id="_9-1-1-host-virtualization-overview" tabindex="-1"><a class="header-anchor" href="#_9-1-1-host-virtualization-overview"><span>9.1.1 Host Virtualization Overview</span></a></h2><h3 id="host-virtualization-overview-00-00-00-20" tabindex="-1"><a class="header-anchor" href="#host-virtualization-overview-00-00-00-20"><span>Host Virtualization Overview 00:00-00:20</span></a></h3><p>Let&#39;s spend a few minutes talking about virtualization and virtual network components.</p><p>Virtualization is a very important aspect of modern computing. But before we talk about what virtualization is and how it works, we first need to look at the way things have traditionally been done.</p><h3 id="traditional-computing-model-00-20-01-39" tabindex="-1"><a class="header-anchor" href="#traditional-computing-model-00-20-01-39"><span>Traditional Computing Model 00:20-01:39</span></a></h3><p>In the traditional computing model, we have one operating system, or OS, installed on one hardware device. In this example, we have hardware that consists of our CPU, storage, and memory resources. We need an operating system to run these resources, which could be Windows, Linux, or even macOS. Either way, we have one hardware device being managed by one operating system.</p><p>The operating system&#39;s role is to provide services for all the applications that run on the hardware device so that they can utilize the memory, storage, and CPU resources efficiently. Here we have App1, App2, App3, and App4. Each app makes its own requests for hardware resources, and then the OS makes that happen. For example, let&#39;s suppose you&#39;re going to install a new server in your data center. The first thing you&#39;d do is order your server hardware and then you&#39;d pick an operating system. When the server comes, you&#39;d install a server operating system on the hardware. The operating system has full reign over all the resources available on the server hardware, including RAM, processor time, storage devices, network interfaces, and so on. Finally, you&#39;d install applications on top of that operating system that would interact with system resources.</p><h3 id="problems-with-traditional-computing-model-01-39-02-40" tabindex="-1"><a class="header-anchor" href="#problems-with-traditional-computing-model-01-39-02-40"><span>Problems with Traditional Computing Model 01:39-02:40</span></a></h3><p>There&#39;s a fundamental problem with doing things this way—it&#39;s terribly inefficient. Usually, applications that run on the OS don&#39;t fully utilize all the hardware resources all the time. This is often true on a server system, and you find out that a lot of times your computing resources are actually underutilized. For example, you may see your CPU utilization hovering around 10% most of the time. You may also see that your memory utilization is likewise hovering at around 20%. This means 80-90% capacity is still available to perform additional computing tasks.</p><p>Servers are expensive, and wasted capacity means wasted dollars. Many times, servers are purchased for a specific purpose such as running web servers for individual apps. This can lead to server sprawl for the many underutilized servers This sucks up lots of power, puts out tons of heat, and costs an immense amount of money.</p><p>But there&#39;s a way to overcome this and consolidate all those servers into just a few, compact ones. That&#39;s where virtualization comes in.</p><h3 id="virtualization-roles-02-40-04-07" tabindex="-1"><a class="header-anchor" href="#virtualization-roles-02-40-04-07"><span>Virtualization Roles 02:40-04:07</span></a></h3><p>Virtualization enables you to run multiple servers on a single physical server, called a host, through hardware virtualization. When you do this, each independent operating system or virtual machine thinks it has all the hardware resources it needs and runs in its own little isolated container. So instead of the many underutilized servers in traditional networking, with virtualization we can put many servers together on one hardware chassis to fully utilize CPU, RAM, disk, and network subsystems.</p><p>Virtualization increases IT agility, allows for greater flexibility, delivers increased performance, and allows you to scale up quickly while enjoying significant cost savings. We&#39;ll get to some more important benefits in just a minute.</p><p>Nowadays, we can virtualize just about anything—operating systems, storage, apps, networking, desktops, and more. Virtualization can also be enabled in the cloud where much of the computing can be done remotely without you having to build and maintain your own data center. It also allows companies to build their own private clouds in their data centers to virtually deliver their homemade apps to their corporate users. Now users can use just about any device to securely access their workloads remotely at any place, anytime, anywhere. The power of virtualization is driving an immense, global, and increasingly mobile workforce.</p><h3 id="hypervisors-04-07-05-23" tabindex="-1"><a class="header-anchor" href="#hypervisors-04-07-05-23"><span>Hypervisors 04:07-05:23</span></a></h3><p>Virtualization starts with you installing a thin piece of software called a hypervisor, which decouples the virtual machines, or VMs, from the hardware and dynamically allocates resources as the virtual machines request them. Once the hypervisor is installed, you can then create virtual machines with their own operating system and apps.</p><p>Notice in this diagram we have our memory, storage, and CPU just like before. But instead of installing an operating system directly onto the host, we install a hypervisor to manage it.</p><p>On top of the hypervisor, we create virtual machines by allocating CPU, RAM, and storage. Generally, the more hardware you have on the host, the more virtual machines you can build. These physical servers that host multiple virtual machines have lots of processors and lots of RAM, and they&#39;re usually connected to an immense storage area network, or SAN, that&#39;s made to be fault tolerant.</p><p>Notice that each VM has its own OS and applications in an isolated container. Each VM makes calls to use each piece of hardware, and the hypervisor facilitates those requests. You can install just about any OS inside of a VM and then run apps built for that OS.</p><h3 id="hardware-virtualization-types-05-23-05-28" tabindex="-1"><a class="header-anchor" href="#hardware-virtualization-types-05-23-05-28"><span>Hardware Virtualization Types 05:23-05:28</span></a></h3><p>Before we go on, there are three kinds of hardware virtualization that you need to be familiar with.</p><h3 id="full-virtualization-05-28-06-00" tabindex="-1"><a class="header-anchor" href="#full-virtualization-05-28-06-00"><span>Full Virtualization 05:28-06:00</span></a></h3><p>The first type is called full virtualization. In full virtualization, the virtual machine completely emulates a real, physical host. This is good because it allows most operating systems and applications to run within that virtual machine without being modified in any way. The hypervisor fully decouples the operating system from the hardware. There are two types of full virtualization: bare-metal hypervisors (type 1) and hosted hypervisors (type 2). We&#39;ll learn more about these in just a minute.</p><h3 id="partial-virtualization-06-00-06-26" tabindex="-1"><a class="header-anchor" href="#partial-virtualization-06-00-06-26"><span>Partial Virtualization 06:00-06:26</span></a></h3><p>Another form of virtualization is called partial virtualization. In partial virtualization, some virtual machine components are virtualized while others aren&#39;t. In other words, the OS uses some virtual components and some physical components while it runs. It&#39;s important to note that an operating system can only run in a partial virtualization environment if that operating system has been specifically modified to do so.</p><h3 id="paravirtualization-06-26-07-08" tabindex="-1"><a class="header-anchor" href="#paravirtualization-06-26-07-08"><span>Paravirtualization 06:26-07:08</span></a></h3><p>The last type of virtualization is called paravirtualization. In paravirtualization, the hardware isn&#39;t virtualized at all. In other words, all the guest operating systems running on the hypervisor actually access various hardware resources in the physical devices directly. It doesn&#39;t virtualize any of the components. To do this, the guest operating systems run in isolated domains on the same physical hardware, which basically simulates running on separate systems. For an operating system to run on a paravirtualization environment, it must be specially modified to do so.</p><p>As you can see, a hypervisor is a fundamental component in any virtualization implementation.</p><h3 id="hypervisor-types-07-08-07-17" tabindex="-1"><a class="header-anchor" href="#hypervisor-types-07-08-07-17"><span>Hypervisor Types 07:08-07:17</span></a></h3><p>There are several different hypervisors that you can choose from, and they generally fall within two main categories: type 1 and type 2.</p><h3 id="type-1-hypervisors-07-17-07-48" tabindex="-1"><a class="header-anchor" href="#type-1-hypervisors-07-17-07-48"><span>Type 1 Hypervisors 07:17-07:48</span></a></h3><p>As we mentioned, type 1 hypervisors are installed directly onto the hardware and allow you to build VMs. This type is used in data centers to virtualize servers. Examples of type 1 hypervisors include VMware vSphere, Microsoft Hyper-V, Linux KVM, Citrix Hypervisor, Xen, and Oracle VM. These are enterprise-class hypervisors for serious, large-scale virtualization deployments that provide an array of management tools and feature-rich benefits.</p><h3 id="type-2-hypervisors-07-48-08-22" tabindex="-1"><a class="header-anchor" href="#type-2-hypervisors-07-48-08-22"><span>Type 2 Hypervisors 07:48-08:22</span></a></h3><p>Alternatively, we have type 2 hypervisors. Since type 2 hypervisors are hosted and run on top of a regular operating system, they allow you to get a test environment up and running quickly without having to buy huge systems. Examples of type 2 hypervisors are VMware Workstation, Oracle VirtualBox, and Microsoft Hyper-V which is built into Windows 8.1 and 10.</p><p>All these hypervisors perform basically the same role that we talked about before. They allow you to install multiple operating systems on a single physical server.</p><h3 id="virtualization-benefits-08-22-09-08" tabindex="-1"><a class="header-anchor" href="#virtualization-benefits-08-22-09-08"><span>Virtualization Benefits 08:22-09:08</span></a></h3><p>There are many benefits to implementing virtualization in your environment. The biggest drivers are reduced expenses and increased return on investment. Most virtualization platforms provide redundancy and load balancing, which minimize downtime. Also, unlike traditional computing where you have to go out and buy a physical server, you can spin up a virtual server in a fraction of the time. You can also take server snapshots in case you need to make a server rollback. An entire VM is stored in just a few files, and they can easily be copied or moved as you would any file. Finally, virtualization makes IT tasks much easier to manage and less costly.</p><p>With benefits like these, you can see why nearly all companies are using some form of virtualization in their business today.</p><h3 id="virtual-machine-escape-09-08-09-49" tabindex="-1"><a class="header-anchor" href="#virtual-machine-escape-09-08-09-49"><span>Virtual Machine Escape 09:08-09:49</span></a></h3><p>Before we finish, we need to discuss a possible virtualization attack. Virtual machine escape is one of the security threats an attacker can take advantage of from within a virtual machine. Typically after escaping</p><p>out of a guest virtual machine, an exploiter can execute code on the hypervisor or the host operating system. The threat actor can gain access to the primary hypervisor and perform administrative tasks like VM deletion, powering off, resource allocation, and much more. The best way to prevent virtual machine escape is to regularly patch your hypervisor. Keeping your hypervisor current goes a long way in preventing exploits.</p><h3 id="summary-09-49-10-11" tabindex="-1"><a class="header-anchor" href="#summary-09-49-10-11"><span>Summary 09:49-10:11</span></a></h3><p>That&#39;s it for this lesson. In this lesson, you were introduced to virtualization&#39;s common roles and functions. We discussed how virtualization works, different virtualization types, the hypervisors you can use, and virtualization benefits. We ended this lesson by discussing virtual machine escape and how you can prevent these attacks.</p><h2 id="_9-1-2-load-balancing-with-virtualization" tabindex="-1"><a class="header-anchor" href="#_9-1-2-load-balancing-with-virtualization"><span>9.1.2 Load Balancing with Virtualization</span></a></h2><h3 id="load-balancing-with-virtualization-00-00-00-20" tabindex="-1"><a class="header-anchor" href="#load-balancing-with-virtualization-00-00-00-20"><span>Load Balancing with Virtualization 00:00-00:20</span></a></h3><p>Virtualization provides many advantages above simply installing an operating system on a physical computer system. One powerful benefit and feature is load balancing. Let&#39;s look at how load balancing works with virtual machines, or VMs.</p><h3 id="clustering-and-load-balancing-00-20-01-02" tabindex="-1"><a class="header-anchor" href="#clustering-and-load-balancing-00-20-01-02"><span>Clustering and Load Balancing 00:20-01:02</span></a></h3><p>VMs run on top of a hypervisor which is installed on physical hardware called a host. The hypervisor decouples the hardware from the VMs, or workloads.</p><p>If we have two or more hosts, we can create a cluster. Clusters usually require shared storage like a SAN where the actual VM files reside and can be managed as a single entity. While workloads are running in memory, they still use real resources – real physical memory, real storage, and really CPUs, and the cluster manages that linking in an effective, optimized way.</p><h3 id="aggregate-cluster-power-01-02-01-34" tabindex="-1"><a class="header-anchor" href="#aggregate-cluster-power-01-02-01-34"><span>Aggregate Cluster Power 01:02-01:34</span></a></h3><p>For example, if the cluster contains eight host servers with four quad-core CPUs each running at 4GHz and 64GB of memory, the cluster has an aggregate of 512GHz of CPU power and 512GB of memory available for running VMs. Having a cluster provides a number of benefits, including high-availability, load balancing, and high performance. Let&#39;s look at load balancing.</p><h3 id="cluster-load-balancing-01-34-03-05" tabindex="-1"><a class="header-anchor" href="#cluster-load-balancing-01-34-03-05"><span>Cluster Load Balancing 01:34-03:05</span></a></h3><p>A cluster can sense which hosts are busy and offload workloads to a less busy host. It does this by monitoring hardware resources like CPU and RAM on each host of the cluster to determine the best placement for all the workloads. The load is evaluated frequently, and workloads can be adjusted dynamically to reallocate when needed.</p><p>This means a VM or workload could move from one host to another in a cluster for better performance. And what&#39;s cool is this is seamless to the user—they don&#39;t even notice all this is happening on the back end.</p><p>This dynamic allocation load balances the workloads across hosts in the cluster based on host resource load and availability. When a host gets busy, workloads will be moved to another host on the fly. That&#39;s powerful, and ensures each workload gets the very best performance possible.</p><p>Not all your hosts will have the same hardware with CPU and RAM resources. Some hosts will be beefier than others. Some will have newer processors. This means that some hosts can handle more dense workloads than others. The cluster can sense how busy each host is and adjust, or load-balance, the workloads for best performance and to best utilize CPU and memory resources across the cluster.</p><h3 id="resource-pooling-03-05-05-38" tabindex="-1"><a class="header-anchor" href="#resource-pooling-03-05-05-38"><span>Resource Pooling 03:05-05:38</span></a></h3><p>Within a cluster, we can usually create what&#39;s called a resource pool. This helps us allocate CPU and RAM resources to prioritize our workloads.</p><p>Some workloads may have applications that are mission critical and require specific resources to always be up and running properly. Other workloads may not be as important, but still need adequate resources. Resource pooling allows us to establish performance boundaries within the cluster, so resources aren&#39;t consumed by low-level workloads and keep important workloads from starving for resources.</p><p>So, a resource pool works within the cluster, and may span two or more host servers. Let&#39;s create Resource Pool A with a certain amount of RAM and CPU shares. After creating the pool, we can then assign or create VMs to run in the pool. We can create as many pools as we like in our cluster, but we must always assign them CPU and memory performance. Here&#39;s another pool – Resource Pool B. We&#39;ll assign it a certain amount of CPU and RAM, and then we&#39;ll assign VMs to it.</p><p>In essence, the workloads end up being load balanced, and they are throttled to only use the established resource limits. This allows admins to aggregate computing capacity and delegate it for use rather than focus on individual host servers. And, as a bonus, if one host server goes down, the other servers in the cluster will pick up the workloads and continue on.</p><p>You can create a resource pool on an individual host. However, if you have a cluster, resource pooling will provide more resources across the hosts in a cluster, allowing you to better manage the use of those hardware resources, including reservations for CPU and RAM usage. The VMs will be load balanced within the resource pool within the cluster. This provides for rapid elasticity which leverages virtualized server and storage technologies to rapidly meet the rise and fall of user load and service demand.</p><p>Hypervisor software that supports resource pooling is downloadable from the internet. You can download an evaluation copy to set up and experiment with load balancing on virtual machines.</p><h3 id="summary-05-38-06-11" tabindex="-1"><a class="header-anchor" href="#summary-05-38-06-11"><span>Summary 05:38-06:11</span></a></h3><p>That&#39;s it for this lesson. Within the context of virtualization, that&#39;s how load balancing works. Clustering allows VMs to be load balanced and highly available while providing the best performance possible for each workload. And resource pooling allows us to aggregate hardware resources across multiple hosts ensuring that the workloads get the resources they need without sacrificing the performance of others.</p><h2 id="_9-1-3-virtualization-facts" tabindex="-1"><a class="header-anchor" href="#_9-1-3-virtualization-facts"><span>9.1.3 Virtualization Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li> Virtualization components </li><li> Virtualization advantages and disadvantages </li><li> Virtualization security </li><li> Load balancing </li></ul><h3 id="virtualization-components" tabindex="-1"><a class="header-anchor" href="#virtualization-components"><span>Virtualization Components</span></a></h3><p>Virtualization refers to installing and running multiple operating systems concurrently on a single physical machine. Virtualization typically includes the following components:</p>',71),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Component "),e("th",{scope:"col",class:"fw-bold"}," Description ")])]),e("tbody",null,[e("tr",null,[e("td",null," Physical machine "),e("td",null,[a(" A "),e("i",{class:"fs-italicize"}," physical machine "),a(" , also known as the host operating system, has the hardware, such as the hard disk drive(s), optical drive, RAM, and motherboard. ")])]),e("tr",null,[e("td",null," Virtual machine "),e("td",null,[a(" A "),e("i",{class:"fs-italicize"}," virtual machine "),a(" , also known as the guest operating system, is a software implementation of a computer. The virtual machine executes programs in the same way a physical machine executes programs. The virtual machine appears to be a self-contained and autonomous system. ")])]),e("tr",null,[e("td",null," Virtual hard disk (VHD) "),e("td",null,[a(" A "),e("i",{class:"fs-italicize"}," virtual hard disk "),a(" (VHD) is a file created within the host operating system and simulates a hard disk for the virtual machine. ")])]),e("tr",null,[e("td",null," Hypervisor "),e("td",null,[a(" A "),e("i",{class:"fs-italicize"}," hypervisor "),a(" is a thin layer of software that resides between the guest operating system and the hardware. A hypervisor allows virtual machines to interact with the hardware without going through the host operating system. There are two types of hypervisors. "),e("ul",null,[e("li",null,[a(" A Type I hypervisor is often called a native hypervisor or bare-metal hypervisor. A hypervisor in a dedicated appliance is called an embedded hypervisor. A Type I hypervisor is like a thin operating system that directly interfaces with the computer hardware. Examples of Type I hypervisors are: "),e("ul",null,[e("li",null," VMware ESX and ESXi "),e("li",null," Microsoft Hyper-V "),e("li",null," Linux KVM "),e("li",null," Citrix Hypervisor "),e("li",null," Xen "),e("li",null," Oracle VM ")])]),e("li",null,[a(" A Type 2 hypervisor is known as a hosted hypervisor. It runs as an application on a conventional operating system. While it may be used in a production environment, a type 2 hypervisor is most often used as a development sandbox. Examples of Type II hypervisors are: "),e("ul",null,[e("li",null," VMware Workstation and VMware Player "),e("li",null," Oracle Virtual Box "),e("li",null," Microsoft Hyper-V built into Windows 8.1 and 10 "),e("li",null," Parallels Desktop for Mac ")])])])])])])],-1),e("h3",{id:"virtualization-advantages-and-disadvantages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#virtualization-advantages-and-disadvantages"},[e("span",null,"Virtualization Advantages and Disadvantages")])],-1),e("p",null,"Advantages of virtualization are described in the following table.",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Advantage "),e("th",{scope:"col",class:"fw-bold"}," Description ")])]),e("tbody",null,[e("tr",null,[e("td",null," Flexibility "),e("td",null,[a(" Virtual machines can be given network access. Other network devices will consider them to be physical machines. Be aware that virtual machines: "),e("ul",null,[e("li",null," Should have the latest service packs and patches, just like physical machines. "),e("li",null," Should be hardened, just like physical machines. "),e("li",null," Can be connected to the production network by creating a bridged (external) virtual switch. ")]),e("p",null," Because they are self-contained, virtual machines can be easily moved between hypervisor hosts as needed. ")])]),e("tr",null,[e("td",null," Security "),e("td",null," To better protect other systems, virtual machines can be used to create honeypots and honeynets to attract attackers so you can analyze attacks on the system. ")]),e("tr",null,[e("td",null," Testing "),e("td",null,[a(" Virtual machines can be configured in a lab environment that mirrors a production network. This lab environment can be used to: "),e("ul",null,[e("li",null," Test applications before installing them on production systems. "),e("li",null," Test updates and patches before rolling them out into the production environment. "),e("li",null," Test security controls to verify that they are working as designed. ")])])]),e("tr",null,[e("td",null," Server consolidation "),e("td",null,[a(" Server consolidation allows you to move multiple physical servers onto a few physical servers with many virtual machines. "),e("i",{class:"fs-italicize"}," Physical-to-virtual migration "),a(" (P2V migration) is the process of moving an older operating system off aging hardware and into a virtual machine. Consolidating servers: "),e("ul",null,[e("li",null," Requires fewer physical computers. "),e("li",null," Reduces power consumption. "),e("li",null," Increases physical server utilization of resources. "),e("li",null," Increases administrative efficiency. "),e("li",null," Reduces the number of incompatibility issues. ")])])]),e("tr",null,[e("td",null," Isolation "),e("td",null,[a(" A virtual machine can be isolated from the physical network to allow testing to be performed without impacting the production environment. This is called sandboxing. "),e("ul",null,[e("li",null," Sandboxed virtual machines offer an environment in which malware can be executed with minimal risk to equipment and software. "),e("li",null," Sandboxing virtual machines protects them from many kinds of security threats. "),e("li",null," To allow isolated virtual machines to communicate with each other, create a new virtual switch configured for host-only (internal) networking. Connect the virtual network interfaces in the virtual machines to the virtual switch. ")])])]),e("tr",null,[e("td",null," Application virtualization "),e("td",null,[a(" Applications can be virtualized. "),e("ul",null,[e("li",null," A virtual application appears to be local, but is really running on a different system. "),e("li",null," Virtualized browsers can protect the underlying physical operating system from malware installation. Any malware installed from the virtual browser affects only the browser, not the rest of the system. ")]),e("div",{class:"info","data-block":`
       Malware can also use virtualization techniques that make it difficult to
          detect.
      `},[e("div",{class:"to-info-box"},[e("div",{class:"to-info-box-body"},[e("span",{class:"to-icon large","aria-hidden":"true"},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null," Malware can also use virtualization techniques that make it difficult to detect. ")])])])])])])])],-1),t('<p>Disadvantages of virtualization include:</p><ul><li> An attack on the host machine could compromise all guest machines operating on that host. </li><li> A bottleneck or failure of any hardware component that is shared between multiple guests, such as a failure in a disk subsystem, could affect multiple virtual machines. </li><li> While administration is centralized, virtualization is a newer technology and requires new skills. Managing virtual servers can add complexity. </li><li> Your configuration is susceptible to server sprawl, a condition that delays patch and security update management due to the number of virtual machines that must be managed. . </li></ul><h3 id="virtualization-security" tabindex="-1"><a class="header-anchor" href="#virtualization-security"><span>Virtualization Security</span></a></h3><p>Security considerations for a virtual machine should be the same as for physical machines. For the host and all guest machines, be sure to:</p><ul><li> Reduce the number of services running. </li><li> Apply patches and updates regularly. </li><li> Install antivirus and other security software. </li><li> Implement backups, operating system snapshots, and other solutions for data protection. </li></ul><p>In addition, you should protect against virtual machine escape, an exploit in which malware allows the operating system within a virtual machine to break out and interact directly with the hypervisor. To minimize this vulnerability.</p><ul><li> Apply patches and updates regularly. </li><li> Install only the resources-sharing features that are necessary. </li><li> Install only the software applications that are necessary. </li></ul><h3 id="load-balancing" tabindex="-1"><a class="header-anchor" href="#load-balancing"><span>Load Balancing</span></a></h3><p>Load Balancing is a technique that disperses a workload between two or more computers or resources to achieve optimal resource utilization, throughput, or response time. The primary goal of load balancing is to improve performance and create high availability by configuring multiple devices to respond as one. Load balancing can also provide fault tolerance.</p><p>If the load balancing mechanism is able to detect when a specific node or member is unavailable, new requests will automatically be distributed to other available members. Load balancing methods with virtualization include the following:</p><ul><li> Resource pooling creates shared logical pools of CPU and memory resources from many physical machines within the hypervisor to guarantee a level of resources for specific virtual machines. </li><li> Workload balancing distributes a workload (the total requests made by users and applications of a system) across multiple computers or a computer cluster to achieve optimal resource utilization, maximize throughput, minimize response time, and avoid overload. </li></ul><h2 id="_9-1-4-creating-virtual-machines" tabindex="-1"><a class="header-anchor" href="#_9-1-4-creating-virtual-machines"><span>9.1.4 Creating Virtual Machines</span></a></h2><h3 id="creating-virtual-machines-00-00-00-47" tabindex="-1"><a class="header-anchor" href="#creating-virtual-machines-00-00-00-47"><span>Creating Virtual Machines 00:00-00:47</span></a></h3><p>In this video, we&#39;re going to create virtual machines using Hyper-V. To open Hyper-V Manager, we click on Tools &gt; Hyper-V Manager. We&#39;re going to right-click the server, go to New, and then to Virtual Machine.</p><p>On the New Virtual Machine Wizard page, we first click Next. Then we select a name for our new virtual machine. I&#39;m going to call it Windows Server 2019.</p><p>You also have the option to store the virtual machine, or VM, in different locations. Just make sure the location you choose has enough space. You can see it&#39;s grayed out here. If we take snapshots of the virtual machine, they&#39;re stored wherever the virtual machine is located. Take that into account when you&#39;re creating the virtual machine.</p><h3 id="generation-00-47-01-34" tabindex="-1"><a class="header-anchor" href="#generation-00-47-01-34"><span>Generation 00:47-01:34</span></a></h3><p>We hit Next and Specify Generation. This is a relatively new section as it was added back in Windows Server 2016. Before that, Hyper-V didn&#39;t have this option. But it now gives you the option to support more legacy hardware.</p><p>Sometimes environments use mixed operating systems or different bit versions, like 32-bit or 64-bit operating systems. Generation 2 doesn&#39;t allow for 32-bit systems, and it doesn&#39;t support all previous versions of Hyper-V. You need to understand your environment and what type of servers and other things you&#39;re going to be using.</p><p>Generation 2 also supports the newer virtualization features and has a UEFI-based firmware. But like I said, this generation can only work with 64-bit systems, not 32-bit ones. Let&#39;s select Generation 1 for our purposes.</p><h3 id="startup-memory-01-34-01-55" tabindex="-1"><a class="header-anchor" href="#startup-memory-01-34-01-55"><span>Startup Memory 01:34-01:55</span></a></h3><p>Now we&#39;re going to set up the initial startup memory. We can change this now, or we can change it after the fact. It doesn&#39;t matter. You can also specify Dynamic Memory for this machine, but we&#39;re going to wait until we&#39;ve created the virtual machine to do that.</p><p>On the Configuring Network page, you can select a virtual network switch right here. We&#39;re also going to wait to do that because we can change that later.</p><h3 id="hard-drive-01-55-02-30" tabindex="-1"><a class="header-anchor" href="#hard-drive-01-55-02-30"><span>Hard Drive 01:55-02:30</span></a></h3><p>On the Connect Virtual Hard Disk page, we&#39;re going to select a virtual hard drive. By default, it creates a new virtual hard disk. If we create it through the wizard, it will be a dynamically increasing VHDX. That&#39;s 127 B.</p><p>You use a different wizard to create a fixed-size VHD if you don&#39;t want it to be dynamically expanding. We either create that pre-VHD setup by selecting Use an existing virtual hard disk, or we can select Attach a virtual hard disk later. If you do create the virtual hard drive through the wizard, it&#39;s going to be dynamically expanding. You can convert it later; Hyper-V gives you that option.</p><h3 id="installation-media-02-30-03-32" tabindex="-1"><a class="header-anchor" href="#installation-media-02-30-03-32"><span>Installation Media 02:30-03:32</span></a></h3><p>Now, if you selected Generation 1, this is what you generally see. But if you selected Generation 2, a few of these options will be missing. On Generation 1, we can install the OS from either a CD/DVD, a physical drive, or an ISO file.</p><p>We also have the option to install from floppy, although that&#39;s not very common and hasn&#39;t been for a long time. The last option is to install it from a network-based server, assuming we have connectivity. Since we didn&#39;t select any virtual networks, that&#39;s grayed out.</p><p>If we had connected a network adapter, it would be active and we could select it. It could be a WDF server or something like that. We&#39;ll install the operating system later. One thing to note: if we did select Generation 2, we would have the option to install from image ISO but not from CD/DVD or virtual floppy. You still would have the network-based installation option as well.</p><p>After hitting Next, it shows us the basic settings we&#39;ve selected. Let&#39;s click Finish, and it creates the virtual machine for us.</p><h3 id="change-settings-03-32-04-10" tabindex="-1"><a class="header-anchor" href="#change-settings-03-32-04-10"><span>Change Settings 03:32-04:10</span></a></h3><p>So now we&#39;re going to right-click our virtual machine and go to Settings.</p><p>You can see that we can change any of the choices we made using the wizard except for the generation settings. The Generation 1 or 2 settings cannot be changed after the wizard is complete. You have to make that decision beforehand. If you need something that does support legacy options and you selected Generation 2, you&#39;ll have to create a new virtual machine.</p><p>But currently, with Generation 1, we can go in and change things like the virtual hard disk, what&#39;s in the DVD drive, our network adapter connection, and other settings. We make those changes here. It&#39;s convenient to install virtual machines from ISOs.</p><h3 id="image-file-04-10-05-11" tabindex="-1"><a class="header-anchor" href="#image-file-04-10-05-11"><span>Image File 04:10-05:11</span></a></h3><p>ISOs are images of CDs or DVDs, and that&#39;s what we&#39;re going to be using. We&#39;ll browse to our server image file. Let&#39;s go to Image File, Browse, and here I have my image file. This is our ISO file. When we clicked Open, what we basically did was we told the server, &quot;This is where our image file is.&quot;</p><p>It&#39;s kind of like putting an image disc into your computer&#39;s DVD drive. That&#39;s how it treats it on bootup. The difference is that this is a virtual machine and the file is just a copy of a DVD. It&#39;s obviously not an actual DVD. ISOs can be stored on pretty much any type of storage device. You can have them locally on the machine, or you can boot them from a USB drive. Let&#39;s go ahead and hit OK.</p><p>Currently the virtual machine has nothing on its hard drive. It has a Windows Server 2019 DVD, or ISO, in the CD drive. If we double-click it (or if you don&#39;t like double-clicking, you can right-click and click Connect), you can see the machine is currently turned off.</p><h3 id="ctrl-alt-del-and-start-05-11-05-50" tabindex="-1"><a class="header-anchor" href="#ctrl-alt-del-and-start-05-11-05-50"><span>CTRL+ALT+DEL and Start 05:11-05:50</span></a></h3><p>You can see right here (this button right here, hover over it) that it shows you if you press it, a CTRL+ALT+DEL command. You can also do this within the virtual machine by pressing CTRL+ALT+END. Because if you do that, a CTRL+ALT+DEL, it basically sends that command to the server you&#39;re currently in and not to the virtual machine. So it does CTRL+ALT+END.</p><p>Next is the Start button. If we click this button, it powers on the VM. We&#39;re going to go ahead and click it. This button, Turn Off, is kind of like a hard stop. It&#39;s the equivalent of hard shutting down your machine. So if I just held down the button and hard crashed the machine, that&#39;s basically what this does.</p><h3 id="shut-down-and-save-05-50-06-18" tabindex="-1"><a class="header-anchor" href="#shut-down-and-save-05-50-06-18"><span>Shut Down and Save 05:50-06:18</span></a></h3><p>Then we have the Shut Down button that sends a shutdown signal. Then we have the Save button. The Save button is similar to hibernating on a laptop. The Save button stops the virtual machine from using physical resources, but it maintains the state of the machine.</p><p>If you have to stop what you&#39;re doing and maybe do some other function on the server, this can be useful if you don&#39;t want to lose where you&#39;re at, or you want pick it up a little bit later. If you have to perform a different function prior to making a change, you might use that option.</p><h3 id="summary-06-18-06-45" tabindex="-1"><a class="header-anchor" href="#summary-06-18-06-45"><span>Summary 06:18-06:45</span></a></h3><p>That&#39;s it for this demo. That&#39;s how you create a virtual machine using Hyper-V. You can see here this has brought us to our installation window since it just booted that ISO from the Windows Server 2019 ISO from what it sees as the DVD drive. From here, we would finish installing our operating system and the virtual machine would be ready for use. But that&#39;s not part of this demo so I&#39;ll stop here.</p><h2 id="_9-1-5-managing-virtual-machines" tabindex="-1"><a class="header-anchor" href="#_9-1-5-managing-virtual-machines"><span>9.1.5 Managing Virtual Machines</span></a></h2><h3 id="managing-virtual-machines-00-00-00-25" tabindex="-1"><a class="header-anchor" href="#managing-virtual-machines-00-00-00-25"><span>Managing Virtual Machines 00:00-00:25</span></a></h3><p>In this demo, we&#39;ll talk about settings on existing virtual machines. We&#39;re going to go ahead and click on Tools and go to Hyper-V Manager. There are some settings that you can only change when the machine is off. So instead of using this Server 2019, we&#39;re going to use my Windows 10 virtual machine. Right-click and go to Settings.</p><h3 id="hardware-settings-00-25-00-59" tabindex="-1"><a class="header-anchor" href="#hardware-settings-00-25-00-59"><span>Hardware Settings 00:25-00:59</span></a></h3><p>If I need to add hardware to this virtual machine, or VM, I can do it right here on the Add Hardware page. We can add network adapters, SCSI controllers, fiber channel adapters, and legacy network adapters. If we go to the BIOS page, we can set and see the current boot order. You&#39;re going to see my current boot order right here. First is the CD/DVD drive, then the IDE or hard drive, network adapter, and floppy disk (which is uncommon to be used as your boot drive).</p><h3 id="security-settings-00-59-01-09" tabindex="-1"><a class="header-anchor" href="#security-settings-00-59-01-09"><span>Security Settings 00:59-01:09</span></a></h3><p>Windows Server 2019 gives us options for security settings. This is basically just encryption support for your virtual machines. We&#39;re not going to go into that at this moment.</p><h3 id="memory-page-01-09-02-48" tabindex="-1"><a class="header-anchor" href="#memory-page-01-09-02-48"><span>Memory Page 01:09-02:48</span></a></h3><p>On the Memory page, we can change how Hyper-V deals with the memory startup RAM, or the amount of RAM available when you start the VM. So unless we turn on Dynamic Memory, this is all the RAM this VM is going to have. Virtual machines need a little more RAM on startup than they do to actually run. We may be able to set the minimum memory lower, and the machine would still work well. Windows 10 requires 1GB of RAM for the 32-bit distributions and 2GB of RAM for the 64-bit distributions, whereas Server 2019 only requires 512MB of RAM.</p><p>Dynamic Memory allows the host to allocate memory based on need. So, let&#39;s enable Dynamic Memory. If we set the minimum RAM to 512 and another one of our virtual machines needs additional RAM, the host can reallocate some of the RAM from this VM to the other VM. The reallocation is also based on need. And remember, you can&#39;t adjust the memory if the machine has already booted. So, the minimum RAM is the smallest amount of RAM that can be given to the VM. Make sure you have enough for the machine to run. Maximum RAM is the maximum amount of RAM the host can allocate to the VM.</p><p>You can also set memory weight for this machine. This setting gives the host a priority for allocating memory. If Hyper-V has to make a decision, it&#39;s going to give RAM to the highest priority machine. For example, if I lowered this for my Windows 10 machine and my server has higher priority, Hyper-V would allocate more RAM to my server than to Windows 10.</p><h3 id="virtual-processors-02-48-03-41" tabindex="-1"><a class="header-anchor" href="#virtual-processors-02-48-03-41"><span>Virtual Processors 02:48-03:41</span></a></h3><p>You can set the number of virtual processors for the virtual machine. We might have a quad-core CPU in the host, but we may want to give the VM only one core. We can only go above one if we have more than one core in the physical machine. We also have resource control here. We can specify a certain percentage of the host processor in reserve for this virtual machine. We can set a limit in terms of total resources as well. We can also set a relative weight. If you have a VM with a weight of 200 and one with a weight of 100, the one with 200 weight will get twice as much attention from the processor as the one with 100 weight.</p><p>We can also change the hard drive, if necessary, for IDE Controller 0. Under IDE Controller 1, we can specify the media for the virtual CD/DVD drive.</p><h3 id="iso-image-03-41-04-19" tabindex="-1"><a class="header-anchor" href="#iso-image-03-41-04-19"><span>ISO Image 03:41-04:19</span></a></h3><p>We can use an ISO image, or we can connect the physical drive. You can see I&#39;m using an ISO image. SCSI controller allows us to add SCSI devices. By default, we can add a hard drive or a shared drive, but we can&#39;t do this while the virtual machine is running. We can change the virtual network to which this adapter attaches. We can also enable virtual LAN and bandwidth management. We can map comports as well. And we can use a virtual floppy or diskette drive. Some of these options are only available if we selected the Generation 1 option under Server Generation Support.</p><h3 id="management-04-19-05-04" tabindex="-1"><a class="header-anchor" href="#management-04-19-05-04"><span>Management 04:19-05:04</span></a></h3><p>Under Management, we can view the name of the virtual machine. The Integration Services setup, which services the VM, is basically all that we&#39;re going to use. We can turn on Operating system shutdown, Time synchronization, Data Exchange, and Heartbeat. Heartbeat is basically the failover for the server. In Windows Server, you can set the heartbeat or the failover settings, and you can also set up the backup or volume shadow copy. There are some guest services as well. In Server 2012, this was called snapshots. Snapshots had their name changed to checkpoints to avoid confusion with some other services.</p><p>We can also configure the Smart Paging File Location here.</p><h3 id="automatic-start-action-05-04-05-49" tabindex="-1"><a class="header-anchor" href="#automatic-start-action-05-04-05-49"><span>Automatic Start Action 05:04-05:49</span></a></h3><p>Automatic Start Action specifies what we want this virtual machine to do when the physical computer starts. By default, if it was running when the physical machine stopped, it will restart when the physical machine reboots. Another option is to start automatically. If you select Nothing, you&#39;ll have to manually restart it.</p><p>Automatic Stop Action specifies the action the VM takes if we shut down the physical server. By default, Save the virtual machine state is the action chosen so that the virtual machine doesn&#39;t crash. That&#39;s probably your best option. The Turn off the virtual machine option is a hard crash of the virtual machine. You don&#39;t want to select that. We could use the Shut down the guest operating system option, but we normally leave it at the default.</p><h3 id="summary-05-49-06-01" tabindex="-1"><a class="header-anchor" href="#summary-05-49-06-01"><span>Summary 05:49-06:01</span></a></h3><p>That&#39;s it for this demonstration. In this demo, we went over some of the settings you can change on an existing virtual machine.</p><h2 id="_9-1-7-adding-virtual-network-adapters" tabindex="-1"><a class="header-anchor" href="#_9-1-7-adding-virtual-network-adapters"><span>9.1.7 Adding Virtual Network Adapters</span></a></h2><h3 id="adding-virtual-network-adapters-00-00-00-54" tabindex="-1"><a class="header-anchor" href="#adding-virtual-network-adapters-00-00-00-54"><span>Adding Virtual Network Adapters 00:00-00:54</span></a></h3><p>In this demonstration, we&#39;re going to walk through the process of adding a new network adaptor to an existing virtual machine. The process is pretty straightforward. All you need to do is locate the virtual machine in your list of virtual machines within Hyper-V Manager. Right click on it, and then click on Settings.</p><p>I might add, before we go any further, that in order to add a new network board, you do have to have the virtual machine shut down. It needs to be in an off state. You can&#39;t add it to a live, running virtual machine. We&#39;re good here, the VM is shut down. To add a new network interface to this system, under Hardware I click on Add Hardware. Then I select Network Adapter from the list of available hardware that I can add to the system, and then click Add.</p><h3 id="specify-virtual-switch-00-54-01-26" tabindex="-1"><a class="header-anchor" href="#specify-virtual-switch-00-54-01-26"><span>Specify Virtual Switch 00:54-01:26</span></a></h3><p>Now I need to specify which virtual switch I want to connect this network board to. I only have one virtual switch defined. This is my virtual switch that is connected to my physical network segment, and also provides internet access. I could just add the network board and leave it not connected to anything, and I could connect it to something else later on. Let&#39;s go ahead and do connect it to the switch, come down here and click OK.</p><h3 id="dhcp-01-26-02-23" tabindex="-1"><a class="header-anchor" href="#dhcp-01-26-02-23"><span>DHCP 01:26-02:23</span></a></h3><p>Now, let&#39;s power on that virtual machine, I&#39;ll click on Connect, and then Power On. Now, if this had been a physical system, and I had installed a new physical network board into that physical system and connected it to my network switch with a drop cable, when I power the system on, by default, Windows is going to dynamically assign that new network interface an address via DHCP. If that&#39;s what you want, you&#39;re in good shape.</p><p>If this were a workstation system, that&#39;s probably what we would want to do, but this virtual machine is a Windows Server 2016 server. Generally speaking, we don&#39;t like having dynamically assigned addresses to servers, because most of the time the address needs to stay the same. Therefore, we&#39;re going to log onto this virtual machine, and what we&#39;re going to do is assign a static IP address to it.</p><h3 id="static-ip-address-02-23-03-23" tabindex="-1"><a class="header-anchor" href="#static-ip-address-02-23-03-23"><span>Static IP Address 02:23-03:23</span></a></h3><p>Let&#39;s go to Local Server. Let&#39;s click on Ethernet2. Go to Properties, Internet Protocol Version 4 Properties. Let&#39;s use a statically assigned IP address. The first NIC in this system was assigned 10.0.0.68, so let&#39;s assign this one 10.0.0.69. We&#39;ll leave the same default gateway address. It copied in the address that it was assigned previously for the default gateway by the DHCP server, didn&#39;t save the DNS server address. We&#39;ll enter that in manually. Click OK. Yes, close. Refresh server manager.</p><h3 id="summary-03-23-03-47" tabindex="-1"><a class="header-anchor" href="#summary-03-23-03-47"><span>Summary 03:23-03:47</span></a></h3><p>We now have two NICs installed in this system, the first one assigned 10.0.0.68, the second one 10.0.0.69. That&#39;s it for this demonstration. In this demo, we talked about how to add a virtual network board to a virtual machine in Hyper-V.</p>',84)]))}const d=n(r,[["render",l],["__file","09.01.HostVirtualization.html.vue"]]),u=JSON.parse('{"path":"/09/09.01.HostVirtualization.html","title":"Section 9.1 Host Virtualization","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 9.1 Host Virtualization","description":"some description"},"headers":[{"level":2,"title":"9.1.1 Host Virtualization Overview","slug":"_9-1-1-host-virtualization-overview","link":"#_9-1-1-host-virtualization-overview","children":[{"level":3,"title":"Host Virtualization Overview 00:00-00:20","slug":"host-virtualization-overview-00-00-00-20","link":"#host-virtualization-overview-00-00-00-20","children":[]},{"level":3,"title":"Traditional Computing Model 00:20-01:39","slug":"traditional-computing-model-00-20-01-39","link":"#traditional-computing-model-00-20-01-39","children":[]},{"level":3,"title":"Problems with Traditional Computing Model 01:39-02:40","slug":"problems-with-traditional-computing-model-01-39-02-40","link":"#problems-with-traditional-computing-model-01-39-02-40","children":[]},{"level":3,"title":"Virtualization Roles 02:40-04:07","slug":"virtualization-roles-02-40-04-07","link":"#virtualization-roles-02-40-04-07","children":[]},{"level":3,"title":"Hypervisors 04:07-05:23","slug":"hypervisors-04-07-05-23","link":"#hypervisors-04-07-05-23","children":[]},{"level":3,"title":"Hardware Virtualization Types 05:23-05:28","slug":"hardware-virtualization-types-05-23-05-28","link":"#hardware-virtualization-types-05-23-05-28","children":[]},{"level":3,"title":"Full Virtualization 05:28-06:00","slug":"full-virtualization-05-28-06-00","link":"#full-virtualization-05-28-06-00","children":[]},{"level":3,"title":"Partial Virtualization 06:00-06:26","slug":"partial-virtualization-06-00-06-26","link":"#partial-virtualization-06-00-06-26","children":[]},{"level":3,"title":"Paravirtualization 06:26-07:08","slug":"paravirtualization-06-26-07-08","link":"#paravirtualization-06-26-07-08","children":[]},{"level":3,"title":"Hypervisor Types 07:08-07:17","slug":"hypervisor-types-07-08-07-17","link":"#hypervisor-types-07-08-07-17","children":[]},{"level":3,"title":"Type 1 Hypervisors 07:17-07:48","slug":"type-1-hypervisors-07-17-07-48","link":"#type-1-hypervisors-07-17-07-48","children":[]},{"level":3,"title":"Type 2 Hypervisors 07:48-08:22","slug":"type-2-hypervisors-07-48-08-22","link":"#type-2-hypervisors-07-48-08-22","children":[]},{"level":3,"title":"Virtualization Benefits 08:22-09:08","slug":"virtualization-benefits-08-22-09-08","link":"#virtualization-benefits-08-22-09-08","children":[]},{"level":3,"title":"Virtual Machine Escape 09:08-09:49","slug":"virtual-machine-escape-09-08-09-49","link":"#virtual-machine-escape-09-08-09-49","children":[]},{"level":3,"title":"Summary 09:49-10:11","slug":"summary-09-49-10-11","link":"#summary-09-49-10-11","children":[]}]},{"level":2,"title":"9.1.2 Load Balancing with Virtualization","slug":"_9-1-2-load-balancing-with-virtualization","link":"#_9-1-2-load-balancing-with-virtualization","children":[{"level":3,"title":"Load Balancing with Virtualization 00:00-00:20","slug":"load-balancing-with-virtualization-00-00-00-20","link":"#load-balancing-with-virtualization-00-00-00-20","children":[]},{"level":3,"title":"Clustering and Load Balancing 00:20-01:02","slug":"clustering-and-load-balancing-00-20-01-02","link":"#clustering-and-load-balancing-00-20-01-02","children":[]},{"level":3,"title":"Aggregate Cluster Power 01:02-01:34","slug":"aggregate-cluster-power-01-02-01-34","link":"#aggregate-cluster-power-01-02-01-34","children":[]},{"level":3,"title":"Cluster Load Balancing 01:34-03:05","slug":"cluster-load-balancing-01-34-03-05","link":"#cluster-load-balancing-01-34-03-05","children":[]},{"level":3,"title":"Resource Pooling 03:05-05:38","slug":"resource-pooling-03-05-05-38","link":"#resource-pooling-03-05-05-38","children":[]},{"level":3,"title":"Summary 05:38-06:11","slug":"summary-05-38-06-11","link":"#summary-05-38-06-11","children":[]}]},{"level":2,"title":"9.1.3 Virtualization Facts","slug":"_9-1-3-virtualization-facts","link":"#_9-1-3-virtualization-facts","children":[{"level":3,"title":"Virtualization Components","slug":"virtualization-components","link":"#virtualization-components","children":[]},{"level":3,"title":"Virtualization Advantages and Disadvantages","slug":"virtualization-advantages-and-disadvantages","link":"#virtualization-advantages-and-disadvantages","children":[]},{"level":3,"title":"Virtualization Security","slug":"virtualization-security","link":"#virtualization-security","children":[]},{"level":3,"title":"Load Balancing","slug":"load-balancing","link":"#load-balancing","children":[]}]},{"level":2,"title":"9.1.4 Creating Virtual Machines","slug":"_9-1-4-creating-virtual-machines","link":"#_9-1-4-creating-virtual-machines","children":[{"level":3,"title":"Creating Virtual Machines 00:00-00:47","slug":"creating-virtual-machines-00-00-00-47","link":"#creating-virtual-machines-00-00-00-47","children":[]},{"level":3,"title":"Generation 00:47-01:34","slug":"generation-00-47-01-34","link":"#generation-00-47-01-34","children":[]},{"level":3,"title":"Startup Memory 01:34-01:55","slug":"startup-memory-01-34-01-55","link":"#startup-memory-01-34-01-55","children":[]},{"level":3,"title":"Hard Drive 01:55-02:30","slug":"hard-drive-01-55-02-30","link":"#hard-drive-01-55-02-30","children":[]},{"level":3,"title":"Installation Media 02:30-03:32","slug":"installation-media-02-30-03-32","link":"#installation-media-02-30-03-32","children":[]},{"level":3,"title":"Change Settings 03:32-04:10","slug":"change-settings-03-32-04-10","link":"#change-settings-03-32-04-10","children":[]},{"level":3,"title":"Image File 04:10-05:11","slug":"image-file-04-10-05-11","link":"#image-file-04-10-05-11","children":[]},{"level":3,"title":"CTRL+ALT+DEL and Start 05:11-05:50","slug":"ctrl-alt-del-and-start-05-11-05-50","link":"#ctrl-alt-del-and-start-05-11-05-50","children":[]},{"level":3,"title":"Shut Down and Save 05:50-06:18","slug":"shut-down-and-save-05-50-06-18","link":"#shut-down-and-save-05-50-06-18","children":[]},{"level":3,"title":"Summary 06:18-06:45","slug":"summary-06-18-06-45","link":"#summary-06-18-06-45","children":[]}]},{"level":2,"title":"9.1.5 Managing Virtual Machines","slug":"_9-1-5-managing-virtual-machines","link":"#_9-1-5-managing-virtual-machines","children":[{"level":3,"title":"Managing Virtual Machines 00:00-00:25","slug":"managing-virtual-machines-00-00-00-25","link":"#managing-virtual-machines-00-00-00-25","children":[]},{"level":3,"title":"Hardware Settings 00:25-00:59","slug":"hardware-settings-00-25-00-59","link":"#hardware-settings-00-25-00-59","children":[]},{"level":3,"title":"Security Settings 00:59-01:09","slug":"security-settings-00-59-01-09","link":"#security-settings-00-59-01-09","children":[]},{"level":3,"title":"Memory Page 01:09-02:48","slug":"memory-page-01-09-02-48","link":"#memory-page-01-09-02-48","children":[]},{"level":3,"title":"Virtual Processors 02:48-03:41","slug":"virtual-processors-02-48-03-41","link":"#virtual-processors-02-48-03-41","children":[]},{"level":3,"title":"ISO Image 03:41-04:19","slug":"iso-image-03-41-04-19","link":"#iso-image-03-41-04-19","children":[]},{"level":3,"title":"Management 04:19-05:04","slug":"management-04-19-05-04","link":"#management-04-19-05-04","children":[]},{"level":3,"title":"Automatic Start Action 05:04-05:49","slug":"automatic-start-action-05-04-05-49","link":"#automatic-start-action-05-04-05-49","children":[]},{"level":3,"title":"Summary 05:49-06:01","slug":"summary-05-49-06-01","link":"#summary-05-49-06-01","children":[]}]},{"level":2,"title":"9.1.7 Adding Virtual Network Adapters","slug":"_9-1-7-adding-virtual-network-adapters","link":"#_9-1-7-adding-virtual-network-adapters","children":[{"level":3,"title":"Adding Virtual Network Adapters 00:00-00:54","slug":"adding-virtual-network-adapters-00-00-00-54","link":"#adding-virtual-network-adapters-00-00-00-54","children":[]},{"level":3,"title":"Specify Virtual Switch 00:54-01:26","slug":"specify-virtual-switch-00-54-01-26","link":"#specify-virtual-switch-00-54-01-26","children":[]},{"level":3,"title":"DHCP 01:26-02:23","slug":"dhcp-01-26-02-23","link":"#dhcp-01-26-02-23","children":[]},{"level":3,"title":"Static IP Address 02:23-03:23","slug":"static-ip-address-02-23-03-23","link":"#static-ip-address-02-23-03-23","children":[]},{"level":3,"title":"Summary 03:23-03:47","slug":"summary-03-23-03-47","link":"#summary-03-23-03-47","children":[]}]}],"git":{"updatedTime":1736192501000},"filePathRelative":"09/09.01.HostVirtualization.md"}');export{d as comp,u as data};
