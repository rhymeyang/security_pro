import{_ as o,c as r,b as t,a as e,d as a,o as n}from"./app-6Mc17HFZ.js";const i={};function l(h,s){return n(),r("div",null,s[0]||(s[0]=[t("<p>As you study this section, answer the following questions:</p><ul><li> Where would an attacker gather information to guess a user&#39;s password? </li><li> What social engineering technique involves looking through trash? </li><li> What does password spraying help the attacker avoid? </li><li> What is the best defense against password cracking attempts? </li><li> What is a rainbow attack? </li></ul><p>In this section, you will learn to:</p><ul><li> Crack a password using rainbow tables. </li><li> Crack a password with John the Ripper. </li></ul><p>The key terms for this section include:</p>",5),e("table",{class:"terms"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Term "),e("th",{scope:"col",class:"fw-bold"}," Definition ")])]),e("tbody",null,[e("tr",null,[e("td",null," Social engineering "),e("td",null," Social engineering uses manipulation of people or situations to gain access to sensitive information. ")]),e("tr",null,[e("td",null," Dumpster diving "),e("td",null," A social engineering attack in which an attacker goes through the trash to find important documents or information that has been thrown out. ")]),e("tr",null,[e("td",null," Shoulder surfing "),e("td",null," A eavesdropping technique where the listener obtains passwords or other confidential information by looking over the shoulder of the target. ")]),e("tr",null,[e("td",null," Brute force attack "),e("td",null," Password attack in which the attacker uses a cracking tool that submits every possible letter, number, and symbol combination in a short amount of time. ")]),e("tr",null,[e("td",null," Password spraying "),e("td",null," Brute force password attack that uses the same password with multiple user accounts instead of different passwords for the same account. ")]),e("tr",null,[e("td",null," Dictionary attack "),e("td",null," Brute force password attack in which the hacker uses a list of words and phrases to try to guess the password. ")]),e("tr",null,[e("td",null," Rainbow attack "),e("td",null," Similar to dictionary attacks, but a rainbow attack uses special tables called rainbow tables that have common passwords and the generated hash of each password. ")])])],-1),e("p",null,"This section helps you prepare for the following certification exam objectives:",-1),e("table",{class:"objectives"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Exam "),e("th",{scope:"col",class:"fw-bold"}," Objective ")])]),e("tbody",null,[e("tr",null,[e("td",null," TestOut Security Pro "),e("td",null,[a(" 5.0 Audit and Security Assessment "),e("p",null," 5.2 Assessment Techniques "),e("ul",null,[e("li",null," Analyze Password Attacks ")])])]),e("tr",null,[e("td",null," CompTIA Security+ SY0-601 "),e("td",null,[a(" 1.1 Compare and contrast different types of social engineering techniques. "),e("ul",null,[e("li",null," Dumpster diving "),e("li",null," Shoulder surfing "),e("li",null," Impersonation ")]),e("p",null," 1.2 Given a scenario, analyze potential indicators to determine the type of attack. "),e("ul",null,[e("li",null,[a(" Password attacks "),e("ul",null,[e("li",null," Spraying "),e("li",null," Dictionary "),e("li",null," Brute force "),e("li",null," Offline "),e("li",null," Online "),e("li",null," Rainbow tables "),e("li",null," Plaintext/unencrypted ")])])]),e("p",null," 2.8 Summarize the basics of cryptographic concepts. "),e("ul",null,[e("li",null," Salting ")]),e("p",null," 4.1 Given a scenario, use the appropriate tool to assess organizational security. "),e("ul",null,[e("li",null," Password crackers ")])])])])],-1),t('<h2 id="_11-7-1-password-attacks" tabindex="-1"><a class="header-anchor" href="#_11-7-1-password-attacks"><span>11.7.1 Password Attacks</span></a></h2><h3 id="password-attacks-00-00-00-27" tabindex="-1"><a class="header-anchor" href="#password-attacks-00-00-00-27"><span>Password Attacks 00:00-00:27</span></a></h3><p>Passwords are oftentimes the main defense against unauthorized access to a computer system or sensitive data, and attackers have a variety of methods they can use to crack users&#39; passwords. Some of the more common methods are social engineering, brute force attacks, and rainbow attacks. In this lesson, I&#39;ll go over how these attacks work and how you can defend against them.</p><h3 id="social-engineering-00-27-00-42" tabindex="-1"><a class="header-anchor" href="#social-engineering-00-27-00-42"><span>Social Engineering 00:27-00:42</span></a></h3><p>Social engineering is the art of manipulating the weakest link in network security, which is the human element. A skilled attacker can use social engineering to learn a user&#39;s password through password guessing, user manipulation, or shoulder surfing.</p><h3 id="password-guessing-00-42-02-36" tabindex="-1"><a class="header-anchor" href="#password-guessing-00-42-02-36"><span>Password Guessing 00:42-02:36</span></a></h3><p>Guessing a user&#39;s password can be difficult, but there are techniques that an attacker can use to make this simpler. The first thing an attacker might do is try default logins and common passwords like password123. An attacker might also use social media to gather personal information such as pet names, family, first car, birthday, and more. Then the attacker uses this information to answer security questions and reset the password itself.</p><p>An attacker might also try to interact with a user to trick them into revealing their password. For example, they might call the user pretending to be a technician with an urgent problem for which they need the user&#39;s password to resolve. Attackers continue to use this method because, surprisingly, it&#39;s still very easy.</p><p>An attacker might also use social engineering to gain physical access to an office building. Once inside, they look around for login information that users have written down. Unfortunately, many users write their login information on a sticky pad and put it on their monitor or under their mouse pad. This makes it fairly easy for an attacker to find.</p><p>Attackers also go dumpster diving to find these notes that might&#39;ve been inadvertently thrown away. These people aren&#39;t above searching through your trash to gain access to your personal information.</p><p>Shoulder surfing is a passive technique where the attacker simply watches a user&#39;s keystrokes as they type in their password. This requires access to the user, but it can be accomplished with social engineering.</p><p>Your best defense against these kinds of password attacks is education. You must be trained on how to handle these situations. You should know emphatically that no one will ever need to ask for your passwords, and that you should never carelessly write your login information down. With proper user training, attackers have to resort to more technical means to crack passwords.</p><h3 id="brute-force-attacks-02-36-02-54" tabindex="-1"><a class="header-anchor" href="#brute-force-attacks-02-36-02-54"><span>Brute Force Attacks: 02:36-02:54</span></a></h3><p>A brute force password attack can be a very time-consuming proposition. The attacker attempts to guess passwords by using a cracking tool that submits every possible letter, number, and symbol combination in a short amount of time. These attacks can be carried out online or offline.</p><h3 id="online-brute-force-attacks-02-54-03-27" tabindex="-1"><a class="header-anchor" href="#online-brute-force-attacks-02-54-03-27"><span>Online Brute Force Attacks 02:54-03:27</span></a></h3><p>An online brute force attack requires the attacker to submit passwords with the same user interface while the target is up and running. If the attacker targets a website, they keep submitting logins to the site interface. If the attacker targets a computer, they submit the logins to the login screen.</p><p>The best defense against online brute force attacks is to implement lockout policies. This means that if someone enters an incorrect password multiple times in a short period, the system locks them out for a certain amount of time.</p><h3 id="offline-brute-force-attacks-03-27-03-44" tabindex="-1"><a class="header-anchor" href="#offline-brute-force-attacks-03-27-03-44"><span>Offline Brute Force Attacks 03:27-03:44</span></a></h3><p>An offline brute force attack requires the attacker to somehow steal the password file and then run their attacks on it. This potentially gives the attacker unlimited attempts to run their attack, but it&#39;s much more difficult to pull off because they have to first get that password file.</p><h3 id="password-spraying-03-44-04-09" tabindex="-1"><a class="header-anchor" href="#password-spraying-03-44-04-09"><span>Password Spraying 03:44-04:09</span></a></h3><p>Password spraying is another type of brute force attack that someone can use to get around lockout policies. Instead of attacking one account, the attacker submits a password to multiple user accounts. If none of those work, the attacker submits a different password to multiple accounts. Because there&#39;s a delay between submitting passwords on each account, the lockout policy is essentially circumvented.</p><h3 id="dictionary-attacks-04-09-04-39" tabindex="-1"><a class="header-anchor" href="#dictionary-attacks-04-09-04-39"><span>Dictionary Attacks 04:09-04:39</span></a></h3><p>A dictionary attack is yet another type of brute force attack. In this attack, the hacker compiles a huge list of words and phrases that can be used to guess the password. Weak and common passwords, such as password123, are extremely vulnerable to dictionary attacks.</p><p>Brute force attacks require a lot of time and computing power to be effective. This is why hackers use programs like John the Ripper, hashcat, Medusa, and Cain &amp; Abel to facilitate the process.</p><h3 id="password-cracking-defense-04-39-05-07" tabindex="-1"><a class="header-anchor" href="#password-cracking-defense-04-39-05-07"><span>Password Cracking Defense 04:39-05:07</span></a></h3><p>Implementing proper password protocols is your best defense in these scenarios. A strong password should be at least 8 characters, but more is always better. It should also contain upper and lowercase letters, numbers, and symbols. It shouldn&#39;t contain common words and phrases. The longer and more complex your password is, the more time and effort it takes to brute-force it. Also, strongly consider using passphrases instead of passwords.</p><h3 id="rainbow-attacks-05-07-06-18" tabindex="-1"><a class="header-anchor" href="#rainbow-attacks-05-07-06-18"><span>Rainbow Attacks: 05:07-06:18</span></a></h3><p>When you store a plaintext password, it&#39;s encrypted and generates a hash. Rainbow attacks are similar to dictionary attacks, but instead of trying to match up words and phrases, a rainbow attack uses tables that are already filled with word lists and their hashes. Rainbow attacks require less computing power and are much faster than brute force and dictionary attacks.</p><p>A rainbow table is a table of passwords and generated hashes. The hacker uses this table to match the password&#39;s hash instead of the password itself.</p><p>For example, let&#39;s say that a user&#39;s password is TestOut, and this is the generated hash. In the hacker&#39;s rainbow table, the password SecurityPro generates the same hash value. This is a hash collision, and the hacker could gain access to the system by sending the hash value without having the actual password itself.</p><p>The biggest drawback to rainbow tables is their size. Since different systems use different hashing algorithms, a table needs to be created for each target system. The necessary character sets also greatly increase the tables&#39; sizes. A single table can range from 30 gigabytes to over 300.</p><h3 id="salting-the-hash-06-18-06-38" tabindex="-1"><a class="header-anchor" href="#salting-the-hash-06-18-06-38"><span>Salting the Hash 06:18-06:38</span></a></h3><p>The best way to defend against rainbow attacks is to salt your hashes. Salting the hash just means that some random characters are added at the beginning or end of the password, which ends up generating a completely different hash. The login server knows which part of the hash is salted, but anyone who intercepts the hash has no idea.</p><h3 id="rainbow-attack-programs-06-38-06-49" tabindex="-1"><a class="header-anchor" href="#rainbow-attack-programs-06-38-06-49"><span>Rainbow Attack Programs 06:38-06:49</span></a></h3><p>People use programs like rtgen, winrtgen, and RainbowCrack to create rainbow tables and tools like ophcrack to crack passwords using these tables.</p><h3 id="summary-06-49-07-26" tabindex="-1"><a class="header-anchor" href="#summary-06-49-07-26"><span>Summary 06:49-07:26</span></a></h3><p>That&#39;ll wrap up this lesson. In this lesson, we looked at different password attacks you might encounter. We first looked at social engineering methods, which target the users themselves. Then we covered brute force and dictionary attacks. These methods are essentially attempts at guessing passwords. Remember that these methods take quite a long time and usually require sophisticated computing power and knowledge to pull off. Finally, we looked at rainbow attacks. These attacks attempt to match password hashes instead of having to guess the actual password.</p><h2 id="_11-7-2-password-attack-facts" tabindex="-1"><a class="header-anchor" href="#_11-7-2-password-attack-facts"><span>11.7.2 Password Attack Facts</span></a></h2><p>Passwords are quite often the main defense against unauthorized access to computer systems and sensitive data. This makes passwords a prime target for attackers. A variety of attack methods have been developed to retrieve passwords.</p><p>This lesson covers the following topics:</p><ul><li> Social engineering </li><li> Brute force attacks </li><li> Rainbow attacks </li><li> Cracking passwords using rainbow tables </li></ul><h3 id="social-engineering" tabindex="-1"><a class="header-anchor" href="#social-engineering"><span>Social Engineering</span></a></h3><p>Social engineering is the art of manipulation. In most networks, the weakest link is the human element. Hackers can take advantage of this to gain access to sensitive information, including passwords.</p><p>The following table explains some social engineering techniques to be aware of and protect against.</p>',44),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Social Engineering Technique "),e("th",{scope:"col",class:"fw-bold"}," Description ")])]),e("tbody",null,[e("tr",null,[e("td",null," Password guessing "),e("td",null,[a(" Password guessing is usually not a very efficient method to crack a password. An attacker may first attempt to use default login information, such as admin/admin or simple passwords like password123. "),e("p",null," If these don't work, the attacker can use publicly available information, such as on a target's social media, to make the process easier. Information such as the following can be used to guess a password or answer security questions and reset a user's password: "),e("ul",null,[e("li",null," Birthday "),e("li",null," First car "),e("li",null,[a(" Family information "),e("ul",null,[e("li",null," Spouse's name "),e("li",null," Child's name "),e("li",null," Important dates ")])]),e("li",null," Important locations ")])])]),e("tr",null,[e("td",null," User manipulation "),e("td",null,[a(" A common social engineering technique is user manipulation. This involves the attacker interacting with the user to trick the user into revealing the username and password. For example, the attacker may call the target pretending to be from tech support with a urgent problem. The attacker asks for the target's login information to remote in to resolve the issue. "),e("p",null," User manipulation is a very successful technique and is still used quite often. User training is the best prevention method. ")])]),e("tr",null,[e("td",null," Physical access "),e("td",null,[a(" An attacker can use social engineering to gain physical access to an office building. Once inside, the attacker can look around for login information that users have written down. "),e("p",null," Many users have a tendency to write login information on sticky notes and stick the notes on the monitor or place them under the mouse pad. ")])]),e("tr",null,[e("td",null," Dumpster diving "),e("td",null,[a(" An attacker may dumpster dive (go through the trash) to find important documents or information that has been thrown out. Many users will throw out papers without realizing the importance of the information. "),e("p",null," Documents should always be shredded to prevent data loss due to dumpster diving. ")])]),e("tr",null,[e("td",null," Shoulder surfing "),e("td",null," Shoulder surfing is an eavesdropping technique in which the attacker obtains passwords or other confidential information by looking over the shoulder of a user typing a password. ")])])],-1),e("p",null,"User education is the best defense against any form of social engineering. Users should be trained that no one will ever ask for their login information and to always be aware of their surroundings.",-1),e("h3",{id:"brute-force-attacks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brute-force-attacks"},[e("span",null,"Brute Force Attacks")])],-1),e("p",null,"In a brute force attack, the attacker attempts to guess the password by using a cracking tool that submits every possible letter, number, and symbol combination in a short amount of time. A brute force password attack can be a very time-consuming attack.",-1),e("p",null,"The following table describes some of the brute force attack methods.",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Brute Force Attack Method "),e("th",{scope:"col",class:"fw-bold"}," Description ")])]),e("tbody",null,[e("tr",null,[e("td",null," Online attack "),e("td",null,[a(" An online brute force attack requires the attacker to submit the passwords using the same user login interface while the target is up and running. For example: "),e("ul",null,[e("li",null," An attacker targeting a website will submit login attempts to the site interface. "),e("li",null," An attacker targeting a computer will submit login attempts to the login screen. ")]),e("p",null," The best defense against this method is to implement lock out policies. This means if the incorrect password is entered multiple times in a short period of time, the account will be locked for a specified amount of time. ")])]),e("tr",null,[e("td",null," Offline attack "),e("td",null,[a(" Offline attacks require the attacker to somehow steal the password file. The attacker can then run attacks against that file with no limitations, such as lock out policies. "),e("p",null," This is the ideal method for the attacker, but is more difficult because it requires the attacker to somehow steal the password file. ")])]),e("tr",null,[e("td",null," Password spraying "),e("td",null,[a(" Password spraying is another method that allows the attacker to avoid lock out policies. "),e("ul",null,[e("li",null," Instead of attempting multiple logins using a single user account and different passwords, the attacker will use the same password with multiple user accounts. "),e("li",null," The attacker will continue cycling through the user accounts submitting passwords until a match is found. "),e("li",null," Because there is a delay between submitting a password on each account, the lock out policy can be avoided. ")])])]),e("tr",null,[e("td",null," Dictionary attack "),e("td",null,[a(" In a dictionary attack, the hacker uses a list of words and phrases to try to guess the password. "),e("ul",null,[e("li",null," Dictionary attacks work well if weak passwords are used. "),e("li",null," Using longer and uncommon passphrases is the best way to secure data against these attacks ")])])])])],-1),t('<p>Some common password cracking tools that can be used to carry out brute force attacks are:</p><ul><li> John the Ripper </li><li> Hashcat </li><li> Medusa </li><li> Cain and Abel </li></ul><p>Implementing proper password protocols is the best defense against password cracking attempts. A strong password should:</p><ul><li> Be at least 8 characters; more is better. </li><li> Contain upper and lower case letters. </li><li> Contain numbers. </li><li> Contain symbols. </li><li> Not use common words or phrases. </li></ul><p>A passphrase is the best option to use instead of a password.</p><h3 id="rainbow-attacks" tabindex="-1"><a class="header-anchor" href="#rainbow-attacks"><span>Rainbow Attacks</span></a></h3><p>When a plaintext password is stored, it is encrypted and a hash is generated.</p><p>Rainbow attacks are similar to dictionary attacks, but instead of trying to match the words and phrases, a rainbow attack uses special tables called rainbow tables that are already filled with common passwords and their generated hashes. The attacker uses this table to match the hashes instead of the password itself. Rainbow attacks require less computing power and are much faster than brute force attacks.</p><p>Storing rainbow tables requires a lot of storage. A single rainbow table can range anywhere from 30GB to over 300GB. The character set (lower and/or upper case letters, numbers, symbols) being used will greatly increase the size. A different rainbow table needs to be generated for each encryption algorithm.</p><p>The best defense against rainbow attacks is salting the hashes. Salting the hash means that random characters are added at the beginning or end of the password. This generates a completely different hash. The login server is programmed to identify the part of the hash that is salted, but anyone intercepting the hash will have no idea; so, the hash can’t be decrypted.</p><h3 id="cracking-passwords-using-rainbow-tables" tabindex="-1"><a class="header-anchor" href="#cracking-passwords-using-rainbow-tables"><span>Cracking Passwords Using Rainbow Tables</span></a></h3><p>An encrypted plaintext password stored in a hash file can be cracked using rainbow tables. There are several types of programs that can be used to create and crack these types of passwords, such as:</p><ul><li> Rtgen </li><li> Winrtgen </li><li> RainbowCrack </li><li> Ophcrack </li></ul><p>As an example, the following table lists a few examples of the commands needed to create and sort a rainbow crack table:</p>',14),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"},"Command"),e("th",{scope:"col",class:"fw-bold"},"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"rtgen"),e("td",null,[a(" This command generates a rainbow table based on the parameters specified by the user. "),e("br"),a(" The parameters are: rtgen "),e("b",{class:"fw-bold"},[e("i",{class:"fs-italicize"},[a(" hash_algorithm charset plaintext_len_min "),e("br"),a(" plaintext_len_max table_index chain_len chain_num part_index ")])]),e("h2",{class:"fw-bold"},"rtgen md5 ascii-32-95 1 7 0 1000 1000 0"),e("ul",null,[e("li",null,[e("i",{class:"fs-italicize"}," hash_algorithm "),a(" - A hashing algorithm is a mathematical algorithm which can convert an input data array of a certain type and arbitrary length to an output bit string of a fixed length. A rainbow table must be generated for the type of hash algorithm used. Although there are many hash algorithms that can be use, some of the more common are; ntlm, md5, and sha1. ")]),e("li",null,[e("i",{class:"fs-italicize"}," charset "),a(" - A charset specifies all the possible characters for the plaintext. Some of the possible charset that can be used include: "),e("ul",null,[e("li",null,"Numeric = [0123456789]"),e("li",null,"alpha = [ABCDEFGHIJKLMNOPQRSTUVWXYZ]"),e("li",null," alpha-numeric = [ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789] "),e("li",null,"loweralpha = [abcdefghijklmnopqrstuvwxyz]"),e("li",null," loweralpha-numeric = [abcdefghijklmnopqrstuvwxyz0123456789] "),e("li",null,` ascii-32-95 = ascii-32-95 = [ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'abcdefghijklmngpqrstuvwxyz{|}~] `)])]),e("li",null,[e("i",{class:"fs-italicize"}," plaintext_len_min "),a(" and "),e("i",{class:"fs-italicize"}," plaintext_len_max "),a(" - These two values, such as 1 7, specifies length of the plaintext. ")])]),e("blockquote",null,[e("p",null," The next four parameters are advanced values and are beyond the scope of this lesson. Therefore, only a brief explanation is given here: ")]),e("ul",null,[e("li",null,[e("i",{class:"fs-italicize"}," table_index "),a(" - Specifies the reduction function. Examples are: 0, 1, 2, 3, 4. Zero is often used as the default. ")]),e("li",null,[e("i",{class:"fs-italicize"}," chain_len "),a(" - This specifies the rainbow chain length. ")]),e("li",null,[e("i",{class:"fs-italicize"}," chain_num "),a(" - This specifies the number of rainbow chains to generate. ")]),e("li",null,[e("i",{class:"fs-italicize"}," part_index "),a(" - The number of files used to store the rainbow table. If a value greater than zero is use, the rainbow table is saved in the number of smaller files specified by the value. ")])]),e("blockquote",null,[e("h2",{class:"fw-bold"},"0 1000 1000 0")])])]),e("tr",null,[e("td",null,"rtsort"),e("td",null,[a(" A rainbow table is an array of rainbow chains. Each rainbow chain has a start point and an end point. The rtsort program sorts the rainbow chains by end point to make binary search possible. To sort a rainbow table, use the following command (the period at the end is part of the command): "),e("h2",{class:"fw-bold"},"rtsort .")])])])],-1),e("h3",{id:"rcrack",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rcrack"},[e("span",null,"rcrack")])],-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Command "),e("th",{scope:"col",class:"fw-bold"}," Description ")])]),e("tbody",null,[e("tr",null,[e("td",null,[e("b",{class:"fw-bold"}," rcrack . -l /root/hashes.txt ")]),e("td",null,[a(" The "),e("b",{class:"fw-bold"}," -l "),a(" parameter loads the hashes from a file and each hash is shown on its own line. The hash is shown followed by the cracked password. "),e("p",null,[a(" Example output: "),e("br"),a(" plaintext of 590cb9bZaC590/5b9b4b0/152d2321117 P@ssw0rd "),e("br"),a(" plaintext of 400238780e6c41f8f790161e6ed4aafc21 Test_Out@11_Last "),e("br"),a(" plaintext of 89BF04763BF91C9EE2DDBE23D735C73OBDD41FF2 NeverLAnd5 ")])])]),e("tr",null,[e("td",null,[e("b",{class:"fw-bold"},[a(" rcrack . -h "),e("i",{class:"fs-italicize"}," hash_value ")])]),e("td",null,[a(" The "),e("b",{class:"fw-bold"}," -h "),a(" parameter loads and displays the results for a single hash. "),e("h2",{class:"fw-bold"}," rcrack . -h 590cb9bZaC590/5b9b4b0/152d2321117 ")])])])],-1),t('<h2 id="_11-7-3-using-rainbow-tables" tabindex="-1"><a class="header-anchor" href="#_11-7-3-using-rainbow-tables"><span>11.7.3 Using Rainbow Tables</span></a></h2><h3 id="use-rainbow-tables-00-00-00-49" tabindex="-1"><a class="header-anchor" href="#use-rainbow-tables-00-00-00-49"><span>Use Rainbow Tables 00:00-00:49</span></a></h3><p>Nearly every computer system that requires password authentication must contain a password database. Because the information in databases is vulnerable to theft, storing passwords in plain text isn&#39;t a very good idea. Therefore, passwords are usually stored with a cryptographic hash.</p><p>When they want to crack a password, hackers often use rainbow tables to speed up the process. So, what is a rainbow table, exactly? A rainbow table is basically a table of passwords and the computed matching hashes. The advantage of using rainbow tables is that they save computation time compared to typical brute forcing. The disadvantage is that rainbow tables can take up a lot of storage space. Here, we can look at the website called RainbowCrack, and you can see that some of these are quite large, over half a terabyte in size.</p><h3 id="create-a-rainbow-table-00-49-02-28" tabindex="-1"><a class="header-anchor" href="#create-a-rainbow-table-00-49-02-28"><span>Create a Rainbow Table 00:49-02:28</span></a></h3><p>In this demo, we&#39;re going to generate our own rainbow table using the RainbowCrack collection. We&#39;re going to use Kail Linux and RainbowCrack, which comes pre-installed.</p><p>To open the program, we just type &#39;rtgen&#39;, and it starts. Down here, we have a couple of examples. In the example, the first part is the hashing algorithm. Here, they have MD5. Next, we need to specify the character set. They&#39;ve specified loweralpha numeric, which is the letters A to Z and numbers 0 to 9. 1 and 7 are the length of the passwords, so they&#39;re going to be between one and seven characters long. The rest of this information is some advanced configuration settings that aren&#39;t in the scope of what we&#39;re covering in this demo. You can find more information about the advanced features on the RainbowCrack website.</p><p>I&#39;m going to go ahead and create our table. I&#39;ll do that by typing &#39;rtgen md5&#39; numeric for our character set and 1 through 9 for our password length along with the rest of the parameters. Let&#39;s press Enter. When I do that, my rainbow table is created. Now, if I want to see where this was located, I can type in &#39;cd /usr/share/rainbowcrack&#39; and press Enter. From here, I&#39;ll type in &#39;ls&#39;, and you can see my rainbow table file.</p><p>I&#39;ll clear the screen.</p><p>Now we have to sort our rainbow table. To do that, I&#39;ll type in &#39;rtsort .&#39; and press Enter. Each rainbow chain has a start point and an end point. The rtsort program sorts the rainbow chains by end point to make binary searches possible. It&#39;s very important that you don&#39;t interrupt the sorting process.</p><p>All right. That&#39;s done, and now we&#39;re ready to crack a hash with our new table. I&#39;ll clear the screen again.</p><h3 id="crack-a-hash-02-28-03-16" tabindex="-1"><a class="header-anchor" href="#crack-a-hash-02-28-03-16"><span>Crack a Hash 02:28-03:16</span></a></h3><p>To crack a hash, I&#39;ll type in &#39;./rcrack .-h&#39;. The dot is to specify our rainbow tables, and the -h is for hash. Now, we need to put in our hash. To do this, I&#39;m going to go to this website, md5 hash generator. I can generate a hash by entering &#39;123&#39; and clicking Generate. I&#39;ll copy this hash, minimize this window, go back to my terminal, paste, and press Enter.</p><p>My results pop up very quickly. Here, I&#39;ve found one of one plaintext. It only took a fraction of a second to run. And down here, I have the hash that I typed in. You can see the numbers I used, 123. So, we successfully cracked this hash with our rainbow table.</p><h3 id="summary-03-16-03-34" tabindex="-1"><a class="header-anchor" href="#summary-03-16-03-34"><span>Summary 03:16-03:34</span></a></h3><p>That&#39;s it for this demo. In this demo, we used the command line version of RainbowCrack to create a rainbow table. Then we sorted the table and used an online hash generator to create a hash that we were able to crack with the rainbow table we created.</p><h2 id="_11-7-5-crack-passwords" tabindex="-1"><a class="header-anchor" href="#_11-7-5-crack-passwords"><span>11.7.5 Crack Passwords</span></a></h2><h3 id="crack-passwords-00-00-00-11" tabindex="-1"><a class="header-anchor" href="#crack-passwords-00-00-00-11"><span>Crack Passwords 00:00-00:11</span></a></h3><p>All penetration testers and ethical hackers need the ability to crack passwords. In this demo, we&#39;re going to cover some ways to crack passwords in Linux and Windows.</p><h3 id="john-the-ripper-00-11-01-44" tabindex="-1"><a class="header-anchor" href="#john-the-ripper-00-11-01-44"><span>John the Ripper 00:11-01:44</span></a></h3><p>One of the most popular password cracking programs is John the Ripper. It combines a number of password crackers into one package, autodetects password hash types, and includes a customizable cracker. You can run it against many encrypted password formats, including several password hash types commonly found in Linux and Windows. You can also run John the Ripper against access passwords for compressed ZIP files and documents.</p><p>John the Ripper is a command line tool. There&#39;s also a GUI-based version called Johnny, which uses the underlying features of the command line version. Both are included with Kali Linux. We&#39;re going to use the command line version.</p><p>First, we need to open up a terminal. Now I want to point out the password file. When we do a dictionary attack, our cracking program needs a wordlist (a list of potential passwords) to refer to. So we need to switch to the folder where that password list is stored. By default, on Kali Linux, the wordlist is located in the /usr/share/john folder. To get there, I need to switch to that directory by typing &#39;cd /usr/share/john&#39; and press Enter. Now, if I type &#39;ls&#39;, I&#39;ll be able to see the contents of this folder. I&#39;m looking for this file, the password.lst file.</p><p>Now we&#39;re going to go back to the root directory. I can do that by just typing in &#39;cd&#39;. I like to keep my terminal screen cleared off, so I&#39;ll &#39;clear&#39; the screen.</p><p>Next, if I type in &#39;john&#39;, I get a list list some of the different options that I can use with John the Ripper. If you need to know something about a command&#39;s syntax, this page might help you out.</p><h3 id="crack-linux-passwords-01-44-02-31" tabindex="-1"><a class="header-anchor" href="#crack-linux-passwords-01-44-02-31"><span>Crack Linux Passwords 01:44-02:31</span></a></h3><p>We&#39;re ready to crack our password. You might think that passwords would be stored in a folder called Passwords, but they&#39;re not. Linux passwords are kept in the /etc/shadow file. So, to crack the passwords on this system, I just need to type in &#39;john /etc/shadow&#39; and press Enter. And that only took a few seconds to crack. It says it loaded two different passwords from two different salts. (If you remember, if a hash is salted, that means that there&#39;s extra data added to the hashes because there are two identical passwords being used here. Hashes are salted to make passwords unique in the system.)</p><p>Down here, we can see that it found the password for the root user.</p><p>Depending on your system, this process could take a lot longer. My password just happens to be toward the top of the list in my password.lst file.</p><h3 id="crack-passwords-from-a-windows-machine-02-31-02-51" tabindex="-1"><a class="header-anchor" href="#crack-passwords-from-a-windows-machine-02-31-02-51"><span>Crack Passwords from a Windows Machine 02:31-02:51</span></a></h3><p>Now we&#39;re going to jump over to a Windows system and crack a few passwords from there. We&#39;re going to look at dictionary attacks, which use a dictionary file, and brute force attacks, which use every potential combination of letters, numbers, and special characters. And remember, there are many hybrid attacks that mix these techniques in various ways, but we&#39;re just covering the basics here.</p><h3 id="dictionary-attack-02-51-05-48" tabindex="-1"><a class="header-anchor" href="#dictionary-attack-02-51-05-48"><span>Dictionary Attack 02:51-05:48</span></a></h3><p>Let&#39;s start with a dictionary attack. We&#39;re going to use Cain, a popular program that&#39;s also known as Cain and Abel. When you install Cain and Abel, Windows will give you all types of warning messages. You&#39;ll have to disable your Windows Firewall and your antivirus software. Your antivirus will most likely recognize Cain and Abel as malicious software and quarantine the files required for it to run.</p><p>Once you launch Cain and Abel, you&#39;ll see all your password cracking tools. We&#39;re going to go to the Cracker tab, up here. We&#39;re interested in the LM &amp; NTLM hashes. Next, let&#39;s go up here and click on this plus sign to import hashes from our computer. Here, under Add NT Hashes, we can add hashes from our local system. We can also check this box to include password history hashes so that if users are required to change passwords every 30 or 45 days, previous password hashes are included during the import.</p><p>You can also import hashes from a text file. So, if you have access to another system, you could potentially collect hashes from that system, dump them into a text file, copy them to a USB device, and then load them here and attempt to crack the passwords. You can also import from a SAM database by checking this, here.</p><p>Right now, we&#39;re just going to import hashes from our local system. You can see that it just loaded all the local accounts I have on this system. If you see &quot;empty&quot; under NT passwords, that means that there&#39;s no password for that account. If that field is blank, that means that a password is assigned to the account.</p><p>We&#39;re going to use a dictionary attack to see if we can retrieve the password for the Mrs. Worley account. I&#39;m going to right-click on that account, hover over Dictionary Attack, and go to NTLM Hashes. Now I&#39;m going to go up into this white space, right-click, and select Add to list.</p><p>Before I started this demo, I downloaded a list of passwords from the internet. This file is a list of ten thousand common passwords. It&#39;s estimated that thirty percent of all passwords are included in this list. If you look down here, you can see that it&#39;s going to scan for passwords.</p><p>If we check this box, here, it will look for the exact password. So, if my password is cat, that&#39;s what it&#39;s going to look for.</p><p>Below that, it will reverse that password--so, instead of c-a-t, it would look for t-a-c.</p><p>Double passwords are just a password typed in twice. You can also have it search for all-lowercase passwords, search for all-uppercase passwords, or even have it put in numbers that commonly replace letters in passwords. With all these combinations, we&#39;re really going to use a variation of tens of thousands of different passwords.</p><p>Let&#39;s click on Start. Depending on your computer&#39;s processor, memory, and capability, this process can take a very long time. To save time, I actually edited that file and deleted most of the passwords with this scan. You can see that the scan did finish, but it didn&#39;t find that password. That&#39;s a good thing; it means my password isn&#39;t a dictionary word. Since that didn&#39;t work, let&#39;s exit and try a brute force attack.</p><h3 id="brute-force-attack-05-48-07-39" tabindex="-1"><a class="header-anchor" href="#brute-force-attack-05-48-07-39"><span>Brute Force Attack 05:48-07:39</span></a></h3><p>We&#39;ll right-click on Mrs. Worley&#39;s account, hover over Brute-Force Attack, and select NTLM Hashes. Here&#39;s a predefined attack. You can see that if I click here, we can add to our options. We only have lowercase letters and numbers. We also have lowercase with numbers and special characters. I have lowercase, uppercase, numbers, and special characters.</p><p>I&#39;m going to brute force from one to sixteen characters. This system is a virtual machine with a single processor and not much memory, so it&#39;s going to take a long time. Let&#39;s click Start and see what happens. Down here, on the left, you can see it&#39;s going to take years to cycle through every variation and crack this password. We don&#39;t have years and years to wait, so let&#39;s stop this process and try something else.</p><p>To crack the password faster, we need to customize our attack. I&#39;ll get rid of these characters. Let&#39;s say I was doing some shoulder surfing and happened to see that Mrs. Worley was typing in a password, and I noticed three things: I saw that she typed &#39;teache&#39; and that she didn&#39;t use any letters from u to z. I also saw that her password wasn&#39;t very long. So, we&#39;re going to brute force with these letters and use 6 or 7 characters. We also know the first several letters of our password. Of course, you probably wouldn&#39;t have all this information. But to save time, I&#39;ve made these adjustments. I&#39;ll go ahead and click Start, and it will attempt to crack this password. You can see it&#39;s going to take a few minutes to complete, so I&#39;ll pause the demo and let the attack run.</p><p>Okay, our scan has completed in just under three minutes. You can see that the password it found was the word &quot;teacher.&quot; Of course, knowing the first several letters of the password, like we did here, isn&#39;t common. I simplified the attack for time&#39;s sake. But it&#39;s often possible to gather enough information to brute force a password in a few days or even hours.</p><h3 id="summary-07-39-08-03" tabindex="-1"><a class="header-anchor" href="#summary-07-39-08-03"><span>Summary 07:39-08:03</span></a></h3><p>Okay, that&#39;s it for this demo. In this demo, we introduced John the Ripper and used it to crack a Linux password. Then we switched over to a Windows system and used Cain and Abel to crack a Windows-based password. You can see how, if users leak a little information or use easy passwords, hacking tools can get you into restricted systems and files in no time.</p><h2 id="_11-7-6-crack-password-protected-files" tabindex="-1"><a class="header-anchor" href="#_11-7-6-crack-password-protected-files"><span>11.7.6 Crack Password Protected Files</span></a></h2><h3 id="introduction-00-00-00-33" tabindex="-1"><a class="header-anchor" href="#introduction-00-00-00-33"><span>Introduction 00:00-00:33</span></a></h3><p>Password-protected files are extremely common, but they&#39;re not 100 percent secure. Some files natively support password protection, like PDFs. Other types of files are easy to store in a password-protected zip archive. Today, we&#39;re going to extract the password hash from these kinds of files and use John the Ripper to crack the hash. As a reminder, John the Ripper only works with hashes. It doesn&#39;t natively know how to work directly with password-protected files, so we need to extract the hash from the file we&#39;re interested in.</p><h3 id="crack-a-zip-password-00-33-02-23" tabindex="-1"><a class="header-anchor" href="#crack-a-zip-password-00-33-02-23"><span>Crack a Zip Password 00:33-02:23</span></a></h3><p>The process of extracting a hash is similar for most files. The toolkit provided with John the Ripper provides many scripts, but some of them aren&#39;t included on Kali Linux by default. We can obtain these tools by cloning the project from GitHub, but I&#39;ve already downloaded the tools we need. Let&#39;s extract the hashes from the zip file we&#39;re interested in.</p><p>I&#39;ll open a terminal and go to the Documents directory. I&#39;ll list the folder contents to see what we have in there. I have a file called protected.zip. This is the zip file we&#39;ll attempt to crack the password on. We also have a wordlist that we&#39;ll use called words.txt.</p><p>Most tools that exist to help us extract hashes from files follow the standard for file type, in this case, zip followed by the number 2 and the word &quot;john&quot;. So, I&#39;ll type, &#39;zip2john&#39;. This makes it easier to remember what command we need. These tools output the hash straight to the screen, so we use the angle bracket to redirect that output to a file. We will finish our command with &#39;protected.zip &gt; ziphash&#39;.</p><p>Now that we have the hash for the zip file, we can crack it with John the Ripper. We need to specify the format of the hash, the file name, and the wordlist we want to facilitate cracking the hash. So, I&#39;ll type, &#39;john - -format=pkzip ziphash - -wordlist=words.txt&#39;. We have the password. It&#39;s a variation of the word password. Now, let&#39;s extract the zipped file with that password!</p><p>I&#39;ll do that from the command line by typing &#39;unzip protected.zip&#39;. It prompts for the password, so I&#39;ll type in the password that we just cracked. I get a message that the file is inflating. Let&#39;s list the folder contents. Now I see another file called password.pdf.</p><p>This is a PDF file that&#39;s also password-protected, so whoever set this up was really concerned about this document&#39;s security.</p><h3 id="crack-a-pdf-password-02-23-03-06" tabindex="-1"><a class="header-anchor" href="#crack-a-pdf-password-02-23-03-06"><span>Crack a PDF Password 02:23-03:06</span></a></h3><p>If this PDF&#39;s password is just as weak as the first one, we can crack it, too. Let&#39;s go ahead and do that now.</p><p>Getting the hash from the PDF is pretty much the same process as getting the hash from the zipped file. Let&#39;s type <code>pdf2john password.pdf &gt; pdfhash</code> and press Enter.</p><p>Now let&#39;s crack the password, just like we did for the zipped file password, by typing <code>john - -format=pdf pdfhash - -wordlist=words.txt</code> and pressing Enter. There&#39;s the password! It&#39;s the word &#39;secret&quot;. Let&#39;s try it to make sure it works.</p><p>I&#39;ll go to my Documents folder and open the PDF. It prompts me for a password, so I&#39;ll type in &#39;secret&#39;, and my file opens up.</p><h3 id="summary-03-06-03-23" tabindex="-1"><a class="header-anchor" href="#summary-03-06-03-23"><span>Summary 03:06-03:23</span></a></h3><p>And that&#39;s all there is to it. In this demo, we talked about extracting hashes from password-protected files. We extracted hashes from a zip file and then a PDF file. Then we used John the Ripper to crack those hashes.</p>',66)]))}const d=o(i,[["render",l],["__file","11.07.PasswordAttacks.html.vue"]]),p=JSON.parse('{"path":"/11/11.07.PasswordAttacks.html","title":"Section 11.7 Password Attacks","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 11.7 Password Attacks","description":"some description"},"headers":[{"level":2,"title":"11.7.1 Password Attacks","slug":"_11-7-1-password-attacks","link":"#_11-7-1-password-attacks","children":[{"level":3,"title":"Password Attacks 00:00-00:27","slug":"password-attacks-00-00-00-27","link":"#password-attacks-00-00-00-27","children":[]},{"level":3,"title":"Social Engineering 00:27-00:42","slug":"social-engineering-00-27-00-42","link":"#social-engineering-00-27-00-42","children":[]},{"level":3,"title":"Password Guessing 00:42-02:36","slug":"password-guessing-00-42-02-36","link":"#password-guessing-00-42-02-36","children":[]},{"level":3,"title":"Brute Force Attacks: 02:36-02:54","slug":"brute-force-attacks-02-36-02-54","link":"#brute-force-attacks-02-36-02-54","children":[]},{"level":3,"title":"Online Brute Force Attacks 02:54-03:27","slug":"online-brute-force-attacks-02-54-03-27","link":"#online-brute-force-attacks-02-54-03-27","children":[]},{"level":3,"title":"Offline Brute Force Attacks 03:27-03:44","slug":"offline-brute-force-attacks-03-27-03-44","link":"#offline-brute-force-attacks-03-27-03-44","children":[]},{"level":3,"title":"Password Spraying 03:44-04:09","slug":"password-spraying-03-44-04-09","link":"#password-spraying-03-44-04-09","children":[]},{"level":3,"title":"Dictionary Attacks 04:09-04:39","slug":"dictionary-attacks-04-09-04-39","link":"#dictionary-attacks-04-09-04-39","children":[]},{"level":3,"title":"Password Cracking Defense 04:39-05:07","slug":"password-cracking-defense-04-39-05-07","link":"#password-cracking-defense-04-39-05-07","children":[]},{"level":3,"title":"Rainbow Attacks: 05:07-06:18","slug":"rainbow-attacks-05-07-06-18","link":"#rainbow-attacks-05-07-06-18","children":[]},{"level":3,"title":"Salting the Hash 06:18-06:38","slug":"salting-the-hash-06-18-06-38","link":"#salting-the-hash-06-18-06-38","children":[]},{"level":3,"title":"Rainbow Attack Programs 06:38-06:49","slug":"rainbow-attack-programs-06-38-06-49","link":"#rainbow-attack-programs-06-38-06-49","children":[]},{"level":3,"title":"Summary 06:49-07:26","slug":"summary-06-49-07-26","link":"#summary-06-49-07-26","children":[]}]},{"level":2,"title":"11.7.2 Password Attack Facts","slug":"_11-7-2-password-attack-facts","link":"#_11-7-2-password-attack-facts","children":[{"level":3,"title":"Social Engineering","slug":"social-engineering","link":"#social-engineering","children":[]},{"level":3,"title":"Brute Force Attacks","slug":"brute-force-attacks","link":"#brute-force-attacks","children":[]},{"level":3,"title":"Rainbow Attacks","slug":"rainbow-attacks","link":"#rainbow-attacks","children":[]},{"level":3,"title":"Cracking Passwords Using Rainbow Tables","slug":"cracking-passwords-using-rainbow-tables","link":"#cracking-passwords-using-rainbow-tables","children":[]},{"level":3,"title":"rcrack","slug":"rcrack","link":"#rcrack","children":[]}]},{"level":2,"title":"11.7.3 Using Rainbow Tables","slug":"_11-7-3-using-rainbow-tables","link":"#_11-7-3-using-rainbow-tables","children":[{"level":3,"title":"Use Rainbow Tables 00:00-00:49","slug":"use-rainbow-tables-00-00-00-49","link":"#use-rainbow-tables-00-00-00-49","children":[]},{"level":3,"title":"Create a Rainbow Table 00:49-02:28","slug":"create-a-rainbow-table-00-49-02-28","link":"#create-a-rainbow-table-00-49-02-28","children":[]},{"level":3,"title":"Crack a Hash 02:28-03:16","slug":"crack-a-hash-02-28-03-16","link":"#crack-a-hash-02-28-03-16","children":[]},{"level":3,"title":"Summary 03:16-03:34","slug":"summary-03-16-03-34","link":"#summary-03-16-03-34","children":[]}]},{"level":2,"title":"11.7.5 Crack Passwords","slug":"_11-7-5-crack-passwords","link":"#_11-7-5-crack-passwords","children":[{"level":3,"title":"Crack Passwords 00:00-00:11","slug":"crack-passwords-00-00-00-11","link":"#crack-passwords-00-00-00-11","children":[]},{"level":3,"title":"John the Ripper 00:11-01:44","slug":"john-the-ripper-00-11-01-44","link":"#john-the-ripper-00-11-01-44","children":[]},{"level":3,"title":"Crack Linux Passwords 01:44-02:31","slug":"crack-linux-passwords-01-44-02-31","link":"#crack-linux-passwords-01-44-02-31","children":[]},{"level":3,"title":"Crack Passwords from a Windows Machine 02:31-02:51","slug":"crack-passwords-from-a-windows-machine-02-31-02-51","link":"#crack-passwords-from-a-windows-machine-02-31-02-51","children":[]},{"level":3,"title":"Dictionary Attack 02:51-05:48","slug":"dictionary-attack-02-51-05-48","link":"#dictionary-attack-02-51-05-48","children":[]},{"level":3,"title":"Brute Force Attack 05:48-07:39","slug":"brute-force-attack-05-48-07-39","link":"#brute-force-attack-05-48-07-39","children":[]},{"level":3,"title":"Summary 07:39-08:03","slug":"summary-07-39-08-03","link":"#summary-07-39-08-03","children":[]}]},{"level":2,"title":"11.7.6 Crack Password Protected Files","slug":"_11-7-6-crack-password-protected-files","link":"#_11-7-6-crack-password-protected-files","children":[{"level":3,"title":"Introduction 00:00-00:33","slug":"introduction-00-00-00-33","link":"#introduction-00-00-00-33","children":[]},{"level":3,"title":"Crack a Zip Password 00:33-02:23","slug":"crack-a-zip-password-00-33-02-23","link":"#crack-a-zip-password-00-33-02-23","children":[]},{"level":3,"title":"Crack a PDF Password 02:23-03:06","slug":"crack-a-pdf-password-02-23-03-06","link":"#crack-a-pdf-password-02-23-03-06","children":[]},{"level":3,"title":"Summary 03:06-03:23","slug":"summary-03-06-03-23","link":"#summary-03-06-03-23","children":[]}]}],"git":{"updatedTime":1736231937000},"filePathRelative":"11/11.07.PasswordAttacks.md"}');export{d as comp,p as data};
