import{_ as a,c as o,b as i,a as e,d as t,o as n}from"./app-C-rfiiRd.js";const c={};function r(l,s){return n(),o("div",null,s[0]||(s[0]=[i("<p>As you study this section, answer the following questions:</p><ul><li> What is access control and why is it important? </li><li> How are rule-based access control and mandatory access control (MAC) similar? </li><li> How does role-based control differ from rule-based control? </li><li> How do separation of duties and job rotation differ? </li><li> Which authentication type requires you to prove your identity? </li></ul><p>In this section, you will learn to:</p><ul><li>Implement discretionary access control.</li></ul><p>The key terms for this section include:</p>",5),e("table",{class:"terms"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Term "),e("th",{scope:"col",class:"fw-bold"}," Definition ")])]),e("tbody",null,[e("tr",null,[e("td",null," Access control "),e("td",null," Access control is the ability to permit or deny access to resources on a network or computer. ")]),e("tr",null,[e("td",null," Access control policy "),e("td",null," An access control policy defines the steps and measures that are taken to control access to objects. ")]),e("tr",null,[e("td",null," Access control system "),e("td",null," An access control system includes policies, procedures, and technologies that are implemented to control access to objects. ")]),e("tr",null,[e("td",null," Authentication "),e("td",null," Authentication is the process of validating identity. It includes the identification process, a user providing input to prove identity, and the system accepting that input as valid. ")]),e("tr",null,[e("td",null," Authorization "),e("td",null," Authorization is granting or denying access to an object based on the level of permissions or the actions allowed with the object. ")]),e("tr",null,[e("td",null," Auditing "),e("td",null," Auditing, also referred to as accounting, is maintaining a record of the activity within the information system. ")]),e("tr",null,[e("td",null," Objects "),e("td",null," Objects are data, applications, systems, networks, and physical space. ")]),e("tr",null,[e("td",null," Subjects "),e("td",null," Subjects are users, applications, or processes that need access to objects. ")])])],-1),e("p",null,"This section helps you prepare for the following certification exam objectives:",-1),e("table",{class:"objectives"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Exam "),e("th",{scope:"col",class:"fw-bold"}," Objective ")])]),e("tbody",null,[e("tr",null,[e("td",null," TestOut Security Pro "),e("td",null,[t(" 1.0 Identity Management and Authentication "),e("blockquote",null," 1.2 Harden Authentication ")])]),e("tr",null,[e("td",null," CompTIA Security+ SY0-601 "),e("td",null,[t(" 2.4. Summarize authentication and authorization design concepts. "),e("ul",null,[e("li",null," Federation ")]),e("p",null," 3.8. Given a scenario, implement authentication and authorization solutions. "),e("ul",null,[e("li",null,[t(" Access control schemes "),e("ul",null,[e("li",null," Attribute-based access control (ABAC) "),e("li",null," Role-based access control "),e("li",null," Rule-based access control "),e("li",null," MAC "),e("li",null," Discretionary access control (DAC) "),e("li",null," Conditional access "),e("li",null," Privilege access management "),e("li",null," Filesystem permissions ")])])])])])])],-1),i('<h2 id="_6-1-1-identity-and-access-management" tabindex="-1"><a class="header-anchor" href="#_6-1-1-identity-and-access-management"><span>6.1.1 Identity and Access Management</span></a></h2><h3 id="identify-and-access-management-00-00-00-37" tabindex="-1"><a class="header-anchor" href="#identify-and-access-management-00-00-00-37"><span>Identify and Access Management 00:00-00:37</span></a></h3><p>One of your primary roles as a security professional is to protect the resources within your organization or company.</p><p>Now, you could accomplish this by gathering up all the company&#39;s resources, placing them in a giant safe, putting that safe in an even bigger safe, and, for good measure, dropping it in the deepest part of the ocean. Your data is secure, and you can sleep soundly. Right? Of course not.</p><p>In the real world, those resources need to be accessed daily by employees, third parties, customers, and sometimes even the public.</p><h3 id="balancing-access-00-37-00-54" tabindex="-1"><a class="header-anchor" href="#balancing-access-00-37-00-54"><span>Balancing Access 00:37-00:54</span></a></h3><p>Because of this, we can&#39;t just lock up our resources. Instead, we need a system that allows us to keep those resources secure, while also enabling us to control and manage access. And to effectively manage this system, you need to understand the different components and concepts it uses.</p><h3 id="identification-00-54-01-37" tabindex="-1"><a class="header-anchor" href="#identification-00-54-01-37"><span>Identification 00:54-01:37</span></a></h3><p>The first concept we&#39;ll look at is identification. Many people confuse identification with authentication, but these are two distinct concepts.</p><p>Identification is merely the act of claiming an identity. For example, when you tell someone your name, you are identifying yourself. Your identification is your name. Similarly, in the computer world, a username is a form of identification. It&#39;s a piece of information used to identify a certain user.</p><p>Identification by itself isn&#39;t very secure. Anyone could pretend to be you. To substantiate a person&#39;s identity, they need to provide some verification to prove that they are who they say they are.</p><h3 id="authentication-01-37-03-13" tabindex="-1"><a class="header-anchor" href="#authentication-01-37-03-13"><span>Authentication 01:37-03:13</span></a></h3><p>They can do this through an authentication process, which is the second concept you should understand.</p><p>Authentication is the process of proving an identity. It&#39;s confirming they are actually who they say they are. For example, showing someone your driver&#39;s license or passport in order to prove your identity is the process of authentication.</p><p>In the computer world, this is accomplished by providing some piece of information that only the actual user can provide. There are several different types of computer system authentication, and they are broken down into five different categories.</p><p>We&#39;ll go into much more detail about the various types of authentication in a later lesson. But for now, just know that the five categories are 1) something you are, 2) something you have, 3) something you know, 4) somewhere you are, and 5) something you do.</p><p>Examples of something you are include biometric information, such as a finger print or retina scan. Something you have are things like smart cards, RSA tokens, or security key fobs. You should already be familiar with something you know, which are things like passwords and pins. Somewhere you are is based on your geographical location. And something you do can include things like how you type a sentence on a keyboard.</p><p>A key point to understand is that identification alone is not enough. Identification without authentication doesn&#39;t provide security. The identification and authentication process should be completed before granting access to a given network or network resource.</p><h3 id="mutual-authentication-03-13-03-46" tabindex="-1"><a class="header-anchor" href="#mutual-authentication-03-13-03-46"><span>Mutual Authentication 03:13-03:46</span></a></h3><p>The next concept to understand is mutual authentication. Mutual authentication is when two communicating entities authenticate each other before exchanging data.</p><p>Unlike traditional, one-way authentication—&quot;&quot;where only the server authenticates the user—&quot;&quot;mutual authentication requires not only the server to authenticate the user, but the user to also authenticate the server. That is, the server must prove its identity to the client. Only after that occurs will data exchange take place.</p><h3 id="access-control-best-practices-03-46-05-44" tabindex="-1"><a class="header-anchor" href="#access-control-best-practices-03-46-05-44"><span>Access Control Best Practices 03:46-05:44</span></a></h3><p>Let&#39;s talk about some access control best practices. One of the most important security standards is the principle of least privilege. This is giving each user or group of users only the necessary access to do their job or perform their official duties. This prevents privilege escalation, where users access unauthorized or unnecessary privileges.</p><p>Very similar to this is the concept of need to know. This describes the restriction of data that is highly sensitive. It&#39;s often used in reference to government, military, or espionage contexts. The idea behind &quot;need to know&quot; is that even if you are fully authorized to access specific information, that information remains classified simply because it&#39;s unnecessary for your current official duties. Need to know discourages casual browsing of sensitive materials.</p><p>Related to the principle of least privilege is the concept of implicit deny. This is where users or groups of users, which are not specifically given access to a resource, are denied access to that resource by default. You&#39;re simply not on the list of users who have access to the resource.</p><p>Another access control best practice is separation of duties. This is the concept of having more than one person required to complete a task. It refers to the idea that multiple individuals should be responsible for the operation of a system. No one person has end-to-end control and no one person is irreplaceable. This can help prevent insider attacks.</p><p>Another access control best practice is job rotation. This is a cross-training technique where organizations minimize collusion amongst staff. The staff is cross-trained in different functional areas to detect fraud and provide oversight of past transactions. Job rotation could also be for training purposes, someone learning the ropes of the company.</p><h3 id="summary-05-44-06-01" tabindex="-1"><a class="header-anchor" href="#summary-05-44-06-01"><span>Summary 05:44-06:01</span></a></h3><p>That&#39;s it for this lesson. We&#39;ve discussed some important identity and access management concepts that security professionals need to understand. We finished by looking at some of the best practices of access control.</p><h2 id="_6-1-2-authentication-authorization-and-accounting" tabindex="-1"><a class="header-anchor" href="#_6-1-2-authentication-authorization-and-accounting"><span>6.1.2 Authentication, Authorization, and Accounting</span></a></h2><h3 id="authentication-authorization-and-accounting-00-00-00-20" tabindex="-1"><a class="header-anchor" href="#authentication-authorization-and-accounting-00-00-00-20"><span>Authentication, Authorization, and Accounting 00:00-00:20</span></a></h3><p>To be an effective security professional, you need to understand one of the fundamental frameworks used to control access to various organizational resources. This framework is known as authentication, authorization, and accounting, or AAA.</p><h3 id="authentication-00-20-01-21" tabindex="-1"><a class="header-anchor" href="#authentication-00-20-01-21"><span>Authentication 00:20-01:21</span></a></h3><p>The first component of the AAA framework is authentication. We&#39;ve already discussed authentication a little bit in a previous lesson, but let&#39;s take a closer look.</p><p>If you remember, authentication is the process of verifying a user&#39;s identity. That is, determining whether someone or something is actually who they say they are. For authentication to take place, two pieces of information are required.</p><p>The first is a form of identification. In a previous lesson, we mentioned that identification is merely the act of claiming you are someone or something. The most common form of identification is a username.</p><p>The second required piece of information is something used to verify the claimed identity. And if you remember, this can be several different things; it could be a password, a security token, even the person&#39;s heartbeat. This information is then compared to the stored information, and if it matches, the user is authenticated—&quot;their identity is verified.</p><h3 id="authorization-01-21-02-17" tabindex="-1"><a class="header-anchor" href="#authorization-01-21-02-17"><span>Authorization 01:21-02:17</span></a></h3><p>The second component of AAA is authorization. Authorization should not be confused with authentication. They are two completely different concepts. Authentication is merely the act of verifying a claimed identity.</p><p>Authorization, on the other hand, is the process of determining whether or not an authenticated user has permission to carry out a specific task or access a system resource.</p><p>Now, authorization takes place in two different steps. The first step—&quot;which is a bit of a preliminary step—&quot;is actually the role of the system administrator. They need to configure the rules for each user or group that dictate their access rights—&quot;their permission scope.</p><p>The second step takes place after authentication has occurred. This is when a user is either authorized or denied access to a particular resource based on the rules configured by the system administrator in step one.</p><h3 id="accounting-02-17-02-58" tabindex="-1"><a class="header-anchor" href="#accounting-02-17-02-58"><span>Accounting 02:17-02:58</span></a></h3><p>Accounting is the third component of AAA. Accounting tracks the actions of an authenticated user.</p><p>After an authenticated and authorized user access resources, it&#39;s important that security professionals are able to track that user&#39;s behavior. This is where accounting comes in.</p><p>Accounting can gather data about which files a user accesses, how much data a user sends and receives over the network, what times the user is active on the system, the list goes on. It&#39;s up to the organization to determine what information is tracked and gathered. Just remember that accounting is the process of gathering information about user activity.</p><h3 id="aaa-server-02-58-03-15" tabindex="-1"><a class="header-anchor" href="#aaa-server-02-58-03-15"><span>AAA Server 02:58-03:15</span></a></h3><p>Now, each component of AAA requires communication between two entities—&quot;usually a user and a server. In a corporate environment, these components are handled by a dedicated AAA server. This simplifies configuring and maintaining access control.</p><h3 id="aaa-in-action-03-15-04-36" tabindex="-1"><a class="header-anchor" href="#aaa-in-action-03-15-04-36"><span>AAA In Action 03:15-04:36</span></a></h3><p>Let&#39;s create a scenario showing the three components of AAA in action.</p><p>Let&#39;s say an employee wants to connect to the organization&#39;s wireless network. To do this, they need to provide a username and password. The username is their identity, and the password verifies their identity.</p><p>So, the user enters their username and password, which is sent to a dedicated AAA server. The server compares this information to the records stored in its database. If the username and password match, then the server knows this person is who they say they are—&quot;they are authenticated to the network.</p><p>After they have been authenticated, the user decides they want to access some documents on the company&#39;s file server. Before they can do this, however, the AAA server needs to make sure this particular user is authorized to access these files, so the server checks its rules. And since this user has been authorized to access these files, they can do so.</p><p>Now, while all of this is taking place, the user&#39;s activity has been logged by the AAA server. Their initial connection to the wireless network, the attempt to access this file server, and the opening of this document have all been logged by the server. This is the accounting component. Even when the user disconnects, this action will be logged by the accounting process.</p><h3 id="summary-04-36-05-01" tabindex="-1"><a class="header-anchor" href="#summary-04-36-05-01"><span>Summary 04:36-05:01</span></a></h3><p>That&#39;s it for this lesson. We have discussed the access control framework called AAA. Remember, AAA has three components: authentication, authorization, and accounting. Authentication verifies identity, authorization permits access to resources, and accounting tracks user behavior.</p><h2 id="_6-1-3-access-control-facts" tabindex="-1"><a class="header-anchor" href="#_6-1-3-access-control-facts"><span>6.1.3 Access Control Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li> Access control </li><li> Authentication, authorization, and accounting </li><li> Access control policies </li></ul><h3 id="access-control" tabindex="-1"><a class="header-anchor" href="#access-control"><span>Access Control</span></a></h3><p>Access control is the ability to permit or deny the privileges that a user has when accessing resources on a network or computer. Access control involves three entities:</p><ul><li><i class="fs-italicize"> Objects </i> are data, applications, systems, networks, and physical space. </li><li><i class="fs-italicize"> Subjects </i> are users, applications, or processes that need access to objects. </li><li> The <i class="fs-italicize"> access control system </i> includes policies, procedures, and technologies that are implemented to control subjects&#39; access to objects. </li></ul><h3 id="authentication-authorization-and-accounting" tabindex="-1"><a class="header-anchor" href="#authentication-authorization-and-accounting"><span>Authentication, Authorization, and Accounting</span></a></h3><p>Access control includes the following processes:</p><ul><li><i class="fs-italicize"> Identification </i> specifies the name used to identify the subject. Examples include a user name or a user ID number. </li><li><i class="fs-italicize"> Authentication </i> is the process of validating a subject&#39;s identity. It includes the identification process, the user providing input to prove identity, and the system accepting that input as valid. </li><li><i class="fs-italicize"> Authorization </i> is granting or denying an authenticated subject&#39;s access to an object based on the subject&#39;s level of permissions or the actions allowed with the object. </li><li><i class="fs-italicize"> Auditing </i> , also referred to as <i class="fs-italicize"> accounting </i> , is maintaining a record of a subject&#39;s activity within the information system. </li></ul><h3 id="access-control-policies" tabindex="-1"><a class="header-anchor" href="#access-control-policies"><span>Access Control Policies</span></a></h3><p>An access control policy defines the steps and measures that are taken to control subjects&#39; access to objects. Access controls can be classified according to the function they perform:</p><ul><li><i class="fs-italicize"> Preventive </i> access controls deter intrusion or attacks. These include separation of duties and dual-custody processes. </li><li><i class="fs-italicize"> Detective </i> access controls search for details about the attack or the attacker. These include intrusion detection systems. </li><li><i class="fs-italicize"> Corrective </i> access controls implement short-term repairs to restore basic functionality following an attack. </li><li><i class="fs-italicize"> Deterrent </i> access controls discourage attack escalation. </li><li><i class="fs-italicize"> Recovery </i> access controls restore the system to normal operations after the attack and the short-term stabilization period. </li><li><i class="fs-italicize"> Compensative </i> access controls are alternatives to primary access controls. </li></ul><p>Access control measures can also be classified based on how they restrict or control access:</p><ul><li><i class="fs-italicize"> Administrative </i> controls are policies that describe accepted practices. Examples include directive policies and employee awareness training. </li><li><i class="fs-italicize"> Technical </i> controls are computer mechanisms that restrict access. Examples include encryption, one-time passwords, access control lists, and firewall rules. </li><li><i class="fs-italicize"> Physical </i> controls restrict physical access. Examples include perimeter security, site location, networking cables, and employee segregation. </li></ul><p>On a computer network, a directory service is an example of a technical access control system that you use to manage and enforce access control policies. Within the directory service:</p><ul><li> A user account is created for each subject. </li><li> Identification is performed during logon when the user supplies a valid user account name. </li><li> Authentication is performed during logon when the user password or other credentials are verified. </li><li> Authorization to use network resources, such as files, printers, or computers, is controlled by permissions or rights. </li><li> Auditing is performed by the operating system as it tracks subjects&#39; actions toward objects. </li></ul><h2 id="_6-1-4-access-control-best-practices" tabindex="-1"><a class="header-anchor" href="#_6-1-4-access-control-best-practices"><span>6.1.4 Access Control Best Practices</span></a></h2><p>This lesson covers the following topics:</p><ul><li>Access control best practices</li><li>Transition best practices</li></ul><h3 id="access-control-best-practices" tabindex="-1"><a class="header-anchor" href="#access-control-best-practices"><span>Access Control Best Practices</span></a></h3><p>Access control best practices take into consideration the following security principles and concepts:</p><table><thead><tr><th scope="col" class="fw-bold"> Principle </th><th scope="col" class="fw-bold"> Description </th></tr></thead><tbody><tr><td> Principle of least privilege </td><td> The <i class="fs-italicize"> principle of least privilege </i> states that users or groups are given only the access they need to do their jobs and nothing more. Common methods of controlling access include: <ul><li><i class="fs-italicize"> Implicit deny </i> denies access to users or groups who are not specifically given access to a resource. Implicit deny is the weakest form of privilege control. </li><li><i class="fs-italicize"> Explicit allow </i> specifically identifies users or groups who have access. Explicit allow is a moderate form of access control in which privilege has been granted to a subject. </li><li><i class="fs-italicize"> Explicit deny </i> identifies users or groups who are not allowed access. Explicit deny is the strongest form of access control and overrules all other privileges granted. </li></ul> When assigning privileges, be aware that it is often easier to give a user more access when the user needs it than to take away privileges that have already been granted. Access recertification is the process of continually reviewing a user&#39;s permissions and privileges to make sure the user has the correct level of access. </td></tr><tr><td> Need to know </td><td><i class="fs-italicize"> Need to know </i> describes the restriction of data that is highly sensitive and is usually referenced in government and military context. Important facts about the need to know include: <ul><li> Even if an individual is fully cleared, the information will not be divulged unless the person has a need to know the information to perform official duties. </li><li> Need to know discourages casual browsing of sensitive materials. </li><li> In a classified environment, a clearance into a top secret compartment allows access to only certain information within that compartment. This is a form of mandatory access control (MAC). </li></ul></td></tr><tr><td> Separation of duties </td><td><i class="fs-italicize"> Separation of duties </i> is the concept of having more than one person required to complete a task. This is a preventive principle primarily designed to reduce conflicts of interest. It also prevents insider attacks because no one person has end-to-end control and no one person is irreplaceable. Important facts to know about separation of duties include: <ul><li> System users should have the lowest level of rights and privileges necessary to perform their work and should have those privileges only for the shortest length of time possible. </li><li> To achieve a separation of duties, a business can use the principle of split knowledge. This means that no single person has total control of a system&#39;s security mechanisms; no single person can completely compromise the system. </li><li> In cases of sensitive or high-risk transactions, a business can use two-man controls. This means that two operators must review and approve each other&#39;s work. </li></ul></td></tr><tr><td> Job rotation </td><td><i class="fs-italicize"> Job rotation </i> is a technique where users are cross-trained in multiple job positions. Responsibilities are regularly rotated between personnel. Job rotation: <ul><li> Cross trains staff in different functional areas in order to detect fraud. </li><li> Exchanges positions of two or more employees to allow for oversight of past transactions. </li><li> Can be used for training purposes. </li></ul></td></tr><tr><td> Defense-in-depth </td><td><i class="fs-italicize"> Defense-in-depth </i> is an access control principle which implements multiple access control methods instead of relying on a single method. Multiple defenses make it harder to bypass security measures. </td></tr><tr><td> Identification </td><td><i class="fs-italicize"> Identification </i> is the act of claiming an identity, such as telling someone your name. Important facts to know about identification include: <ul><li> In the computer world, a username is a form of identification. </li><li> Because anyone could pretend to be the user, identification by itself is not very secure. </li><li> To substantiate identity, the person must provide some form of identity verification. </li></ul></td></tr><tr><td> Multi-Factor Authentication </td><td><i class="fs-italicize"> Multi-Factor Authentication </i> is the process of using more than one way to verify identity. In the computer world, Multi-Factor Authentication is achieved by requiring two or more methods that only the user can provide. Five categories of computer system authentication include: <ul><li> Something you are, such as biometric information (e.g., fingerprint or retina scan). </li><li> Something you have, such as smart cards, RSA tokens, or security key fobs. </li><li> Something you know, such as passwords and PINs. </li><li> Somewhere you are, such as a geographical location. </li><li> Something you do, such as how you type a sentence on a keyboard. </li></ul></td></tr><tr><td> Mutual authentication </td><td><i class="fs-italicize"> Mutual authentication </i> is when two communicating entities authenticate each other before exchanging data. It requires not only the server to authenticate the user, but the user to authenticate the server. This makes mutual authentication more secure than traditional, one-way authentication. </td></tr></tbody></table><h2 id="_6-1-5-access-control-models" tabindex="-1"><a class="header-anchor" href="#_6-1-5-access-control-models"><span>6.1.5 Access Control Models</span></a></h2><h3 id="access-control-models-00-00-00-12" tabindex="-1"><a class="header-anchor" href="#access-control-models-00-00-00-12"><span>Access Control Models 00:00-00:12</span></a></h3><p>Depending on your organization&#39;s needs, there are several ways to implement access control. In this lesson, we&#39;ll look at some common implementation models.</p><h3 id="discretionary-access-control-00-12-00-49" tabindex="-1"><a class="header-anchor" href="#discretionary-access-control-00-12-00-49"><span>Discretionary Access Control 00:12-00:49</span></a></h3><p>Let&#39;s start with the least restrictive model, Discretionary Access Control, or DAC. With DAC, every resource has an owner. That owner decides who has access to the resource. DAC uses programs like access control lists, or ACLs. A good example is NTFS within a Windows system.</p><p>Each NTFS file and folder has an owner. The owner can go into the file or folder&#39;s access control list and decide which user or group can access the resource. Because access is resource-specific, a lot of administrative work is required to implement and maintain these policies on each individual resource.</p><h3 id="mandatory-access-control-00-49-01-59" tabindex="-1"><a class="header-anchor" href="#mandatory-access-control-00-49-01-59"><span>Mandatory Access Control 00:49-01:59</span></a></h3><p>Mandatory access control, or MAC, is a static system with classification labels and levels. When you&#39;re using MAC, every computer, every file, and every object is assigned a label. These labels indicate how important the object is. Each user is assigned an access level. MAC compares the object labels with the user&#39;s level to grant or deny access to a given resource.</p><p>Let&#39;s say your organization uses three labels: Confidential, Secret, and Top Secret. Your organization also uses three user access levels. Users with access level 1 can see anything labeled Confidential. They cannot see anything labeled Secret or Top Secret. Users with access level 2 can see anything labeled Confidential or Secret, but cannot see anything labeled Top Secret. Users with access level 3 can see anything labeled Confidential, Secret, or Top Secret.</p><p>It&#39;s important to note that permissions can&#39;t be altered for specific instances. For example, the data owner can&#39;t prevent specific people with level 2 clearance from accessing certain documents labeled as level 1. It&#39;s an all-or-none deal.</p><h3 id="role-based-access-control-01-59-02-28" tabindex="-1"><a class="header-anchor" href="#role-based-access-control-01-59-02-28"><span>Role-Based Access Control 01:59-02:28</span></a></h3><p>Next, we have role-based access control. This model is a hybrid between MAC and DAC, and it&#39;s probably the most commonly used. Role-based access control means that your role within the organization determines whether or not you&#39;re able to access certain kinds of data.</p><p>For example, Mary is the CFO, so she needs full access to important company financial records, while Aubrey is the receptionist and will only need to see calendar information for everyone in the organization.</p><h3 id="rule-based-access-control-02-28-03-00" tabindex="-1"><a class="header-anchor" href="#rule-based-access-control-02-28-03-00"><span>Rule-Based Access Control 02:28-03:00</span></a></h3><p>We also have rule-based access control—&quot;don&#39;t confuse it with role-based! Rule-based access control is used with routers through router access control lists. With a router access control list, or ACL, you decide which IPs are allowed through the router using rules. Either you match that rule, or you don&#39;t. This has nothing to do with your user account, what group you&#39;re a member of, or even a classification label. The only thing that matters is whether the condition meets the rules configured on the router.</p><h3 id="attribute-based-access-control-03-00-04-04" tabindex="-1"><a class="header-anchor" href="#attribute-based-access-control-03-00-04-04"><span>Attribute-Based Access Control 03:00-04:04</span></a></h3><p>Attribute-Based Access Control, or ABAC, provides more flexibility because it combines object attributes to determine access. These attributes can be a number of different things, such as a user&#39;s role, position, or even project association. ABAC rules use an if-then-else format. If the user has the required attribute, they&#39;re granted access. If the user doesn&#39;t have the required attribute, they&#39;re denied access.</p><p>For example, let&#39;s say we have a user named RBradbury. This user&#39;s role is manager. Their department is development, and they&#39;re currently working on a project called AmazingApp.</p><p>Now, let&#39;s say RBradbury wants to access a file on the server. This file has been configured with several attributes: role = manager, department = development, and project = BoringApp.</p><p>When RBradbury tries to access the file, the system asks, —œAre you a manager?— Yes. —œIs your department development?— —&quot; Yes. —œAre you on the BoringApp project?— —&quot; No. Since it hit a false return, the user is denied access to the file.</p><h3 id="conditional-access-04-04-04-47" tabindex="-1"><a class="header-anchor" href="#conditional-access-04-04-04-47"><span>Conditional Access 04:04-04:47</span></a></h3><p>Modern security concerns extend beyond a desktop in the office. Conditional Access is a way to enforce access control while also encouraging users to be productive wherever they are. Conditional access isn&#39;t intended to be the first point of security. Instead, it steps in after first-factor authentication has been granted. Conditional access can be configured to consider many different factors.</p><p>Administrators can maintain specific control at the user or group level. They can permit or deny access based on an IP address or an IP range. Administrators can also use specific applications or devices to permit, restrict, or deny access to users.</p><h3 id="summary-04-47-05-08" tabindex="-1"><a class="header-anchor" href="#summary-04-47-05-08"><span>Summary 04:47-05:08</span></a></h3><p>That&#39;s it for this lesson. In this video, we discussed several access control models: discretionary access control, mandatory access control, role-based access control, rule-based access control, attribute-based access control, and conditional access control.</p><h2 id="_6-1-6-access-control-model-facts" tabindex="-1"><a class="header-anchor" href="#_6-1-6-access-control-model-facts"><span>6.1.6 Access Control Model Facts</span></a></h2><p>This lesson covers the topic of access control models.</p><h3 id="access-control-models" tabindex="-1"><a class="header-anchor" href="#access-control-models"><span>Access Control Models</span></a></h3><p>Access control is the process by which resource and service use is granted or denied. The following table lists the most commonly used access control models, also known as access control schemes .</p><table><thead><tr><th scope="col" class="fw-bold"> Model </th><th scope="col" class="fw-bold"> Description </th></tr></thead><tbody><tr><td> Attribute-based access control <br> (ABAC) </td><td><i class="fs-italicize"> Attribute-based </i> access control restricts access by assigning attributes to resources. <ul><li> Attributes can be things like a user&#39;s role, position, or current project. </li><li> The set of attributes assigned to a resource constitutes a policy that uses Boolean logic to determine who can access the resource. </li><li> An example of a file access policy might include the following attributes: role = manager, department = development, and project = NewApp. Only users who possess all three attributes can access the file. </li><li> ABAC uses a special markup language called eXtensible Access Control Markup Language (XACML) to define access control policies. </li></ul></td></tr><tr><td> Role-based access control <br> (RBAC) </td><td><i class="fs-italicize"> Role-based </i> access control allows access based on a role in an organization; it is not user specific. Role-based access control is also known as non-discretionary access control. <ul><li> Roles are defined by job description or security access level. </li><li> Users are made members of a role and receive the permissions assigned to the role. </li><li> RBAC is similar to group-based access control. Group-based access control uses a collection of users; RBAC uses a collection of permissions. </li></ul></td></tr><tr><td> Rule-based access control </td><td><i class="fs-italicize"> Rule-based </i> access control uses rules applied to characteristics of objects or subjects to restrict access. <ul><li> Access control entries identify a set of characteristics that are examined for a match. </li><li> If all characteristics match, access is either allowed or denied based on the rule. </li><li> An example of a rule-based access control implementation is a router access control list that allows or denies traffic based on characteristics within the packet, such as IP address or port number. </li><li> Because rule-based access control does not consider the identity of the subject, a system that uses rules can be viewed as a form of mandatory access control. </li></ul></td></tr><tr><td> Mandatory access control (MAC) </td><td><i class="fs-italicize"> Mandatory </i> access control uses labels for both subjects (users who need access) and objects (resources with controlled access, such as data, applications, systems, networks, and physical space). Every operation performed is tested against a set of authorization policies to determine if the operation is allowed. <ul><li> Classification labels, such as secret or top secret, are assigned to objects by their owner, who is usually a managerial or governmental entity. </li><li> Clearance labels are assigned to subjects. </li><li> When a subject&#39;s clearance lines up with an object&#39;s classification and the user has a need to know (referred to as a category), the user is then granted access. </li><li> Access control is mandatory because access is based on policy (the matching of the labels) rather than identity. Owners can only assign labels; they cannot grant access to specific subjects. </li></ul></td></tr><tr><td> Discretionary access control (DAC) </td><td><i class="fs-italicize"> Discretionary </i> access control assigns access directly to subjects based on the owner&#39;s discretion. <ul><li> Objects have a discretionary access control list (DACL) with entries for each subject. </li><li> Owners add subjects to the DACL and assign rights or permissions. The permissions identify the actions the subject can perform on the object. </li><li> With discretionary access control, subjects can pass permissions on to other subjects. </li></ul> Many computer systems use discretionary access control to limit access to systems or other resources. </td></tr><tr><td> Conditional access </td><td><i class="fs-italicize"> Conditional </i> access is a way to enforce access control while also encouraging users to be productive wherever they are. Conditional access isn’t intended to be the first point of security. Instead, it steps in after the first-factor authentication has been granted. Conditional access policies work by asking a user to complete an action in order to access a resource. Depending on the level of security of the requested resource, the user may be required to complete more actions. For policy decisions, conditional access can be configured to consider many different factors including: <ul><li> Implement control at the user or group level. </li><li> Permit or deny access based on an IP address or an IP range. </li><li> Permit or deny access to users who are using specific applications. </li><li> Permit, restrict, or deny access to users who are using specific devices or device states. </li></ul></td></tr></tbody></table><h2 id="_6-1-7-implementing-dynamic-access-control" tabindex="-1"><a class="header-anchor" href="#_6-1-7-implementing-dynamic-access-control"><span>6.1.7 Implementing Dynamic Access Control</span></a></h2><h3 id="dac-policies-00-00-00-24" tabindex="-1"><a class="header-anchor" href="#dac-policies-00-00-00-24"><span>DAC Policies 00:00-00:24</span></a></h3><p>Dynamic Access Control (DAC) takes NTFS permissions a step further. We can use DAC to control access to files and folders by adding tags and policies. This allows system admins to grant access to resources based on more than just a user account or group membership. In this demo we&#39;ll look at the process of setting up DAC on a Windows Server.</p><h3 id="server-setup-00-24-01-44" tabindex="-1"><a class="header-anchor" href="#server-setup-00-24-01-44"><span>Server Setup 00:24-01:44</span></a></h3><p>Before we start configuring DAC, let&#39;s confirm that the server is set up to use it. We&#39;ll do that now.</p><p>We&#39;re on this Windows 2019 Server system and we have Server Manager open. The first thing we&#39;ll do is go to Add Roles and Features. Let&#39;s click Next a few times until we get to Server Roles.</p><p>We want to confirm that File Server Resource Manager is installed. We&#39;ll expand File and Storage Services, and then expand File and iSCSI Services. Down here, you can see File Server Resource Manager is checked and is installed. If it&#39;s not installed, you can check the box and finish installing it, but it is installed, so we can proceed.</p><p>To double check, we&#39;ll go to Tools. We can see that File Server Resource Manager is in the list.</p><p>Now, let&#39;s go to Group Policy Management and open it. We want to make sure Kerboros Armoring is turned on. To do this, we&#39;ll edit the Default Domain Controllers Policy. Right-click and select Edit. Go to Computer Configuration &gt; Policies &gt; Administrative Templates &gt; System, and then double-click KDC.</p><p>We want to make sure that KDC support for claims is enabled. As you can see, it is. KDC allows us to configure a domain controller to support claims. We&#39;ll talk about claims in a moment. We&#39;ll close these windows and go back to Server Manager.</p><h3 id="claims-configuration-01-44-04-08" tabindex="-1"><a class="header-anchor" href="#claims-configuration-01-44-04-08"><span>Claims Configuration 01:44-04:08</span></a></h3><p>Now let&#39;s go to Tools once again, but this time we will open Active Directory Administrative Center. This is where we are going to configure Dynamic Access Control.</p><p>Here you see there are five areas. We have Central Access Policies, Central Access Rules, Claim Types, Resource Properties, and finally Resource Property Lists. We must configure each of these but not necessarily in the order listed here.</p><p>We&#39;ll start with Claim Types. Let&#39;s double-click it to open it. We&#39;ll right-click New and select Claim Type. We want to find Department, so we&#39;ll just filter by typing —˜Department&#39; here. You can see that Department is listed and it is selected. You can see also that User is checked and that is what we want for our demo. Let&#39;s click OK.</p><p>You are probably wondering what exactly we are doing here. It might help if we look at something. We&#39;ll minimize this, go to Tools, and then Active Directory Users and Computers. We&#39;re taken straight to the CorpNetUsers Organizational Unit where we&#39;ll select this user account, right-click, and select Properties.</p><p>We&#39;ll select the Organization tab. Next to Department, you see the word Manager typed. The Claim Type that we created is going to be affected by what we type here. In the case, the word Manager. This is where we are taking our NTFS permissions a bit further now. Instead of being a user who has permissions to a file or folder, permissions also depend on the department the user is a part of. In this case the department is Manager.</p><p>Let&#39;s click OK and go back to Active Directory Administrative Center. Let&#39;s go back to Claim Types and double-click Department. Let&#39;s scroll down and select the following values.</p><p>For a Filter, we&#39;ll type —˜Manager&#39; and click Add. For Value we&#39;ll put —˜Manager&#39;; for Display Name also put in the word, —˜Manager&#39;; and for Description, we&#39;ll type —˜Manager&#39; once again. Click OK and OK again.</p><p>So far, we have created a claim type. As a review, a claim type is a piece of information about a user or device. Those pieces of information could be a user&#39;s title or the department the user works in, like we just finished setting up.</p><h3 id="resource-properties-04-08-05-16" tabindex="-1"><a class="header-anchor" href="#resource-properties-04-08-05-16"><span>Resource Properties 04:08-05:16</span></a></h3><p>Now that we have a Claim Type set up, we need to create a Resource Property. We&#39;ll double click Resource Property. Here we see templates for Resource Properties. We can see things like Confidentiality, Department, Discoverability, and so on.</p><p>We&#39;re going to pick Department since that is what we have been using in this demo. We&#39;ll double-click it to open it. Under General, we see Display name, which is Department, and we also see Value type. Here it tells us that this is used for authorization. Below that, we&#39;re going to check the box to protect from accidental deletion.</p><p>Down a little further is a list of suggested values. They include Administration, Customer Service, and Distribution. We&#39;ll leave those alone and click Add. Here we&#39;ll put —˜Manager&#39;. We&#39;ll also put —˜Manager&#39; for the Display Name and the Description fields. Click OK, and OK again.</p><p>Now let&#39;s enable this. We&#39;ll right-click and select Enable. Notice that there was a little black icon that went away. That tells us this is enabled.</p><p>The next thing we must do is configure the Resource Property Lists.</p><h3 id="resource-property-lists-05-16-05-57" tabindex="-1"><a class="header-anchor" href="#resource-property-lists-05-16-05-57"><span>Resource Property Lists 05:16-05:57</span></a></h3><p>Now that we have created our Claim type and Resource property, we&#39;ll put it in a Resource list. Let&#39;s click Dynamic Access Control over here and we get the list back. Let&#39;s double-click the Resource Property Lists. Here in the white space, we&#39;ll right-click and choose New. Then, select Resource Property List. In the Name field we&#39;ll enter —˜Department List&#39;.</p><p>From Resource Properties, we&#39;ll click Add. We&#39;ll find and move Department over by selecting it here. We&#39;ll click OK and OK again.</p><p>So now the Property List, called Department List, will determine who has access to a file based on certain criteria.</p><h3 id="central-access-rules-and-policies-05-57-07-11" tabindex="-1"><a class="header-anchor" href="#central-access-rules-and-policies-05-57-07-11"><span>Central Access Rules and Policies 05:57-07:11</span></a></h3><p>Ok, we are not quite done yet. We must create a Central Access Rule. We&#39;ll select Dynamic Access Control and the list appears to the right. Now, we&#39;ll create a Central Access Rule. Our rule specifies user access to a file or folder is based on classification.</p><p>To create a rule, we&#39;ll double-click Central Access Rules. Then, right-click Select New and Central Access Rule. For Name, we&#39;ll enter —˜Department Rule&#39;. We&#39;ll leave Protection from accidental deletion checked. Under Target Resources, we&#39;ll leave it set to All Resources. Everything looks good. Let&#39;s click OK.</p><p>Now that we have the rule, we must configure the Central Access Policy. Right-click Central Access Policies, choose New, and then choose Central Access Policy. For Name, we&#39;ll enter —˜Department Policy&#39;. Click Add. Then we&#39;ll move the Department Rule that we previously created over to the list. Click OK and OK again.</p><p>And with that we have configured Dynamic Access Control. But, there is one final step and that is to set the classification on our folder.</p><h3 id="folder-properties-07-11-08-03" tabindex="-1"><a class="header-anchor" href="#folder-properties-07-11-08-03"><span>Folder Properties 07:11-08:03</span></a></h3><p>Let&#39;s open File Explorer and go to a folder named SharedFiles. We&#39;ll right-click this folder and go to Properties. We now have a new Tab that we normally don&#39;t see in our Properties, the Classification tab. We see that because we configured Dynamic Access Control on our server.</p><p>Here we can see the classifications. We have only one and that is because we have configured only one, Department. Remember earlier that a user account in Active Directory had a property listed as Manager. Let&#39;s scroll down a bit and here it is. We&#39;ll select Manager. Click Apply and then OK.</p><p>So, we made it so that when a user wants to open the SharedFiles folder, that user must have Manager added to the properties in the user account in Active Directory in addition to the NTFS permissions that are added to the folder.</p><h3 id="summary-08-03-08-12" tabindex="-1"><a class="header-anchor" href="#summary-08-03-08-12"><span>Summary 08:03-08:12</span></a></h3><p>That&#39;s it for this demo. In this demonstration we configured Dynamic Access Control.</p>',148)]))}const d=a(c,[["render",r],["__file","06.01.AccessControlModels.html.vue"]]),u=JSON.parse('{"path":"/06/06.01.AccessControlModels.html","title":"Section 6.1 Access Control Models","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 6.1 Access Control Models","description":"some description"},"headers":[{"level":2,"title":"6.1.1 Identity and Access Management","slug":"_6-1-1-identity-and-access-management","link":"#_6-1-1-identity-and-access-management","children":[{"level":3,"title":"Identify and Access Management 00:00-00:37","slug":"identify-and-access-management-00-00-00-37","link":"#identify-and-access-management-00-00-00-37","children":[]},{"level":3,"title":"Balancing Access 00:37-00:54","slug":"balancing-access-00-37-00-54","link":"#balancing-access-00-37-00-54","children":[]},{"level":3,"title":"Identification 00:54-01:37","slug":"identification-00-54-01-37","link":"#identification-00-54-01-37","children":[]},{"level":3,"title":"Authentication 01:37-03:13","slug":"authentication-01-37-03-13","link":"#authentication-01-37-03-13","children":[]},{"level":3,"title":"Mutual Authentication 03:13-03:46","slug":"mutual-authentication-03-13-03-46","link":"#mutual-authentication-03-13-03-46","children":[]},{"level":3,"title":"Access Control Best Practices 03:46-05:44","slug":"access-control-best-practices-03-46-05-44","link":"#access-control-best-practices-03-46-05-44","children":[]},{"level":3,"title":"Summary 05:44-06:01","slug":"summary-05-44-06-01","link":"#summary-05-44-06-01","children":[]}]},{"level":2,"title":"6.1.2 Authentication, Authorization, and Accounting","slug":"_6-1-2-authentication-authorization-and-accounting","link":"#_6-1-2-authentication-authorization-and-accounting","children":[{"level":3,"title":"Authentication, Authorization, and Accounting 00:00-00:20","slug":"authentication-authorization-and-accounting-00-00-00-20","link":"#authentication-authorization-and-accounting-00-00-00-20","children":[]},{"level":3,"title":"Authentication 00:20-01:21","slug":"authentication-00-20-01-21","link":"#authentication-00-20-01-21","children":[]},{"level":3,"title":"Authorization 01:21-02:17","slug":"authorization-01-21-02-17","link":"#authorization-01-21-02-17","children":[]},{"level":3,"title":"Accounting 02:17-02:58","slug":"accounting-02-17-02-58","link":"#accounting-02-17-02-58","children":[]},{"level":3,"title":"AAA Server 02:58-03:15","slug":"aaa-server-02-58-03-15","link":"#aaa-server-02-58-03-15","children":[]},{"level":3,"title":"AAA In Action 03:15-04:36","slug":"aaa-in-action-03-15-04-36","link":"#aaa-in-action-03-15-04-36","children":[]},{"level":3,"title":"Summary 04:36-05:01","slug":"summary-04-36-05-01","link":"#summary-04-36-05-01","children":[]}]},{"level":2,"title":"6.1.3 Access Control Facts","slug":"_6-1-3-access-control-facts","link":"#_6-1-3-access-control-facts","children":[{"level":3,"title":"Access Control","slug":"access-control","link":"#access-control","children":[]},{"level":3,"title":"Authentication, Authorization, and Accounting","slug":"authentication-authorization-and-accounting","link":"#authentication-authorization-and-accounting","children":[]},{"level":3,"title":"Access Control Policies","slug":"access-control-policies","link":"#access-control-policies","children":[]}]},{"level":2,"title":"6.1.4 Access Control Best Practices","slug":"_6-1-4-access-control-best-practices","link":"#_6-1-4-access-control-best-practices","children":[{"level":3,"title":"Access Control Best Practices","slug":"access-control-best-practices","link":"#access-control-best-practices","children":[]}]},{"level":2,"title":"6.1.5 Access Control Models","slug":"_6-1-5-access-control-models","link":"#_6-1-5-access-control-models","children":[{"level":3,"title":"Access Control Models 00:00-00:12","slug":"access-control-models-00-00-00-12","link":"#access-control-models-00-00-00-12","children":[]},{"level":3,"title":"Discretionary Access Control 00:12-00:49","slug":"discretionary-access-control-00-12-00-49","link":"#discretionary-access-control-00-12-00-49","children":[]},{"level":3,"title":"Mandatory Access Control 00:49-01:59","slug":"mandatory-access-control-00-49-01-59","link":"#mandatory-access-control-00-49-01-59","children":[]},{"level":3,"title":"Role-Based Access Control 01:59-02:28","slug":"role-based-access-control-01-59-02-28","link":"#role-based-access-control-01-59-02-28","children":[]},{"level":3,"title":"Rule-Based Access Control 02:28-03:00","slug":"rule-based-access-control-02-28-03-00","link":"#rule-based-access-control-02-28-03-00","children":[]},{"level":3,"title":"Attribute-Based Access Control 03:00-04:04","slug":"attribute-based-access-control-03-00-04-04","link":"#attribute-based-access-control-03-00-04-04","children":[]},{"level":3,"title":"Conditional Access 04:04-04:47","slug":"conditional-access-04-04-04-47","link":"#conditional-access-04-04-04-47","children":[]},{"level":3,"title":"Summary 04:47-05:08","slug":"summary-04-47-05-08","link":"#summary-04-47-05-08","children":[]}]},{"level":2,"title":"6.1.6 Access Control Model Facts","slug":"_6-1-6-access-control-model-facts","link":"#_6-1-6-access-control-model-facts","children":[{"level":3,"title":"Access Control Models","slug":"access-control-models","link":"#access-control-models","children":[]}]},{"level":2,"title":"6.1.7 Implementing Dynamic Access Control","slug":"_6-1-7-implementing-dynamic-access-control","link":"#_6-1-7-implementing-dynamic-access-control","children":[{"level":3,"title":"DAC Policies 00:00-00:24","slug":"dac-policies-00-00-00-24","link":"#dac-policies-00-00-00-24","children":[]},{"level":3,"title":"Server Setup 00:24-01:44","slug":"server-setup-00-24-01-44","link":"#server-setup-00-24-01-44","children":[]},{"level":3,"title":"Claims Configuration 01:44-04:08","slug":"claims-configuration-01-44-04-08","link":"#claims-configuration-01-44-04-08","children":[]},{"level":3,"title":"Resource Properties 04:08-05:16","slug":"resource-properties-04-08-05-16","link":"#resource-properties-04-08-05-16","children":[]},{"level":3,"title":"Resource Property Lists 05:16-05:57","slug":"resource-property-lists-05-16-05-57","link":"#resource-property-lists-05-16-05-57","children":[]},{"level":3,"title":"Central Access Rules and Policies 05:57-07:11","slug":"central-access-rules-and-policies-05-57-07-11","link":"#central-access-rules-and-policies-05-57-07-11","children":[]},{"level":3,"title":"Folder Properties 07:11-08:03","slug":"folder-properties-07-11-08-03","link":"#folder-properties-07-11-08-03","children":[]},{"level":3,"title":"Summary 08:03-08:12","slug":"summary-08-03-08-12","link":"#summary-08-03-08-12","children":[]}]}],"git":{"updatedTime":1735698907000},"filePathRelative":"06/06.01.AccessControlModels.md"}');export{d as comp,u as data};
