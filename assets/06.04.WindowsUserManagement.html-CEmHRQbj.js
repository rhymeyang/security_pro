import{_ as a,c as s,b as n,a as e,d as t,o as i}from"./app-CfbBmV1V.js";const r={};function c(l,o){return i(),s("div",null,o[0]||(o[0]=[n("<p>As you study this section, answer the following questions:</p><ul><li>What are the main differences between the workgroup network model and the domain network model?</li><li>What are the disadvantages of a large company using a peer-to-peer network model?</li><li>What are the differences between the stand-alone model and client-server model?</li><li>What are the disadvantages of the client-server model?</li><li>When is it beneficial to use Azure Active Directory (Azure AD)?</li></ul><p>In this section, you will learn to:</p><ul><li>Use local user accounts for sign-in.</li><li>Join a workgroup.</li><li>Use online user accounts for sign-in.</li><li>Use domain user accounts for sign-in.</li><li>Use Azure AD user accounts for sign-in.</li></ul><p>The key terms for this section include:</p>",5),e("table",{class:"terms"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Term "),e("th",{scope:"col",class:"fw-bold"}," Definition ")])]),e("tbody",null,[e("tr",null,[e("td",null," Active Directory "),e("td",null," Developed by Microsoft, Active Directory is a centralized database that contains user accounts and security information. It is included in most Windows Server operating systems as a set of processes and services. ")]),e("tr",null,[e("td",null," Organizational unit (OU) "),e("td",null," In Active Directory, an organizational unit is a way to organize such things as users, groups, computers, etc. It is also referred to as a container object. ")]),e("tr",null,[e("td",null," Domain objects "),e("td",null," All network resources, such as users, groups, computers, and printers are stored as objects in Active Directory. ")]),e("tr",null,[e("td",null," Azure Active Directory "),e("td",null," Azure AD is Microsoftâ€™s cloud-based identity and access management service. It helps employees sign in and access resources. ")])])],-1),e("p",null,"This section helps you prepare for the following certification exam objectives:",-1),e("table",{class:"objectives"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Exam "),e("th",{scope:"col",class:"fw-bold"}," Objective ")])]),e("tbody",null,[e("tr",null,[e("td",null," TestOut Security Pro "),e("td",null,[t(" 1.0 Identity Management and Authentication "),e("blockquote",null," 1.1 Manage Identity ")])]),e("tr",null,[e("td",null," CompTIA Security+ SY0-601 "),e("td",null,[t(" 3.7 Given a scenario, implement identity and account management controls. "),e("ul",null,[e("li",null,[t(" Account types "),e("ul",null,[e("li",null," User account "),e("li",null," Shared and generic accounts/credentials "),e("li",null," Guest accounts "),e("li",null," Service accounts ")])])])])])])],-1),n('<h2 id="_6-4-1-windows-operating-system-roles" tabindex="-1"><a class="header-anchor" href="#_6-4-1-windows-operating-system-roles"><span>6.4.1 Windows Operating System Roles</span></a></h2><h3 id="windows-operating-system-roles-00-00-00-16" tabindex="-1"><a class="header-anchor" href="#windows-operating-system-roles-00-00-00-16"><span>Windows Operating System Roles 00:00-00:16</span></a></h3><p>In this lesson, we&#39;re going to review the three networking models that you can use with Windows operating systems. These are the Standalone model; the Workgroup networking model; and the Client-Server networking model, or Domain model.</p><h3 id="standalone-model-00-16-00-57" tabindex="-1"><a class="header-anchor" href="#standalone-model-00-16-00-57"><span>Standalone Model 00:16-00:57</span></a></h3><p>Let&#39;s start by looking at the Standalone model. In this model, each Windows system functions independently. In this example, there isn&#39;t a local area network connecting these systems together. This means that I can&#39;t transmit information directly from this host to this host.</p><p>The only way to transmit data between these systems is through a public network such as the internet.</p><p>For example, if this host has a DSL connection to the internet, it&#39;s located in a rural area, and it&#39;s connect to the internet using a mobile data connection, then these two systems could transmit data to each other if they send the information through the public network first.</p><p>The key point to remember is that in the Standalone model, there is no direct connection from host to host.</p><h3 id="workgroup-networking-model-00-57-03-27" tabindex="-1"><a class="header-anchor" href="#workgroup-networking-model-00-57-03-27"><span>Workgroup Networking Model 00:57-03:27</span></a></h3><p>The next network model we need to look at is the Workgroup model.</p><p>A Workgroup is based on peer-to-peer networking. In a peer-to-peer network, each host is connected through a local area network.</p><p>The key thing to remember about a peer-to-peer network is that none of these hosts have a specific role on the network. Each host provides network services and consumes network services. So, with a peer-to-peer network, there&#39;s no such thing as a workstation, and there&#39;s no such thing as a server. Instead, each system functions as a server and a workstation at the same time.</p><p>Let&#39;s say that this host has a USB printer connected directly to it, and this host has a huge hard disk connected to it.</p><p>In a peer-to-peer networking model, which we also call a workgroup model, we can share these resources over the network connection.</p><p>This means that we can share the printer that&#39;s connected to this workstation. In this configuration, both hosts, over here, are able to send their print jobs to the shared printer through the network.</p><p>Likewise, we can share the storage space on this huge hard drive in this system. This allows the other hosts in the system to save their files onto this hard drive over the network connection.</p><p>A Workgroup is Microsoft&#39;s implementation of a peer-to-peer computer network. Windows hosts that are configured to operate in the same workgroup can access shared resources on each of the other hosts, such as this hard drive or this printer.</p><p>When you define a Workgroup, you have to give it a name. In this example, we&#39;ve defined a Workgroup called SmallBiz. We&#39;ve also configured each of these three Windows hosts with the same Workgroup name, SmallBiz.</p><p>Because they&#39;re configured in the same Workgroup, they can access the shared resources that each system has to offer, such as our share storage and our shared printer.</p><p>Implementing a Workgroup with Windows hosts has several benefits. First, it&#39;s very easy and inexpensive because you don&#39;t have to purchase any specialized hardware or software to implement a Workgroup. The Windows operating system already has everything you need to set up this networking model.</p><p>But a peer-to-peer Workgroup network also has some significant drawbacks. You&#39;ll probably never see a Workgroup network used in a very large organization.</p><p>The key problem is that a Workgroup isn&#39;t very scalable because if your network has more than about 10 or 15 computers, it becomes very, very difficult to manage. In fact, it can quickly become a managerial nightmare.</p><p>Another reason a Workgroup is so difficult to manage is that it lacks centralized control, so you have to configure each workstation manually, one by one.</p><h3 id="backups-03-27-03-46" tabindex="-1"><a class="header-anchor" href="#backups-03-27-03-46"><span>Backups 03:27-03:46</span></a></h3><p>Workgroups are also difficult to back up.</p><p>Instead of having just one host where everybody saves all their information, we could have shared storage on this system, and on this system, and even on this system.</p><p>You&#39;ll have to determine what you have to back up to preserve your organization&#39;s data. This usually means running a backup on each system.</p><h3 id="local-accounts-03-46-04-38" tabindex="-1"><a class="header-anchor" href="#local-accounts-03-46-04-38"><span>Local Accounts 03:46-04:38</span></a></h3><p>In addition, each of these hosts has its own set of user accounts. Why? Because in a Workgroup, authentication occurs locally on each of the individual systems, and this introduces a serious problem.</p><p>For example, suppose I&#39;m using this Workgroup, and I&#39;m logged on as RSmith.</p><p>To save a file to a shared folder, I&#39;ll have to authenticate. For that to happen, the system must already have an RSmith user account created with the exact same password as the RSmith user on the first system.</p><p>If the RSmith account doesn&#39;t exist, then the only way I can save a file to this system is to manually enter the username and password of a user that is already on the other system.</p><p>In other words, the user credentials that I used to log in to this system have nothing to do with this second host, here. This host, over here, only cares about what user account I use to log in to it locally.</p><h3 id="local-security-settings-04-38-05-03" tabindex="-1"><a class="header-anchor" href="#local-security-settings-04-38-05-03"><span>Local Security Settings 04:38-05:03</span></a></h3><p>In addition, all our security settings are also managed locally. For example, this system may be configured to require complex passwords, but this system may not. So the system on the left is more secure than the system on the right.</p><p>As a system administrator, that means I&#39;ll have to go to each and every host in the Workgroup and configure every security setting redundantly on each system, and that takes a lot of time.</p><h3 id="domain-networking-05-03-06-04" tabindex="-1"><a class="header-anchor" href="#domain-networking-05-03-06-04"><span>Domain Networking 05:03-06:04</span></a></h3><p>A better way is to use a different networking model called a client-server model.</p><p>In a client-server model, each host in the network fulfills a specific role. It&#39;ll either provide services or it&#39;ll consume services, but not both. Microsoft&#39;s implementation of a client-server network is called domain networking.</p><p>A Windows domain, by definition, is a collection of security principles that share a central authentication database called Active Directory.</p><p>With this model, we define a domain name instead of a Workgroup name. Our domain name is CorpNet.xyz.</p><p>Remember, a minute ago, I said that a Windows domain is a collection of security principles. A security principle is any entity that can be authenticated into the Active Directory domain. This can include a variety of different network resources.</p><p>For example, a security principle could be a user. These are just your typical user accounts. We can also authenticate individual computer systems, such as this one. You can even authenticate other types of network resources into the Active Directory domain.</p><h3 id="active-directory-domain-controllers-06-04-08-37" tabindex="-1"><a class="header-anchor" href="#active-directory-domain-controllers-06-04-08-37"><span>Active Directory Domain Controllers 06:04-08:37</span></a></h3><p>The domain authentication database is maintained on one or more Active Directory servers, which we call domain controllers.</p><p>In this example, I&#39;m going to use this server as my domain controller. This is where all the user accounts used by everyone in the domain are created and stored.</p><p>Therefore, when I need to log in to this workstation, instead of checking for a local user account, the workstation will authenticate to the network by forwarding the authentication request to the domain controller.</p><p>The domain controller will then check to see if a valid username was submitted along with a valid password for that user account. The domain controller will respond with a yes or a no. Assuming I provided the right username and the right password, I&#39;m then able to authenticate to the workstation.</p><p>The key point to understand is that in a domain, the user account I used to log in to this workstation wasn&#39;t stored on the workstation at all. Instead, it was stored on the domain controller.</p><p>The great thing about using a domain networking model is that it doesn&#39;t matter which workstation I log in from. In other words, as long as a workstation is joined to the domain, I can log in to the workstation here using the exact same username and password that I used to log in to the workstation here. Why? Because that user account is stored here, on the domain controller, not on the individual workstation.</p><p>You might notice a little weakness in this model. For example, if this domain controller went down for some reason, then nobody would be able to log in to these other systems using their domain accounts.</p><p>To overcome this weakness, we need to provide redundancy by implementing multiple domain controllers and making sure the authentication database, which contains all our usernames and passwords, is replicated between all the domain controllers. That way, if one controller goes down, there&#39;s a backup domain controller ready to go, allowing users to continue to log in.</p><p>It&#39;s important to note that before any of these client systems can participate in the domain, they must be joined to the domain.</p><p>And to do that, they must run a Professional, Ultimate, or Enterprise edition of Windows.</p><p>The key benefit of domain networking is the that the domain model is much easier to manage, especially when the network becomes large. This is because the management is centralized.</p><p>For example, if I want to make changes in the network, all I need to do is make the change here, at the domain controller. Those changes are then automatically applied to all the other hosts in the network, and I don&#39;t have to go from host to host making the same configuration change over and over. And that makes my administration load a lot easier.</p><h3 id="domain-objects-08-37-08-56" tabindex="-1"><a class="header-anchor" href="#domain-objects-08-37-08-56"><span>Domain Objects 08:37-08:56</span></a></h3><p>When you use the Domain Networking model, all our network resources in Active Directory are represented using the concept of objects.</p><p>For example, Active Directory uses user objects, group objects, and computer objects (as well as several other types of objects that represent network resources) to define who can do what with each resource.</p><h3 id="organizational-units-08-56-10-14" tabindex="-1"><a class="header-anchor" href="#organizational-units-08-56-10-14"><span>Organizational Units 08:56-10:14</span></a></h3><p>In addition, within the Active Directory tree, users and resources can be organized using container objects. A container object does exactly what its name implies: it holds other objects. In other words, containers let you organize and hold other objects like user and computer objects, which represent a specific person or computer. In Active Directory, container objects are called organizational units, or OUs.</p><p>In this example, the objects that look like yellow folders are organizational units. An organizational unit subdivides and organizes network resources within the domain.</p><p>Here, we&#39;ve selected the Research organizational unit. Within Research, we have several user objects, such as Pascal and Zoey. This OU is named Research because each user in this container works for this company and is a member of the research team. This allows us to specify the role and function of these users in our company. Organizing our users this way is another way to simplify the administration of the domain.</p><p>For example, maybe our research users need more access to some network resources than the members of the marketing team. Since the individual users requiring those permission reside in different organizational units, it&#39;s easy to apply what each group needs, and no more.</p><h3 id="domain-model-drawbacks-10-14-11-00" tabindex="-1"><a class="header-anchor" href="#domain-model-drawbacks-10-14-11-00"><span>Domain Model Drawbacks 10:14-11:00</span></a></h3><p>Now, like every model, the domain network model has some drawbacks.</p><p>The biggest one is that it&#39;s much more expensive to implement than a Workgroup, since you&#39;ll have to purchase specialized hardware.</p><p>You&#39;re going to need a server that can fulfill the roll of a domain controller.</p><p>You&#39;ll also need to purchase specialized software. For example, on a domain controller, you&#39;ll have to run a server version of Windows instead of a Workstation version of Windows, and that type of operating system costs a lot more money.</p><p>This model also requires a lot more time and planning to implement. You&#39;ll have to decide where your domain controllers are going to reside in the network, how many backup domain controllers you want to use, what the Active Directory tree structure is going to look like, where to place your organizational units, where the user accounts will reside within those organizational units, and so on.</p><h3 id="azure-active-directory-11-00-11-55" tabindex="-1"><a class="header-anchor" href="#azure-active-directory-11-00-11-55"><span>Azure Active Directory 11:00-11:55</span></a></h3><p>For years, domains had to be manually implemented on-premise by the network administrator, and currently, that&#39;s still a standard practice. But more and more companies are choosing to offload a lot of the domain work by using</p><p>Microsoft&#39;s cloud-based domain networking service called Azure Active Directory, or Azure AD.</p><p>This service allows you to utilize the internet for your directory services by creating an Active Directory in the cloud.</p><p>Just like local Active Directory, Azure AD can authenticate Workstations in your local network, making it so a local domain controller is no longer required.</p><p>The advantage of Azure AD is that it requires very little setup. Basically, if you can sign up for an Azure AD account on Microsoft&#39;s website, then you can implement domain networking.</p><p>Azure AD can also work in conjunction with any local active directories you may still want to use. The disadvantage is that you must have an active internet connection for everything to work properly.</p><h3 id="summary-11-55-12-29" tabindex="-1"><a class="header-anchor" href="#summary-11-55-12-29"><span>Summary 11:55-12:29</span></a></h3><p>Well, that&#39;s it for this lesson. In this video, we talked about the different types of networking models that you can use with Windows hosts. First, we looked at the Standalone model, where there is no networking connection between hosts (except for, maybe, a connection through the internet). Then we looked at the Workgroup model, where we used peer-to-peer networking to connect hosts together and share resources. We ended this lesson by talking about domain networking, and we used a Client-Server networking model, or Domain model, to determine what each host on the network can do.</p><h2 id="_6-4-2-windows-operating-system-roles-facts" tabindex="-1"><a class="header-anchor" href="#_6-4-2-windows-operating-system-roles-facts"><span>6.4.2 Windows Operating System Roles Facts</span></a></h2><p>A networking model defines how network components function and interact. Windows operating systems can use a stand-alone model, a workgroup network model, or a client-server network model.</p><p>This lesson covers the following topics:</p><ul><li>Stand-alone model</li><li>Workgroup network model</li><li>Client-server network model</li></ul><h3 id="stand-alone-model" tabindex="-1"><a class="header-anchor" href="#stand-alone-model"><span>Stand-Alone Model</span></a></h3><p>With a stand-alone model, each Windows system functions independently of other systems. This means that you cannot transmit information directly from one host to another. The only way to transmit data between these systems is through a public network, such as the internet. In this model, the computers are not connected by a network.</p><h3 id="workgroup-network-model" tabindex="-1"><a class="header-anchor" href="#workgroup-network-model"><span>Workgroup Network Model</span></a></h3><p>A workgroup model is based on peer-to-peer networking. In the workgroup model:</p><ul><li> No hosts in a workgroup have a specific role. <ul><li> All hosts can function as both workstation and server. </li><li> All hosts in a workgroup can both provide network services and consume network services. </li></ul></li><li> The hosts are linked together by some type of local network connection. </li><li> Hosts in the same workgroup can access shared resources on other hosts. </li><li> No specialized software is required. </li></ul><p>Some drawbacks of the workgroup network model include:</p><ul><li> Lack of scalability </li><li> Lack of centralized configuration control </li><li> Complexity of backing up data </li><li> Lack of centralized authentication. To use resources on another computer, the same user account must be created on both systems. </li><li> Lack of centrally applied security settings </li></ul><h3 id="client-server-network-model" tabindex="-1"><a class="header-anchor" href="#client-server-network-model"><span>Client-Server Network Model</span></a></h3><p>In the client-server model, each host has a specific role in the network. Servers provide services such as file storage, user management, security configuration, and printing. Clients request services from servers. The client-server model is known as domain networking in a Windows environment.</p><p>Some key domain networking facts include the following:</p><ul><li> Domain networking uses the concept of security principals. These are entities such as users, computers, and resources. </li><li> A Windows domain is a collection of security principals that share a central authentication database known as Active Directory (AD). </li><li> The Active Directory database is located on one or more servers in the domain. <ul><li> The servers running the Active Directory database are called domain controllers (DCs). </li><li> Hosts must run a supported version of the Windows operating system to join a domain. </li><li> The distinguished name of the domain is composed of the domain name along with the top-level domain name from DNS. </li></ul></li><li> Domains are much more efficient and scalable than workgroups due to a centralized management structure and function. <ul><li> Objects represent resources such as users, computers, and printers. </li><li> Objects are used to define security attributes such as access, availability, and use limitations within the domain. </li><li> Objects can be organized in container objects. </li><li> An organizational unit (OU) is a type of container object used to logically organize network resources and simplify administration. </li></ul></li></ul><p>Some drawbacks of the client-server network model include increases in the following areas:</p><ul><li> Cost to implement due to specialized hardware and software requirements </li><li> Planning time required for implementation </li><li> Complexity of implementation </li><li> Knowledge required to manage the implementation </li></ul><h2 id="_6-4-3-using-local-user-accounts-for-sign-in" tabindex="-1"><a class="header-anchor" href="#_6-4-3-using-local-user-accounts-for-sign-in"><span>6.4.3 Using Local User Accounts for Sign-in</span></a></h2><h3 id="use-local-user-accounts-for-logon-00-00-00-29" tabindex="-1"><a class="header-anchor" href="#use-local-user-accounts-for-logon-00-00-00-29"><span>Use Local User Accounts for Logon 00:00-00:29</span></a></h3><p>Windows has user and group accounts so you can control the actions different users can perform on a system. User accounts also let you create a custom user environment for each account while they&#39;re using Windows. Managing users and groups is a big part of managing Windows systems.</p><p>With Windows 10, you can use local user accounts, domain user accounts, or online user accounts. In this demonstration, we&#39;re going to focus on local user accounts.</p><h3 id="create-user-accounts-00-29-03-13" tabindex="-1"><a class="header-anchor" href="#create-user-accounts-00-29-03-13"><span>Create User Accounts 00:29-03:13</span></a></h3><p>To create an account in Windows 10, we need to go to Settings, so come down to Start and Settings. We&#39;ll come over here and click Accounts. Now we need to go to Family &amp; other users and select Add someone else to this PC. By default, Windows 10 wants you to sign in using a Microsoft online user account, but we don&#39;t want to do that. So, to get past this, I&#39;m going to come down here and select I don&#39;t have this person&#39;s sign-in information.</p><p>Microsoft is very persistent about asking you to add a Microsoft account. Thanks, but not today. So, to create a local user account, we actually have to come down here and click Add user without a Microsoft account. If you don&#39;t use a Microsoft account, you&#39;ll lose access to some features of Windowsâ€”like you can&#39;t pull down apps from the Microsoft Store. We&#39;ll go ahead and do it anyway.</p><p>So, it says, &quot;Who&#39;s going to use this PC?&quot; Well, that&#39;s going to be Nichole Collins, so I&#39;ll make this â€˜ncollins&#39;. Now I have to enter the password information. You should always use a strong password. Remember, a strong password is at least eight characters long and uses uppercase, lowercase, and non-alphabetical characters, such as periods, commas, ampersands, and dollar signs. Down here, we have to enter some security information. I don&#39;t like giving potential hackers any information, so I&#39;m going to be very vague with these answers. Microsoft has made it so you can&#39;t skip this part, so let&#39;s just go ahead and enter something really quick.</p><p>What is your first pet&#39;s name? I&#39;ll just put â€˜pet&#39; for that.</p><p>What&#39;s the name of the city where you were born? We&#39;ll just say â€˜city&#39;.</p><p>And, for the last one, What was your childhood nickname?, we&#39;ll say people just called me â€˜nickname&#39;.</p><p>All right, let&#39;s continue and click Next. And, as you can see right here, I have another user account.</p><p>When we create a user, it&#39;s a standard user by default. Standard users are very limited. Typically, you should create mostly standard users. The principle of least privilege applies here--each user should have enough access to the system to do their job, and no more. And most people only need standard access.</p><p>So, if you have an end user that just needs to create word processing documents, read their email, and browse the web, they&#39;re a standard user. I&#39;ll warn you that your users will probably complain about this. A lot of system administrators are tempted to make everybody an administrator account, just to keep them happy, and that&#39;s not good because they have too much access. They can make changes to the system, they can create more accounts, and they can access other users&#39; files. So, for everyone&#39;s safety, unless someone is actually a system administratorâ€”it&#39;s part of their official job titleâ€”they should always be a standard user.</p><p>Manage User Accounts from Computer Management 03:13-05:10 Now, there are other ways to manage user accounts on a Windows system. One of them is to use Computer Management. This feature uses the Users and Groups snap-in. And a lot of system administrators prefer the User and Group snap-in to Control Panel or the Settings app because it provides more administrative control over the user accounts. So, let&#39;s go ahead and do that on this Windows 10 system. We&#39;ll open up Computer Management. The nice thing about this tool is that the interface for the Users and Group snap-in is exactly the same on Windows 10 as it is on older systems. Under Local Users and Groups, we can expand it. Then we have our users and our groups.</p><p>Let&#39;s go to Users and add another user account to the system. Right-click and select New User. We&#39;ll give it the username â€˜lfellows&#39;. The full name is â€˜Lennon Fellows&#39;. And now we&#39;ll give Lennon a password. And notice we don&#39;t have the security questions that are required in the Settings app here in Computer Management. We do have the option to force the user to change their password at next logon, and that&#39;s actually a really good idea because the system admin shouldn&#39;t know the users&#39; passwords.</p><p>Now, let&#39;s suppose that Lennon&#39;s a contractor. Lennon only comes in for maybe a week at a time, does a few jobs, and then leaves and doesn&#39;t come back on site for a couple of weeks. In the meantime, we don&#39;t want him or anyone else using his account to sniff around on our network.</p><p>So, here&#39;s our solution: while Lennon is off contract, we can mark this option, Account is disabled, and I&#39;ll click Create and Close. Now, let&#39;s go back and look at his account, go to Properties, and you can see his account is disabled. When Lennon is back at the office, I can enable his account, click Apply and OK, and now he can dig back into his work.</p><h3 id="summary-05-10-05-27" tabindex="-1"><a class="header-anchor" href="#summary-05-10-05-27"><span>Summary 05:10-05:27</span></a></h3><p>That&#39;s it for this demonstration. In this demo, we discussed managing local users. We talked about creating user accounts. And then we discussed how to manage user accounts using computer management on a Windows 10 system.</p><h2 id="_6-4-4-join-a-workgroup" tabindex="-1"><a class="header-anchor" href="#_6-4-4-join-a-workgroup"><span>6.4.4 Join a Workgroup</span></a></h2><h3 id="joining-a-workgroup-00-00-00-33" tabindex="-1"><a class="header-anchor" href="#joining-a-workgroup-00-00-00-33"><span>Joining a Workgroup 00:00-00:33</span></a></h3><p>In this demonstration, we&#39;re going to talk about how to join Windows workstations together into a Workgroup configuration on the network.</p><p>Before we go any further, I need to point out that using a Workgroup is not the preferred configuration. Unless you have a very small networkâ€”eight machines or fewer--I wouldn&#39;t use a Workgroup because they become unmanageable very quickly. Essentially, a Workgroup is Microsoft&#39;s implementation of peer-to-peer networking. That means any workstation within the Workgroup can function as a client, a server, or both at the same time.</p><h3 id="add-first-computer-to-the-workgroup-00-33-01-56" tabindex="-1"><a class="header-anchor" href="#add-first-computer-to-the-workgroup-00-33-01-56"><span>Add First Computer to the Workgroup 00:33-01:56</span></a></h3><p>To configure a Workgroup, you have to configure each system with the same Workgroup name. Let&#39;s come down to the Search field, and I&#39;ll type in â€˜system&#39; and select System from the choices. I&#39;ll wait for this to open up. Now, notice, down here, that I&#39;m currently a member of a Workgroup called WORKGROUP. If you install a Windows system and you don&#39;t specify that it be joined to a domain or to Azure AD, it&#39;s placed in a default Workgroup called WORKGROUP.</p><p>Let&#39;s change this and create a separate Workgroup with just two Windows systems in it. To do this, I click on Change Settings. My System Properties dialog pops up, and I&#39;m going to come here and click on Change. Notice that Workgroup is already selected. We want to change the Workgroup name to something else. Before we do this, I need to point out that this really doesn&#39;t provide any type of security whatsoever. You don&#39;t have to provide any authentication to join a Workgroupâ€”no one does. Anyway, let&#39;s name it TestOut. Click OK. It welcomes us to the TestOut workgroup. Notice that I didn&#39;t have to provide any type of administrator credentials to join the Workgroup. I was just allowed to jump right in. Click OK. Now, to apply this change, we&#39;ll have to reboot. I&#39;ll click OK. Click Close here. It prompts us to restart. I&#39;ll go ahead and do that.</p><h3 id="add-second-computer-to-the-workgroup-01-56-02-43" tabindex="-1"><a class="header-anchor" href="#add-second-computer-to-the-workgroup-01-56-02-43"><span>Add Second Computer to the Workgroup 01:56-02:43</span></a></h3><p>While this system is rebooting, we&#39;ll go configure the other system that we want to participate in the Testout workgroup. This is the second system that I want to add to the Testout workgroup. This time, I&#39;ll come down and type in â€˜control panel&#39;, and then click on System and Security and then, down here, on System.</p><p>Once again, you can see that this system was added to the default, WORKGROUP, when it was initially installed. Let&#39;s change that. I&#39;ll click Change settings and then Change. We&#39;ll change the name of the Workgroup to TestOut, just like we did on the other workstation. Remember that, for these workstations to be members of the same Workgroup, you have to use exactly the same name on each one. If you use a different name, you&#39;ve essentially created a separate Workgroup.</p><h3 id="same-network-segment-requirement-02-43-03-30" tabindex="-1"><a class="header-anchor" href="#same-network-segment-requirement-02-43-03-30"><span>Same Network Segment Requirement 02:43-03:30</span></a></h3><p>Before I click OK, there&#39;s one more thing I want to point out. When you configure a Workgroup, all of the workstations that you add to it have to be on the same network segment. For example, if I had another Windows 10 system somewhere, and it was on the other side of a router somewhere else in my organization, on a different network segment, I wouldn&#39;t be able to join it to the same Workgroup. I could put the same Workgroup name in, and it would join that Workgroup just fine. It just wouldn&#39;t be able to communicate with any of the systems on the other network segments that are part of the same Workgroup.</p><p>Click OK. Again, we&#39;re welcomed to the TestOut Workgroup without any authentication. Click OK to acknowledge that we need to reboot the system to make the change take effect. We&#39;ll restart now and wait just a minute while all these systems reboot.</p><h3 id="local-users-for-authentication-03-30-04-12" tabindex="-1"><a class="header-anchor" href="#local-users-for-authentication-03-30-04-12"><span>Local Users for Authentication 03:30-04:12</span></a></h3><p>At this point, my two systems have rebooted, and they&#39;re part of the TestOut workgroup. I&#39;m ready to log on to the system. I&#39;m just using a normal local user account called Rachel McGaffey. That&#39;s an important thing to keep in mind when you&#39;re dealing with Workgroups. It&#39;s one of the reasons why I never use them if I don&#39;t absolutely have to: there&#39;s no centralized authentication within a Workgroup.</p><p>In other words, all of my user accounts exist on each individual local system. Therefore, if I want to use my Workgroup to access a shared resource on the system that we just added to the Testout workgroup, I&#39;m going to have to create a duplicate Rachel McGaffey user account on that system with the same password as I used on this system.</p><h3 id="shared-resources-04-12-05-03" tabindex="-1"><a class="header-anchor" href="#shared-resources-04-12-05-03"><span>Shared Resources 04:12-05:03</span></a></h3><p>When I want to access a shared resource on that other system, it&#39;ll be the Rachel McGaffey user account on the remote system that I used to authenticate, not the Rachel McGaffey user account that I&#39;m using here, to log in to this system. As you might guess, things get complicated really fast, especially if you have a lot of users and a lot of systems that are all in the same Workgroup.</p><p>After I log on, I can use the Workgroup to locate resources associated with other Workgroup members. For example, I can find a shared folder. If I come down to File Explorer and then over to Network, I see the systems that are members of the same Workgroup. Here&#39;s the other system that we added to the Workgroup a minute ago. On the right, I can see the shares that are currently defined on that system. For example, there&#39;s a share here called My Stuff. If I double-click on it, I&#39;m able to view the folder&#39;s contents.</p><h3 id="summary-05-03-05-14" tabindex="-1"><a class="header-anchor" href="#summary-05-03-05-14"><span>Summary 05:03-05:14</span></a></h3><p>And that&#39;s it for this demonstration. In this demo, we configured two Windows workstations to participate within a Workgroup.</p><h2 id="_6-4-5-using-online-user-accounts-for-sign-in" tabindex="-1"><a class="header-anchor" href="#_6-4-5-using-online-user-accounts-for-sign-in"><span>6.4.5 Using Online User Accounts for Sign-in</span></a></h2><h3 id="using-online-user-accounts-for-logon-00-00-00-54" tabindex="-1"><a class="header-anchor" href="#using-online-user-accounts-for-logon-00-00-00-54"><span>Using Online User Accounts for Logon 00:00-00:54</span></a></h3><p>In this demonstration, we&#39;re going to spend some time working with online user accounts.</p><p>This is important because with Windows 10, online user accounts are the preferred method for logging in to the local system. You create an online account with Microsoft, it&#39;s stored in the Cloud, and then you use that online user account to access the local system through the internet during the authentication process.</p><p>Online user accounts have a lot of advantages. For example, if I log in with an online user account, I can access the Windows Store to purchase and download apps. I can also synchronize my user preferences, such as my desktop background and themes, to the cloud so that if I log in to a different Windows system with the same account, all my preferences are automatically synchronized to the new system. An online user account also gives you access to OneDrive Cloud Storage.</p><h3 id="link-online-accounts-00-54-01-52" tabindex="-1"><a class="header-anchor" href="#link-online-accounts-00-54-01-52"><span>Link Online Accounts 00:54-01:52</span></a></h3><p>I&#39;m currently logged in to this system with a local user account, Rachel McGaffey. I&#39;ve already gone into the Windows Live website and created a new online user account that I want to associate with the Rachel McGaffey local user account. To do this, I need to go to Settings and then to Accounts. We see here that Rachel McGaffey is a local user account. I want to use this option to connect this local account to the online Microsoft account I just created. I&#39;ll click this option, Sign in with a Microsoft account instead.</p><p>Now I need to enter in the email address I set up for the online account. Click Next.</p><p>Now I enter in my password for my online account. Click Sign in.</p><p>I need to enter my local computer password just to confirm that this is what I really want to do. I&#39;ll type that in and click Next.</p><h3 id="sync-the-online-account-01-52-02-59" tabindex="-1"><a class="header-anchor" href="#sync-the-online-account-01-52-02-59"><span>Sync the Online Account 01:52-02:59</span></a></h3><p>Now I&#39;m set up with the online account. The first thing I want to do is look at the Sync Your Settings options. Let&#39;s go over here, to Sync Your Settings.</p><p>Right away, I see this red notice that I need to verify my identity on this device, so I&#39;m going to do that right now. It&#39;s going to send me a text message with a code that I have to enter to prove it&#39;s really me, so I&#39;ll put in the last four digits of my phone number. At this point, I&#39;m going to pause this demo until I receive the text.</p><p>Okay. I have my code now, and I&#39;ll type it in right here. Now I&#39;m back to Sync Your Settings, and now you see the notice goes away.</p><p>This is where we configure what we want to sync. First, we can turn synchronization off or on with this slider. Let&#39;s go ahead and leave it on. We can also synchronize the personalization settings we&#39;ve configured for our user account, such as the theme, our passwords, language preferences, ease of access, and other Windows settings.</p><p>Now let&#39;s log off this system and log on to a different system with the local account.</p><h3 id="associate-one-online-account-with-another-online-account-02-59-04-20" tabindex="-1"><a class="header-anchor" href="#associate-one-online-account-with-another-online-account-02-59-04-20"><span>Associate One Online Account with Another Online Account 02:59-04:20</span></a></h3><p>Okay. I&#39;m on the other system. If we look here, we can see that I&#39;m currently logged in as a local user named Rachel McGaffey.</p><p>I want to associate the Rachel McGaffey user on this system with the same online user account I used for my other system.</p><p>Let&#39;s go down to Settings, and then over to Accounts. Notice that Rachel has a local account, just like she did before. We want to sign in with a Microsoft account instead. We&#39;ll enter in the email address, the same one we used before. Click Next.</p><p>And we&#39;ll enter the same password as before. Sign in.</p><p>We need to provide the old local machine password. And now I&#39;m authenticated to the system as my Rachel McGaffey user account.</p><p>Let&#39;s go over here, to Sync your settings. Here, we can configure settings like we did on the other system.</p><p>Okay. You can see that we have the same settings here as we did on the other account. And, to sort of force the issue, I&#39;m going to reboot the system and log back in.</p><p>When I do, the preferences from my original Windows system are automatically applied on this Windows system. My desktop background changes, and all of the other settings I synchronized from the first system are applied.</p><h3 id="summary-04-20-04-32" tabindex="-1"><a class="header-anchor" href="#summary-04-20-04-32"><span>Summary 04:20-04:32</span></a></h3><p>That&#39;s it for this demonstration. In this demo, we discussed how to authenticate to Windows systems using online Microsoft accounts.</p><h2 id="_6-4-6-using-domain-user-accounts-for-sign-in" tabindex="-1"><a class="header-anchor" href="#_6-4-6-using-domain-user-accounts-for-sign-in"><span>6.4.6 Using Domain User Accounts for Sign-in</span></a></h2><h3 id="using-domain-user-accounts-for-logon-00-00-00-30" tabindex="-1"><a class="header-anchor" href="#using-domain-user-accounts-for-logon-00-00-00-30"><span>Using Domain User Accounts for Logon 00:00-00:30</span></a></h3><p>In this demonstration, we&#39;re going to look at how you log on to a local Windows system with a domain user account. Remember, in a Windows system, there are three different places you can store your account credentials.</p><p>You can store them locally, on the system itself. That&#39;s called a local user account.</p><p>You can also use an online user account, which stores your user account credentials on a server at Microsoft, and you access them over the internet connection when you authenticate to the local system.</p><p>The third option is to use a domain user account.</p><h3 id="use-a-domain-user-account-00-30-04-27" tabindex="-1"><a class="header-anchor" href="#use-a-domain-user-account-00-30-04-27"><span>Use a Domain User Account 00:30-04:27</span></a></h3><p>Now, using a domain user account, your account credentials aren&#39;t stored locally. Instead, they&#39;re stored on a server, in Active Directory, somewhere else on your network. And when I go to log in to the local system, the user name and password I supply are sent to that server. (It&#39;s called a domain controller.) Then the domain controller checks to see if the username and password that I submitted match the credentials it has for that particular user. And if they&#39;re a match, it sends a message back to the local system saying, yep, they match. Go ahead and log that user in. That&#39;s the option we&#39;re going to use in this demonstration.</p><p>Now, before this will work, you have to join the local workstation to the domain. If you&#39;re not joined to the domain, you can&#39;t use a domain user account to authenticate. This system is part of a domain, so we&#39;re good there.</p><p>When I try to log in here, it wants to use an online user account. That&#39;s fine, but we&#39;re not going to use it today. Instead, we want to come down here and click on Other user. In the Other user field, I need to enter the username of the domain user that I want to authenticate as. Down here, under sign in to, it specifies the name of the domain that&#39;s going to be checked for the user I specify.</p><p>So if I put in a user here, such as dfellows, the dfellows user account must have already been created over here, in the CorpNet domain. If it hasn&#39;t, it&#39;s not going to work. Now, because it tells me that it&#39;s going to be looking in the CorpNet domain by default, I don&#39;t actually have to specify the domain up here. If, for some reason, I wanted to connect a user account in a different domain, then I could come up here. Before my username, I just type the name of that domain.</p><p>For example, if I had a different domain configured named WACC, I could put WACC and then a back slash followed by the username. And notice, down here, it changed. Instead of looking for this user account in CorpNet, it&#39;s going to look for it on a different domain controller hosting the WACC domain. Well, we don&#39;t want to do that. There is no WACC domain configured. We need to use the CorpNet domain. So, I enter CorpNet, back slash, and then the username, and then the password for that domain user account. Now, it&#39;s important to note that this dfellows user account that I&#39;m logging in to doesn&#39;t exist on the local system. The username and the password are stored on this domain controller.</p><p>So, the password that I enter here has to match the password that&#39;s configured on the domain controller. Now we&#39;ll go ahead and sign in. At this point, it&#39;s taking a little while to log in. Why? Because I haven&#39;t used the dfellows domain user account to authenticate to this Windows system before. So, in the process of logging in, the domain controller checks and says, hey, hold on a minute, there&#39;s no user profile information for the dfellows domain user on this local workstation, so I&#39;m going to set it up. So, right now, it&#39;s going through the process of creating my user profile, my dfellows profile, on the local system. It&#39;s creating my desktop, it&#39;s creating my library folders, it&#39;s setting up my preferences, and it&#39;s going to install my default apps as well.</p><p>All right. I&#39;m logged in now as my dfellows domain user account. And a user profile has been created for that domain user account here, on the local system. Now, the cool thing about using a domain user account over a local user account is that the administrator can manage all aspects of the user from just one location. For example, if the administrator needs to set up policies for group users, he can do all the work right there, on the domain controller, instead of going from system, to system, to system, to system for each individual user. And those policies will be pushed out over the network, to my local system.</p><p>Another key benefit of using a domain user account is that I can use that domain user to log in to any workstation that&#39;s a member of the same domain. Now, I just logged in to this Windows 10 system using the dfellows user account. But now, I can also use that same dfellows user account, go to any other system that&#39;s a member of the CorpNet.xyz domain, and also log in.</p><h3 id="summary-04-27-04-38" tabindex="-1"><a class="header-anchor" href="#summary-04-27-04-38"><span>Summary 04:27-04:38</span></a></h3><p>That&#39;s it for this demonstration. In this demo, we used a domain user account to authenticate to a Windows system.</p><h2 id="_6-4-7-using-azure-ad-user-accounts-for-sign-in" tabindex="-1"><a class="header-anchor" href="#_6-4-7-using-azure-ad-user-accounts-for-sign-in"><span>6.4.7 Using Azure AD User Accounts for Sign-in</span></a></h2><h3 id="use-azure-ad-user-accounts-for-logon-00-00-00-13" tabindex="-1"><a class="header-anchor" href="#use-azure-ad-user-accounts-for-logon-00-00-00-13"><span>Use Azure AD User Accounts for Logon 00:00-00:13</span></a></h3><p>In this demonstration, we&#39;re going to talk about how to authenticate to a Windows system using an Azure Active Directory account. It&#39;s an interesting way to authenticate.</p><h3 id="active-directory-in-the-cloud-00-13-01-12" tabindex="-1"><a class="header-anchor" href="#active-directory-in-the-cloud-00-13-01-12"><span>Active Directory in the Cloud 00:13-01:12</span></a></h3><p>In the past, if you wanted to use Active Directory, you installed the domain controller locally in your network and configured your user accounts there. When a user wanted to authenticate to the local system, they would send the authentication request to the domain controller, which would authenticate the system and let you log on.</p><p>Azure Active Directory is very similar, except we&#39;re moving the domain controller from our local network to a server out in the cloud that&#39;s hosted by Microsoft.</p><p>I&#39;ve already gone out to Microsoft&#39;s Azure, and I&#39;ve already created a new Azure Active Directory. It&#39;s called FellowsTech. If I click on Azure Active Directory, it brings up the Overview pane. Now we go to Users, and we can see there are several users already provisioned within my Azure Active Directory. Because Azure Active Directory is pre-provisioned with these accounts, we can actually reconfigure our Windows 10 system to use them in the cloud to authenticate to the local system. It&#39;s kind of coolâ€”let&#39;s look at how it works.</p><h3 id="join-the-workstation-to-azure-ad-01-12-02-28" tabindex="-1"><a class="header-anchor" href="#join-the-workstation-to-azure-ad-01-12-02-28"><span>Join the Workstation to Azure AD 01:12-02:28</span></a></h3><p>To join this Windows 10 workstation to the directory I created with Azure, I&#39;ll come down to my Start tile, click on it, go to Settings, and go to Accounts. Now I&#39;ll come over here, to Access work or school. Click on the plus sign to connect. After this Window appears, go down here and select Join this device to Azure Active Directory. Let&#39;s type in the account info from one of my users. Click Next. I&#39;ll enter in the password that I configured for that account, and we&#39;ll click Sign in. This is the first time I&#39;ve signed in with this account, so it&#39;s prompting me to change my password. I&#39;ll enter in the old password, put in a new one, confirm the new one, and, once again, click on Sign in.</p><p>We just need to verify that we&#39;re logged into the correct domain. This all looks great. We&#39;ll click Join and wait for just a second. It says, &quot;You&#39;re all set!&quot; Now our system is joined to my organization, which is FellowsTech in Azure AD. We&#39;ll click Done. We can see, right here, that we&#39;re connected.</p><h3 id="sign-in-as-an-azure-ad-user-02-28-03-33" tabindex="-1"><a class="header-anchor" href="#sign-in-as-an-azure-ad-user-02-28-03-33"><span>Sign in as an Azure AD User 02:28-03:33</span></a></h3><p>Now, we&#39;re not finished yet. I&#39;m still logged on to the local system using my standard local user account. To use the Azure user account, we need to sign out from my current user account, then sign back in as Other User. I&#39;ll just go ahead and restart my system.</p><p>Okay, my system has restarted. Let&#39;s select Other user down here. I&#39;ll enter in the same email address that I used to join the workstation to Azure AD. Now I&#39;ll put in the password.</p><p>At this point, we just have to wait a minute, because we&#39;re essentially creating a new user account on the local system, and that account will have to be provisioned. This could take a few minutes, so we&#39;ll stop the recording and come back when the process is complete.</p><p>Okay, we&#39;ve successfully logged on with my Azure AD user account. This is nice because I can go in and configure various policies and settings within this web interface for my cloud-based Active Directory and have those policies applied to my user&#39;s workstations, wherever they are, and whatever system they&#39;re logging in from.</p><h3 id="summary-03-33-03-46" tabindex="-1"><a class="header-anchor" href="#summary-03-33-03-46"><span>Summary 03:33-03:46</span></a></h3><p>That&#39;s it for this demonstration. In this demo, we talked about how to log on to a Windows workstation using an Azure Active Directory account.</p><h2 id="_6-4-8-windows-user-management-facts" tabindex="-1"><a class="header-anchor" href="#_6-4-8-windows-user-management-facts"><span>6.4.8 Windows User Management Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li>Local user accounts</li><li>Workgroup membership</li><li>Microsoft account sign-in</li><li>Domain account sign-in</li><li>Azure Active Directory account sign-in</li></ul><h3 id="local-user-accounts" tabindex="-1"><a class="header-anchor" href="#local-user-accounts"><span>Local User Accounts</span></a></h3><p>A local user account can be created and used to sign in and access your Windows 10 computer instead of using a Microsoft account. When you use a local account, some features offered to Microsoft accounts are not available. These include Microsoft&#39;s OneDrive and synced settings.</p><p>Local user account types include:</p><table><thead><tr><th scope="col" class="fw-bold"> Account Type </th><th scope="col" class="fw-bold"> Description </th></tr></thead><tbody><tr><td> Administrator </td><td> Administrators have complete control of the system and can perform tasks such as: <ul><li> Change global settings </li><li> Create/delete users </li><li> Install applications </li><li> Run applications in an elevated state </li><li> Access all files on the system </li></ul></td></tr><tr><td> Standard User </td><td> Standard users have limited permission. For example, standard users can: <ul><li> Use applications (but they cannot install them) </li><li> Change some settings that apply only to them </li></ul><p> Standard users cannot run applications in an elevated state. </p></td></tr></tbody></table><p>Local accounts can be created using various tools as follows:</p><table><thead><tr><th scope="col" class="fw-bold"> Tool </th><th scope="col" class="fw-bold"> Description </th></tr></thead><tbody><tr><td> Windows Settings App </td><td> To create a local account on a computer not joined to a domain: <ol><li> Right-click Start, select Settings, and then choose Accounts. </li><li> Select Family &amp; other users (or Other users if the computer is joined to a domain). Then select Add someone else to this PC. </li><li> Follow the remaining steps to enter the name and password for the new user. </li></ol></td></tr><tr><td> Computer Management </td><td> To create a local account: <ol><li> Right-click Start and then select Computer Management. </li><li> From Computer Management, expand Local Users and Groups. </li><li> Right-click Users and then select New User. </li><li> Complete the required options and click Create. </li></ol><p> With this tool you are not required to use security questions. This method also gives you the ability to: </p><ul><li> Force users to change the password at the next sign-in </li><li> Restrict the user from changing the password </li><li> Allow the password to never expire </li><li> Disable/enable an account </li></ul></td></tr></tbody></table><h3 id="workgroup-membership" tabindex="-1"><a class="header-anchor" href="#workgroup-membership"><span>Workgroup Membership</span></a></h3><p>When working in an environment where multiple computers are connected on a network, one method of sharing resources between computers is to use a workgroup. A workgroup is Microsoft&#39;s implementation of peer-to-peer networking. Although using domains is the preferred method, workgroups can be useful in small environments of about two to eight computers. Anything larger than that begins to be an administrative challenge.</p><p>When using workgroups, consider the following:</p><ul><li> Workgroups provide only sign-in security. </li><li> No username or password is required to join a workgroup. </li><li> Computers that belong to the same workgroup can share resources only if they are on the same segment. </li><li> Workgroups have no centralized authentication. This means that for a user to access a remote system, the same username and password must be created on the remote system. Otherwise, each user would need to know the username and password on the remote system. </li><li> If a domain is not used, the computer is a member of the workgroup named Workgroup by default. </li></ul><p>To make a computer a member of a workgroup:</p><ol><li> Access the System Configuration app. <ul><li> Right-click Start and then select System. </li><li> From the right pane, select System info under Related settings. </li></ul></li><li> Under Computer name, Domain, and Workgroup settings, select Change settings. </li><li> From the Computer Name tab, click Change. Next, enter the name of the desired workgroup and click OK. </li></ol><h3 id="microsoft-account-sign-in" tabindex="-1"><a class="header-anchor" href="#microsoft-account-sign-in"><span>Microsoft Account Sign-In</span></a></h3><p>With Windows 10, Microsoft&#39;s preferred method of signing onto a system is to use a Microsoft account. Microsoft accounts use a single sign-on system. This means that you can sign into different systems while maintaining the same user settings and password. You can even access your favorites websites. Microsoft accounts also provide synchronized access to other Microsoft services such as Office 365, Outlook, Skype, OneDrive, Xbox Live, Bing, and Microsoft Store.</p><p>Microsoft accounts can be created using an existing email address or by signing up for a Microsoft email address. You can also use a phone number instead of an email address. If your Windows system was originally configured to sign in using a local account, you can switch to a Microsoft account by doing the following:</p><ol><li> Select the Start menu and go to Settings &gt; Accounts &gt; Your info. </li><li> Select Sign in with a Microsoft account instead. (Note: if you see Sign in with a local account instead, you&#39;re already using your Microsoft account.) </li><li> Follow the prompts to switch to your Microsoft account. If needed, you can create a Microsoft account at this time. </li></ol><p>To switch from a Microsoft account back to a local account, right-click Start and go to Settings &gt; Accounts &gt; Your info. Then select Sign in with a local account instead and follow the prompts.</p><h3 id="domain-account-sign-in" tabindex="-1"><a class="header-anchor" href="#domain-account-sign-in"><span>Domain Account Sign-In</span></a></h3><p>In addition to local and Microsoft account sign-ins, you can also sign into a Windows system using a domain account. Domain accounts are created and stored in Active Directory on a domain controller server. This provides central management of users and group.</p><p>When using a domain user account to sign into your system, the username and password entered are sent to the domain controller. The domain controller then checks to see if the username and password submitted match the credentials it has for that particular user. If they do match, it sends a message back to the local system verifying the credentials, and the user is allowed to sign into the system. Before a user can sign in using a domain account, the domain user account must have already been created in Active Directory and the computer must have been joined to the desired domain.</p><p>To sign in using a domain account, you need to specify the domain to which you want to sign into. If this is the first time you are signing into the domain, or you want to make sure you are signing into the correct domain, select Other user from the sign-in screen. From this dialog, a known domain will be shown.</p><h3 id="amce-admin" tabindex="-1"><a class="header-anchor" href="#amce-admin"><span>AMCE\\Admin</span></a></h3><h4 id="azure-active-directory-account-sign-in" tabindex="-1"><a class="header-anchor" href="#azure-active-directory-account-sign-in"><span>Azure Active Directory Account Sign-In</span></a></h4><p>Azure Active Directory (Azure AD) is a cloud-based identity and access management service provided by Microsoft. It is similar to on-premises Active Directory except that Azure AD runs in Microsoft&#39;s Azure cloud. With Azure AD, users can sign in and access both internal and external resources. Internal resources include such things as the applications on a corporate network. External resources includes such things as Microsoft Office 365 and other Software as a Service (SaaS) applications.</p><p>As with on-premises Active Directory, to use Azure AD a user account must be created in Azure AD and the local computer must be joined to the Azure AD domain.</p><p>To join a device to Azure Active Directory:</p><ul><li> Right-click Start and then go to Settings &gt; Accounts. </li><li> Select Access work or school and select Connect. </li><li> Select Join this device to Azure Active Directory. </li><li> Follow the remaining prompts to complete the process. </li></ul><p>After joining the computer to Azure AD, you sign in using the same steps as you would to sign into a local domain. The only difference is that you use the Azure AD domain.</p>',229)]))}const u=a(r,[["render",c],["__file","06.04.WindowsUserManagement.html.vue"]]),d=JSON.parse('{"path":"/06/06.04.WindowsUserManagement.html","title":"Section 6.4 Windows User Management","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 6.4 Windows User Management","description":"some description"},"headers":[{"level":2,"title":"6.4.1 Windows Operating System Roles","slug":"_6-4-1-windows-operating-system-roles","link":"#_6-4-1-windows-operating-system-roles","children":[{"level":3,"title":"Windows Operating System Roles 00:00-00:16","slug":"windows-operating-system-roles-00-00-00-16","link":"#windows-operating-system-roles-00-00-00-16","children":[]},{"level":3,"title":"Standalone Model 00:16-00:57","slug":"standalone-model-00-16-00-57","link":"#standalone-model-00-16-00-57","children":[]},{"level":3,"title":"Workgroup Networking Model 00:57-03:27","slug":"workgroup-networking-model-00-57-03-27","link":"#workgroup-networking-model-00-57-03-27","children":[]},{"level":3,"title":"Backups 03:27-03:46","slug":"backups-03-27-03-46","link":"#backups-03-27-03-46","children":[]},{"level":3,"title":"Local Accounts 03:46-04:38","slug":"local-accounts-03-46-04-38","link":"#local-accounts-03-46-04-38","children":[]},{"level":3,"title":"Local Security Settings 04:38-05:03","slug":"local-security-settings-04-38-05-03","link":"#local-security-settings-04-38-05-03","children":[]},{"level":3,"title":"Domain Networking 05:03-06:04","slug":"domain-networking-05-03-06-04","link":"#domain-networking-05-03-06-04","children":[]},{"level":3,"title":"Active Directory Domain Controllers 06:04-08:37","slug":"active-directory-domain-controllers-06-04-08-37","link":"#active-directory-domain-controllers-06-04-08-37","children":[]},{"level":3,"title":"Domain Objects 08:37-08:56","slug":"domain-objects-08-37-08-56","link":"#domain-objects-08-37-08-56","children":[]},{"level":3,"title":"Organizational Units 08:56-10:14","slug":"organizational-units-08-56-10-14","link":"#organizational-units-08-56-10-14","children":[]},{"level":3,"title":"Domain Model Drawbacks 10:14-11:00","slug":"domain-model-drawbacks-10-14-11-00","link":"#domain-model-drawbacks-10-14-11-00","children":[]},{"level":3,"title":"Azure Active Directory 11:00-11:55","slug":"azure-active-directory-11-00-11-55","link":"#azure-active-directory-11-00-11-55","children":[]},{"level":3,"title":"Summary 11:55-12:29","slug":"summary-11-55-12-29","link":"#summary-11-55-12-29","children":[]}]},{"level":2,"title":"6.4.2 Windows Operating System Roles Facts","slug":"_6-4-2-windows-operating-system-roles-facts","link":"#_6-4-2-windows-operating-system-roles-facts","children":[{"level":3,"title":"Stand-Alone Model","slug":"stand-alone-model","link":"#stand-alone-model","children":[]},{"level":3,"title":"Workgroup Network Model","slug":"workgroup-network-model","link":"#workgroup-network-model","children":[]},{"level":3,"title":"Client-Server Network Model","slug":"client-server-network-model","link":"#client-server-network-model","children":[]}]},{"level":2,"title":"6.4.3 Using Local User Accounts for Sign-in","slug":"_6-4-3-using-local-user-accounts-for-sign-in","link":"#_6-4-3-using-local-user-accounts-for-sign-in","children":[{"level":3,"title":"Use Local User Accounts for Logon 00:00-00:29","slug":"use-local-user-accounts-for-logon-00-00-00-29","link":"#use-local-user-accounts-for-logon-00-00-00-29","children":[]},{"level":3,"title":"Create User Accounts 00:29-03:13","slug":"create-user-accounts-00-29-03-13","link":"#create-user-accounts-00-29-03-13","children":[]},{"level":3,"title":"Summary 05:10-05:27","slug":"summary-05-10-05-27","link":"#summary-05-10-05-27","children":[]}]},{"level":2,"title":"6.4.4 Join a Workgroup","slug":"_6-4-4-join-a-workgroup","link":"#_6-4-4-join-a-workgroup","children":[{"level":3,"title":"Joining a Workgroup 00:00-00:33","slug":"joining-a-workgroup-00-00-00-33","link":"#joining-a-workgroup-00-00-00-33","children":[]},{"level":3,"title":"Add First Computer to the Workgroup 00:33-01:56","slug":"add-first-computer-to-the-workgroup-00-33-01-56","link":"#add-first-computer-to-the-workgroup-00-33-01-56","children":[]},{"level":3,"title":"Add Second Computer to the Workgroup 01:56-02:43","slug":"add-second-computer-to-the-workgroup-01-56-02-43","link":"#add-second-computer-to-the-workgroup-01-56-02-43","children":[]},{"level":3,"title":"Same Network Segment Requirement 02:43-03:30","slug":"same-network-segment-requirement-02-43-03-30","link":"#same-network-segment-requirement-02-43-03-30","children":[]},{"level":3,"title":"Local Users for Authentication 03:30-04:12","slug":"local-users-for-authentication-03-30-04-12","link":"#local-users-for-authentication-03-30-04-12","children":[]},{"level":3,"title":"Shared Resources 04:12-05:03","slug":"shared-resources-04-12-05-03","link":"#shared-resources-04-12-05-03","children":[]},{"level":3,"title":"Summary 05:03-05:14","slug":"summary-05-03-05-14","link":"#summary-05-03-05-14","children":[]}]},{"level":2,"title":"6.4.5 Using Online User Accounts for Sign-in","slug":"_6-4-5-using-online-user-accounts-for-sign-in","link":"#_6-4-5-using-online-user-accounts-for-sign-in","children":[{"level":3,"title":"Using Online User Accounts for Logon 00:00-00:54","slug":"using-online-user-accounts-for-logon-00-00-00-54","link":"#using-online-user-accounts-for-logon-00-00-00-54","children":[]},{"level":3,"title":"Link Online Accounts 00:54-01:52","slug":"link-online-accounts-00-54-01-52","link":"#link-online-accounts-00-54-01-52","children":[]},{"level":3,"title":"Sync the Online Account 01:52-02:59","slug":"sync-the-online-account-01-52-02-59","link":"#sync-the-online-account-01-52-02-59","children":[]},{"level":3,"title":"Associate One Online Account with Another Online Account 02:59-04:20","slug":"associate-one-online-account-with-another-online-account-02-59-04-20","link":"#associate-one-online-account-with-another-online-account-02-59-04-20","children":[]},{"level":3,"title":"Summary 04:20-04:32","slug":"summary-04-20-04-32","link":"#summary-04-20-04-32","children":[]}]},{"level":2,"title":"6.4.6 Using Domain User Accounts for Sign-in","slug":"_6-4-6-using-domain-user-accounts-for-sign-in","link":"#_6-4-6-using-domain-user-accounts-for-sign-in","children":[{"level":3,"title":"Using Domain User Accounts for Logon 00:00-00:30","slug":"using-domain-user-accounts-for-logon-00-00-00-30","link":"#using-domain-user-accounts-for-logon-00-00-00-30","children":[]},{"level":3,"title":"Use a Domain User Account 00:30-04:27","slug":"use-a-domain-user-account-00-30-04-27","link":"#use-a-domain-user-account-00-30-04-27","children":[]},{"level":3,"title":"Summary 04:27-04:38","slug":"summary-04-27-04-38","link":"#summary-04-27-04-38","children":[]}]},{"level":2,"title":"6.4.7 Using Azure AD User Accounts for Sign-in","slug":"_6-4-7-using-azure-ad-user-accounts-for-sign-in","link":"#_6-4-7-using-azure-ad-user-accounts-for-sign-in","children":[{"level":3,"title":"Use Azure AD User Accounts for Logon 00:00-00:13","slug":"use-azure-ad-user-accounts-for-logon-00-00-00-13","link":"#use-azure-ad-user-accounts-for-logon-00-00-00-13","children":[]},{"level":3,"title":"Active Directory in the Cloud 00:13-01:12","slug":"active-directory-in-the-cloud-00-13-01-12","link":"#active-directory-in-the-cloud-00-13-01-12","children":[]},{"level":3,"title":"Join the Workstation to Azure AD 01:12-02:28","slug":"join-the-workstation-to-azure-ad-01-12-02-28","link":"#join-the-workstation-to-azure-ad-01-12-02-28","children":[]},{"level":3,"title":"Sign in as an Azure AD User 02:28-03:33","slug":"sign-in-as-an-azure-ad-user-02-28-03-33","link":"#sign-in-as-an-azure-ad-user-02-28-03-33","children":[]},{"level":3,"title":"Summary 03:33-03:46","slug":"summary-03-33-03-46","link":"#summary-03-33-03-46","children":[]}]},{"level":2,"title":"6.4.8 Windows User Management Facts","slug":"_6-4-8-windows-user-management-facts","link":"#_6-4-8-windows-user-management-facts","children":[{"level":3,"title":"Local User Accounts","slug":"local-user-accounts","link":"#local-user-accounts","children":[]},{"level":3,"title":"Workgroup Membership","slug":"workgroup-membership","link":"#workgroup-membership","children":[]},{"level":3,"title":"Microsoft Account Sign-In","slug":"microsoft-account-sign-in","link":"#microsoft-account-sign-in","children":[]},{"level":3,"title":"Domain Account Sign-In","slug":"domain-account-sign-in","link":"#domain-account-sign-in","children":[]},{"level":3,"title":"AMCE\\\\Admin","slug":"amce-admin","link":"#amce-admin","children":[]}]}],"git":{"updatedTime":1735698907000},"filePathRelative":"06/06.04.WindowsUserManagement.md"}');export{u as comp,d as data};
