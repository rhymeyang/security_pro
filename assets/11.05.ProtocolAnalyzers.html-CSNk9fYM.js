import{_ as s,c as r,a as e,d as t,b as o,o as n}from"./app-6Mc17HFZ.js";const l={};function i(c,a){return n(),r("div",null,a[0]||(a[0]=[e("p",null,"As you study this section, answer the following questions:",-1),e("ul",null,[e("li",null," What mode must a NIC be in to perform packet sniffing? "),e("li",null," What needs to be configured on a switch so all packets are sent to the sniffing device? "),e("li",null," Why would a network administrator need to use a protocol analyzer? ")],-1),e("p",null,"In this section, you will learn to:",-1),e("ul",null,[e("li",null,"Analyze network traffic.")],-1),e("p",null,"The key terms for this section include:",-1),e("table",{class:"terms"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Term "),e("th",{scope:"col",class:"fw-bold"}," Definition ")])]),e("tbody",null,[e("tr",null,[e("td",null," Protocol analyzer "),e("td",null," Hardware or software used for monitoring and analyzing digital traffic over a network. Protocol analyzers go by other names, such as packet sniffers, packet analyzers, network analyzers, network sniffers, or network scanners. ")]),e("tr",null,[e("td",null," Promiscuous mode "),e("td",null," A mode in which the NIC processes every frame it sees, not just those addressed to it. ")]),e("tr",null,[e("td",null," Port mirroring "),e("td",null," A switch mode in which all frames sent to all other switch ports will be forwarded on the mirrored port. ")])])],-1),e("p",null,"This section helps you prepare for the following certification exam objectives:",-1),e("table",{class:"objectives"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Exam "),e("th",{scope:"col",class:"fw-bold"}," Objective ")])]),e("tbody",null,[e("tr",null,[e("td",null," TestOut Security Pro "),e("td",null,[t(" 5.0 Audit and Security Assessment "),e("p",null," 5.1 Implement Logging and Auditing "),e("p",null," 5.2 Assessment Techniques ")])]),e("tr",null,[e("td",null," CompTIA Security+ SY0-601 "),e("td",null,[t(" 3.3 Given a scenario, implement secure network designs. "),e("ul",null,[e("li",null," Port spanning/port mirroring ")]),e("p",null," 4.1 Given a scenario, use the appropriate tool to assess organizational security. "),e("ul",null,[e("li",null," Packet capture and replay ")]),e("p",null," 4.3 Given an incident, utilize appropriate data sources to support an investigation. "),e("ul",null,[e("li",null," Protocol analyzer output ")]),e("p",null," 4.4 Given an incident, apply mitigation techniques or controls to secure an environment. "),e("ul",null,[e("li",null," Secure Orchestration, Automation, and Response (SOAR) ")])])])])],-1),o('<h2 id="_11-5-1-protocol-analyzers" tabindex="-1"><a class="header-anchor" href="#_11-5-1-protocol-analyzers"><span>11.5.1 Protocol Analyzers</span></a></h2><h3 id="protocol-analyzers-00-00-00-42" tabindex="-1"><a class="header-anchor" href="#protocol-analyzers-00-00-00-42"><span>Protocol Analyzers 00:00-00:42</span></a></h3><p>Protocol analyzers are used to capture data packets moving across a network and analyze them. In most cases, you&#39;ll see these tools as software programs that run a computer system, but there are hardware analyzers available as well.</p><p>Be aware that protocol analyzers are also called packet analyzers, packet sniffers, network analyzers, network sniffers, or network scanners. These terms all mean roughly the same thing.</p><p>Some of the more common protocol analyzers are Wireshark, tcpdump, Cain and Abel, and WinDump. In this lesson, I&#39;ll go over how these analyzers work and what we use them for.</p><h3 id="how-protocol-analyzers-work-00-42-01-35" tabindex="-1"><a class="header-anchor" href="#how-protocol-analyzers-work-00-42-01-35"><span>How Protocol Analyzers Work 00:42-01:35</span></a></h3><p>The most common way to set up a protocol analyzer is to install the program on a computer that&#39;s connected to a network switch. This can be a desktop computer, but laptops are also useful as they provide greater mobility.</p><p>When we use a protocol analyzer, the computer&#39;s network interface card, or NIC, must be placed in promiscuous mode. Promiscuous mode means that the NIC is able to see all packets on the same network segment. In non-promiscuous mode, the NIC only receives packets that are addressed to its MAC address.</p><p>Once we set up and configure our computer with the protocol analyzer, we can begin monitoring the packets that run across the network. We can usually just sit back and monitor the data without much interaction. This is known as passive interception.</p><p>Once we actually begin capturing packets, there&#39;s quite a few things we can do with this data.</p><h3 id="uses-for-protocol-analyzers-01-35-03-19" tabindex="-1"><a class="header-anchor" href="#uses-for-protocol-analyzers-01-35-03-19"><span>Uses for Protocol Analyzers 01:35-03:19</span></a></h3><p>Depending on what we&#39;re trying to accomplish, there are different ways we can take advantage of the protocol analyzer&#39;s features.</p><p>For example, a network administrator may use their protocol analyzer to look for specific protocols like SMTP, DNS, POP3, or ICMP that have packets running across the network. The administrator could even detect an employee&#39;s unauthorized internet use by scanning URLs that they find in these packets.</p><p>The network SecOps team could use their packet analyzer during a vulnerability assessment. This could reveal open ports or whether passwords are being sent in cleartext or not. They could also detect any malformed or fragmented packets, which would indicate that someone is trying to get around the firewall.</p><p>Malicious users can also use a protocol analyzer for many of these same purposes. They could use it to fingerprint a system, which means determining which operating system is running based on how the system responds to different types of network traffic.</p><p>Malicious users can also use protocol analyzers to perform active interception. This is when the user intercepts data in order to perform man-in-the-middle attacks, replay and spoofing attacks, or session hijacking.</p><p>MAC flooding is another issue for you to be aware of. A bad actor can connect to a switch and, in short, overload it with fake MAC addresses. MAC flooding essentially turns the switch into a hub and allows the hacker to see all passing traffic.</p><p>Most times, though, protocol analyzers are used for valid purposes. Just be aware that unscrupulous people sometimes use them to get around security systems.</p><h3 id="summary-03-19-03-46" tabindex="-1"><a class="header-anchor" href="#summary-03-19-03-46"><span>Summary 03:19-03:46</span></a></h3><p>That&#39;ll wrap up this lesson. In this lesson, we looked at protocol analyzers and how they work. We also went over protocol analyzers&#39; many uses and misuses, and we saw how you can utilize this tool for your role in system security. Always remember to put the NIC in promiscuous mode to properly capture data when choosing to use a protocol analyzer.</p><h2 id="_11-5-2-protocol-analyzer-facts" tabindex="-1"><a class="header-anchor" href="#_11-5-2-protocol-analyzer-facts"><span>11.5.2 Protocol Analyzer Facts</span></a></h2><p>A protocol analyzer is hardware or software for monitoring and analyzing digital traffic over a network. Protocol analyzers go by other names, such as packet sniffers, packet analyzers, network analyzers, network sniffers, or network scanners.</p><p>This lesson covers the following topics:</p><ul><li>How protocol analyzers work</li><li>Uses of protocol analyzers</li></ul><h3 id="how-protocol-analyzers-work" tabindex="-1"><a class="header-anchor" href="#how-protocol-analyzers-work"><span>How Protocol Analyzers Work</span></a></h3><p>Typically, a protocol analyzer is run on a single device with the intent of capturing frames for all other devices on the network or subnet. Using a packet sniffer this way requires the following configuration changes:</p>',26),e("ul",null,[e("li",null," A network interface card, or NIC, accepts frames addressed only to that NIC by default. To enable the packet sniffer to capture frames sent to other devices, configure the NIC in promiscuous mode (sometimes called p-mode). In p-mode, the NIC processes every frame it sees. "),e("li",null,[t(" When using a switch, the switch only forwards packets to the switch port that holds a destination device. This means that when your packet sniffer is connected to a switch port, it doesn't see traffic sent to other switch ports. To configure the switch to send all frames to the packet sniffing device, configure port mirroring on the switch. With port mirroring, all frames sent to all other switch ports are forwarded on the mirrored port. "),e("div",{class:"info","data-block":`
     A malicious user that is connected to the switch can accomplish the
          same thing by running a MAC flooding attack. This attack essentially
          turns the switch into a hub and traffic is sent to all ports.
    `},[e("div",{class:"to-info-box"},[e("div",{class:"to-info-box-body"},[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null," A malicious user that is connected to the switch can accomplish the same thing by running a MAC flooding attack. This attack essentially turns the switch into a hub and traffic is sent to all ports. ")])])])])])],-1),e("p",null,"By default, a protocol analyzer is a passive device. It copies frames and allows viewing of frame contents, but it does not allow the capture, modification, or re-transmission of frames. This is referred to as passive interception.",-1),e("p",null,"When using a protocol analyzer, the user can filter the frames so they see only the frames with information of interest. You can save the results of a capture to analyze frames at a later time or on a different device.",-1),e("ul",null,[e("li",null," Filters show only those frames or packets to or from specific addresses or frames that include specific protocol types. "),e("li",null," A capture filter captures (records) only the frames identified by the filter. Frames not matching the filter criteria are not captured. "),e("li",null," A display filter shows only the frames that match the filter criteria. Frames not matching the filter criteria are still captured but not shown. ")],-1),e("h3",{id:"uses-of-protocol-analyzers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#uses-of-protocol-analyzers"},[e("span",null,"Uses of Protocol Analyzers")])],-1),e("p",null,"Depending on the role of the user, a protocol analyzer may have different uses. The following table shows some common roles and how they may use a protocol analyzer:",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"},"Role"),e("th",{scope:"col",class:"fw-bold"},"Protocol Analyzer Usage")])]),e("tbody",null,[e("tr",null,[e("td",null,"Network administrator"),e("td",null,[t(" A network administrator can use the protocol analyzer to assist in the management of the network and employee usage. The protocol analyzer can help to: "),e("ul",null,[e("li",null," Monitor and log network traffic as it is transmitted over the network. "),e("li",null,[t(" Check for specific protocols on the network, such as SMTP, DNS, POP3, and ICMP. Identifying the specific protocols helps to: "),e("ul",null,[e("li",null," Identify devices that might be using unallowed protocols, such as ICMP or legacy protocols such as IPX/SPX or NetBIOS. "),e("li",null,"Identify traffic that might be sent by attackers.")])]),e("li",null," Examine the data contained within a packet. For example, by looking at the packet data, the network administrator can identify users who are connecting to unauthorized websites "),e("li",null,"Analyze network performance"),e("li",null," Troubleshoot communication problems or investigate the source of heavy network traffic ")])])]),e("tr",null,[e("td",null,"Security operations"),e("td",null,[t(" The network SecOps team can use the protocol analyzer during a vulnerability assessment. The protocol analyzer can help the SecOps team to: "),e("ul",null,[e("li",null,[t(" Identify frames that might cause errors. For example, the network administrator can: "),e("ul",null,[e("li",null,"Determine which flags are set in a TCP handshake"),e("li",null," Detect any malformed or fragmented packets. This would indicate that someone is trying to get around the firewall. ")])]),e("li",null," Discover passwords and other sensitive data being sent in cleartext "),e("li",null,"Find any open network ports that should not be open.")])])]),e("tr",null,[e("td",null,"Malicious user/hacker"),e("td",null,[t(" A malicious user can use the protocol analyzer to find the same information as the network administrator and SecOps teams. "),e("br"),t(" By themselves, protocol analyzers cannot be used to perform an attack. However, protocol tools can be used with protocol analyzers for active interception of network traffic to perform attacks, such as: "),e("ul",null,[e("li",null,"Spoofing"),e("li",null,"Man-in-the-middle attacks"),e("li",null,"Replay attacks"),e("li",null,"TCP/IP session hijacking"),e("li",null,"MAC flooding")]),e("p",null," A hacker can also use the analyzer to perform system fingerprinting. System fingerprinting identifies which operating system the system is running based on how it responds to different types of network traffic. ")])])])],-1),o('<p>Common protocol analyzers include:</p><ul><li> Wireshark </li><li> Ethereal </li><li> Dsniff </li><li> Ettercap </li><li> Tcpdump </li><li> Windump </li><li> Cain and Abel </li></ul><h2 id="_11-5-3-analyzing-network-traffic" tabindex="-1"><a class="header-anchor" href="#_11-5-3-analyzing-network-traffic"><span>11.5.3 Analyzing Network Traffic</span></a></h2><h3 id="analyzing-network-traffic-00-00-00-42" tabindex="-1"><a class="header-anchor" href="#analyzing-network-traffic-00-00-00-42"><span>Analyzing Network Traffic 00:00-00:42</span></a></h3><p>Wireshark is a network packet analyzer that tries to capture network packets and display the data they carry in as much detail as possible.</p><p>Network professionals use Wireshark to troubleshoot network problems, examine security problems, verify network devices, debug network issues, and more. Wireshark can be installed on Windows, Linux, and other operating systems. It&#39;s not a firewall or intrusion detection system, and it doesn&#39;t keep bad things from happening. But it does a great job of monitoring and measuring activity on a network.</p><p>We&#39;re going to take a very brief look at Wireshark. There are entire courses on Wireshark, and as you progress professionally, you&#39;ll want to learn more about the program.</p><h3 id="wireshark-interface-00-42-02-23" tabindex="-1"><a class="header-anchor" href="#wireshark-interface-00-42-02-23"><span>Wireshark Interface 00:42-02:23</span></a></h3><p>Let&#39;s start with Wireshark&#39;s user interface. I&#39;m on Kali Linux. We&#39;re going to use Wireshark from there. Like most programs, Wireshark has a menu at the top. The File menu is similar to other programs, as you can see when we click on it. The same is true for the other menu items across the top.</p><p>The main toolbar gives you quick access to the most common Wireshark tasks. The two most common items here are the shark fin, or Start, which starts capturing packets, and this square, which turns red when Wireshark is capturing.</p><p>Below that, there&#39;s the Filter toolbar. We&#39;ll come back to this in a few minutes.</p><p>Down here, there&#39;s the Packet List pane. This is where all the captured packets are displayed. It only takes a few minutes to see hundreds or thousands of packets, depending on your network traffic. Each line here is a packet that Wireshark has captured, and it&#39;s separated in columns up here. You can separate packets by source or destination IP addresses or categorize them in other ways. Whichever one is selected up here will display more detailed information down in the Packet Detail pane.</p><p>The Packet Detail pane shows all the details about the selected packet. I can come down here, expand the different areas, and see more details. For those of you who love the OSI model, you&#39;ll be very happy to hear that this is listed in the OSI order.</p><p>Farther down, we have the Packet Bytes pane. This is a hexadecimal dump of the selected packets. Sometimes, you can see readable information over here, in ASCII. If the bytes aren&#39;t readable, this information is replaced with periods.</p><p>And finally, at the bottom, we have the status bar.</p><p>A lot of the Wireshark interface can be customized, but this is what it looks like with the default settings.</p><h3 id="display-filters-02-23-04-42" tabindex="-1"><a class="header-anchor" href="#display-filters-02-23-04-42"><span>Display Filters 02:23-04:42</span></a></h3><p>Okay. Let&#39;s go back to display filters. When you do some sniffing with Wireshark, you&#39;re going to be overwhelmed with all of the packets it will capture. We can filter the ones that aren&#39;t needed. I already ran a scan earlier, and my traffic is here.</p><p>One way to filter is to use the Expression Builder. For example, let&#39;s say I want to filter dhcp. If I look, bootp and dhcp are actually the same thing. If I expand this out, I get lots of things to choose from. I&#39;m going to just leave it as-is.</p><p>Now let&#39;s go over to the Relation box. We have things such as is present. The double equal sign (==) means equal to. The exclamation and equal (!=) means not equal to. The next several should be self-explanatory, but I want to pick the equal to and then, for the value, type in —˜10.10.10.1&#39;, which is my DHCP server. Now, I&#39;ll click OK and see what happens. I&#39;m filtering only my DHCP traffic.</p><p>Now, I want to see if there are any cleartext usernames and passwords here. I can do that several ways. I can create a filter by typing in —˜http contains admin&#39;. As I type, notice the salmon color. As soon as it&#39;s a valid filter, it turns green.</p><p>Let&#39;s come down here and choose this packet. I&#39;m picking it because it has an external public IP address. I&#39;m going to right-click and select Follow TCP Stream. Now it displays the entire stream related to this conversation. Some of it is readable; some is not. I&#39;m looking for the word —œAdmin.— Let&#39;s see if we can just do a find for that. I&#39;ll click on Find Next until I see something worth looking at. Here, it looks like I found something. It&#39;s the word log with the username Admin listed. This is followed by pwd and the password the person typed in. So, with Wireshark, we were able to see a cleartext password. We could also filter other things, like FTP, to find cleartext passwords.</p><p>I&#39;ll come up and clear this filter.</p><p>Another way we can filter is to come down here. If I find something that I think is interesting, I can right-click and apply a filter.</p><p>We could spend an hour looking at filters, but let&#39;s keep moving on here.</p><h3 id="follow-the-conversation-04-42-05-32" tabindex="-1"><a class="header-anchor" href="#follow-the-conversation-04-42-05-32"><span>Follow the Conversation 04:42-05:32</span></a></h3><p>So, we kind of did this already. We know we can look at packets. But what if we wanted to look at the entire conversation between two devices? I can come down here, right-click on one of these, and select Follow TCP Stream. Now, I get this window that pops up with the entire stream. This particular stream isn&#39;t very useful, but you get the idea.</p><p>So, how many different conversations have been going on here? I can figure that out by coming up to Statistics and selecting Conversations. When I do, my conversations are combined. All the packets are organized neatly. I can choose a few different ways to see my data and then sort by the total size of the bytes, largest to smallest. I have some tabs up here, such as IP versions 4 and 6. I can select TCP to display my TCP conversation. Okay. I&#39;ll close this and then clear my filter.</p><h3 id="get-files-out-of-wireshark-05-32-06-26" tabindex="-1"><a class="header-anchor" href="#get-files-out-of-wireshark-05-32-06-26"><span>Get Files out of Wireshark 05:32-06:26</span></a></h3><p>So far, when we look at our packets from Wireshark, we see a bunch of gobbledygook. The good news is that Wireshark has a way to export objects. In our case, we want a file. To do this, we can come up here, to File, go down to Export Objects, and select a category. I can pick HTTP, and I&#39;ll get a list of things that downloaded from the web, or we can get objects from our local Windows network by selecting SMB. That&#39;s the one I&#39;m going to choose. I only have one file. It&#39;s one that I transferred across the network earlier. It&#39;s a jpg image file. I&#39;ll click on Save and pick a place to save it. I&#39;ll pick Desktop, click Save, and close this window.</p><p>Now I&#39;ll minimize Wireshark, go over to my folders, go to Desktop, and here&#39;s the picture that I captured in Wireshark.</p><h3 id="summary-06-26-06-47" tabindex="-1"><a class="header-anchor" href="#summary-06-26-06-47"><span>Summary 06:26-06:47</span></a></h3><p>That&#39;s it for this demo. In this demo, we took a look at Wireshark. We started by going over the Wireshark interface. Then we talked about using filters. We illustrated how to follow conversations in Wireshark. Finally, we ended by exporting an object.</p>',33)]))}const p=s(l,[["render",i],["__file","11.05.ProtocolAnalyzers.html.vue"]]),d=JSON.parse('{"path":"/11/11.05.ProtocolAnalyzers.html","title":"Section 11.5 Protocol Analyzers","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 11.5 Protocol Analyzers","description":"some description"},"headers":[{"level":2,"title":"11.5.1 Protocol Analyzers","slug":"_11-5-1-protocol-analyzers","link":"#_11-5-1-protocol-analyzers","children":[{"level":3,"title":"Protocol Analyzers 00:00-00:42","slug":"protocol-analyzers-00-00-00-42","link":"#protocol-analyzers-00-00-00-42","children":[]},{"level":3,"title":"How Protocol Analyzers Work 00:42-01:35","slug":"how-protocol-analyzers-work-00-42-01-35","link":"#how-protocol-analyzers-work-00-42-01-35","children":[]},{"level":3,"title":"Uses for Protocol Analyzers 01:35-03:19","slug":"uses-for-protocol-analyzers-01-35-03-19","link":"#uses-for-protocol-analyzers-01-35-03-19","children":[]},{"level":3,"title":"Summary 03:19-03:46","slug":"summary-03-19-03-46","link":"#summary-03-19-03-46","children":[]}]},{"level":2,"title":"11.5.2 Protocol Analyzer Facts","slug":"_11-5-2-protocol-analyzer-facts","link":"#_11-5-2-protocol-analyzer-facts","children":[{"level":3,"title":"How Protocol Analyzers Work","slug":"how-protocol-analyzers-work","link":"#how-protocol-analyzers-work","children":[]},{"level":3,"title":"Uses of Protocol Analyzers","slug":"uses-of-protocol-analyzers","link":"#uses-of-protocol-analyzers","children":[]}]},{"level":2,"title":"11.5.3 Analyzing Network Traffic","slug":"_11-5-3-analyzing-network-traffic","link":"#_11-5-3-analyzing-network-traffic","children":[{"level":3,"title":"Analyzing Network Traffic 00:00-00:42","slug":"analyzing-network-traffic-00-00-00-42","link":"#analyzing-network-traffic-00-00-00-42","children":[]},{"level":3,"title":"Wireshark Interface 00:42-02:23","slug":"wireshark-interface-00-42-02-23","link":"#wireshark-interface-00-42-02-23","children":[]},{"level":3,"title":"Display Filters 02:23-04:42","slug":"display-filters-02-23-04-42","link":"#display-filters-02-23-04-42","children":[]},{"level":3,"title":"Follow the Conversation 04:42-05:32","slug":"follow-the-conversation-04-42-05-32","link":"#follow-the-conversation-04-42-05-32","children":[]},{"level":3,"title":"Get Files out of Wireshark 05:32-06:26","slug":"get-files-out-of-wireshark-05-32-06-26","link":"#get-files-out-of-wireshark-05-32-06-26","children":[]},{"level":3,"title":"Summary 06:26-06:47","slug":"summary-06-26-06-47","link":"#summary-06-26-06-47","children":[]}]}],"git":{"updatedTime":1736231937000},"filePathRelative":"11/11.05.ProtocolAnalyzers.md"}');export{p as comp,d as data};
